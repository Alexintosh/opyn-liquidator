{"version":3,"sources":["utils/web3.js","utils/blockNative.js","utils/infura.js","constants/options.js","components/NavBar/ConnectButton.js","components/NavBar/SettingsButton.js","components/NavBar/index.js","components/HomePage/index.js","components/AllContracts/index.js","components/Trade/index.js","components/common/AddressBlock.js","components/common/BalanceBlock.js","components/common/RatioTag.js","components/common/SectionTitle.js","components/common/MaxButton.js","components/common/HelpText.js","components/common/PriceSection.js","components/common/VaultButton.js","utils/graph.js","utils/number.js","utils/calculation.js","components/MyVaults/index.js","components/OptionPage/ExerciseModal.js","components/OptionPage/VaultModal.js","components/OptionPage/VaultsList.js","components/OptionPage/OptionInfoBox.js","components/OptionPage/index.js","components/ManageVault/HeaderDashboard.js","components/ManageVault/CollateralManagement.js","components/ManageVault/IssuedTokenManagement.js","components/ManageVault/Liquidation.js","components/ManageVault/Exercise.js","components/ManageVault/index.js","components/ManagePool/Header.js","components/ManagePool/OptionExchange.js","components/ManagePool/AddLiquidity.js","components/ManagePool/RemoveLiquidity.js","components/ManagePool/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["web3","notify","Notify","dappId","networkId","optionContractABI","require","optionExchangeABI","oracleABI","Web3","getTokenBalance","erc20Token","user","a","oTokenContract","eth","Contract","methods","balanceOf","call","balance","getDecimals","decimals","parseInt","getERC20Symbol","symbol","getERC20Info","address","token","totalSupply","totalSupplyDecimals","getMaxLiquidatable","oToken","vaultOwner","maxOTokensLiquidatable","maxVaultLiquidatable","getUnderlyingRequiredToExercise","tokenToExercise","underlyingRequiredToExercise","underlyringRequired","getAllowance","contract","spender","allowance","getBalance","utils","fromWei","getPrice","oracleAddr","oracle","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","exchange","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","options","addr","title","name","collateral","underlying","strike","strikePrice","minRatio","uniswapExchange","expiry","ETH_ADDRESS","oTokenABI","exchangeABI","uniswapExchangeABI","UINT256_MAX","storedTheme","window","localStorage","getItem","onboard","Onboard","darkMode","subscriptions","wallet","provider","walletSelect","description","wallets","walletName","infuraKey","apiKey","updateModalMode","theme","config","connect","walletCheck","getState","disconnect","walletReset","checkConnectedAndGetAddress","checked","liquidate","oTokenAddr","owner","liquidateAmt","account","send","from","on","hash","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmt","value","toWei","toString","addERC20Collateral","collateralAmt","collateralAmtBN","BigNumber","lt","collateralToken","approve","removeCollateral","redeem","redeemVaultBalance","exercise","amountToExercise","vaults","underlyingRequired","underlyingIsETH","amt","openVault","buyOTokensFromExchange","buyOTokens","sellOTokensFromExchange","sellOTokens","addLiquidity","uniswapAddr","maxToken","minLiquidity","ethInWei","deadline","Math","ceil","Date","now","removeLiquidity","pool_token_amount","min_eth_wei","min_tokens","ConnectButton","setUser","useState","isConnected","setIsConnected","connectWeb3","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","padding","entity","icon","label","ChangeMode","updateTheme","LinkButton","paddingLeft","opacity","fontSize","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","height","goBack","push","secondary","MainButton","iconUrl","width","alt","src","HomePage","display","alignItems","marginRight","marginLeft","AllContracts","fields","entries","entriesPerPage","renderEntry","shorten","goToToken","goToTrade","AddressBlock","BalanceBlock","asset","integer","digits","str","split","length","RatioTag","isSafe","ratio","useCollateral","background","color","mode","SectionTitle","MaxButton","HelperText","parseFloat","toFixed","PriceSection","forceDisplay","ManageVaultButton","goToManagePage","OpenVaultButton","getAllVaultsForOption","optionAddress","query","postQuery","response","data","getAllVaultsForUser","actions","getLiquidationHistory","liquidationActionsQuery","liquidateActions","getExerciseHistory","option","exerciseActions","method","headers","body","JSON","stringify","fetch","res","json","toBaseUnitBN","rawAmt","raw","base","decimalsBN","times","pow","integerValue","toTokenUnitsBN","tokenAmount","tokenDecimals","_amt","_digits","div","formatDigits","num","percision","timeSince","timeStamp","secondsPast","getTime","ts","getDate","toDateString","match","replace","getFullYear","compareVaultRatio","vaultA","vaultB","rateA","rateB","comparison","compareVaultIssued","amountA","oTokensIssued","amountB","calculateStrikeValueInCollateral","collateralDecimals","undefined","strikeValueInWei","strikeValueInCollateral","collateralValueInWei","calculateRatio","tokenIssued","Infinity","colalteralBN","tokenIssuedBN","strikePriceBN","toNumber","Promise","MyVaults","opendVaults","setOpenedVaults","tokensToOpen","setTokensToOpen","useMemo","userVaults","openedVaults","notOpenedTokens","map","entry","find","vault","optionsContract","isOpened","collatearlIsETH","oTokenName","sort","paddingBottom","ExerciseModal","underlyingDecimals","underlyingSymbol","userUnderlyingBalance","setUserUnderlyingBalance","userOTokenBalance","setUserOTokenBalance","opened","setOpened","exerciseAmount","setExerciseAmount","setUnderlyringRequired","nonEmptyVaults","filter","selectedIndexes","setSelectedIndexes","selectedHasEnoughCollateral","setHasEnoughCollateral","userUnderlying","checkHasEnoughToken","sumIssued","reduce","accumulator","current","plus","gt","gte","onChangeExerciseAmt","amount","underlyingRawAmt","index","visible","onClose","heading","type","wide","adornment","adornmentPosition","onChange","event","target","renderSelectionCount","count","selection","onSelectEntries","indexes","disabled","vaultowners","VaultModal","collateralAsset","collateralIsETH","addValue","setAddValue","setLiquidateAmt","isCancelled","maxLiquidatable","getData","VaultOwnerList","vaultUsesCollateral","isLoading","setIsLoading","vaultsWithDetail","setVaultDetail","page","setPage","updateInfo","vaultDetail","id","setInterval","clearInterval","onPageChange","status","OptionOverview","tokenName","totalCollateral","setTotalCollateral","setTotalSupply","_totalCollateral","rawCollateralBalance","init","OptionPage","useParams","setVaults","setCollateralDecimals","setUnderlyingDecimals","setUnderlyingSymbol","_decimals","all","_symbol","OptionInfoBox","VaultsList","HeaderDashboard","newRatio","tokenInUnit","collateralBalance","CollateralManagement","isOwner","collateralAssetBalance","strikeValue","setNewRatio","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","collateralSymbol","setCollateralSymbol","updateNewRatio","newCollateral","amtRaw","newCollateralInWei","collateralBalanceRaw","newCollateralWei","minus","minRatioBN","minCollateral","maxToRemove","maxToRemoveInTokenUnit","IssuedTokenManagement","tokenBalance","setIssueAmt","setBurnAmt","newAmt","lte","intputAmt","amountBN","onChangeIssueAmt","maxToIssueRaw","maxToIssue","onChangeBurnAmt","issued","maxToBurn","LiquidationHistory","userTokenBalance","setMaxLiquidatable","setEntries","amountToLiquidate","setAmtToLiquidate","maxToLiquidate","updateLiquidatable","actionsForThisVault","updateList","maximum","min","amtToLiquidate","collateralToPay","liquidator","timestamp","transactionHash","transaction","ExerciseHistory","amtCollateralToPay","oTokensToExercise","exerciser","ManageVault","tabSelected","setTabSelected","setVault","setStrikeValue","setRatio","ownerTokenBalance","setOwnerTokenBalance","setUserTokenBalance","userCollateralAssetBalance","setUserCollateralAssetBalance","noVault","setNoVault","_ownerTokenBalance","_userTokenBalance","_collateralDecimals","_tokenBalance","_ownerTokenBalanceBN","_userTokenBalanceBN","textAlign","end","items","selected","Liquidation","Exercise","poolETHBalance","poolTokenBalance","OptionExchange","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","updatePremiumToPay","butAmountBN","premium","updatePremiumReceived","sellAmountBN","AddLiquidity","otoken","otokenSymbol","otokenDecimals","userETHBalance","liquidityTokenDecimals","liquidityTokenSupply","amtETHToAdd","setAmtETHToAdd","amtTokenToAdd","setAmtTokenToAdd","liquidityMinted","liquidityMintedMin","ethToTokenRatio","tokenToEthRatio","onChangeTokenAmtToSend","tokenAmt","newEthAmt","newTokenAmt","onChangeETHAmtToSend","ethWei","RemoveLiquidity","userliquidityTokenBalance","amtLiquidityTokenToSell","setAmtLiquidityTokenToSell","poolPortion","estETHRecieved","estOTokenReceived","minETHReceived","minTokenReceived","tokenAmtBN","min_eth","min_token","ManagePool","setPoolTokenBalance","setPoolETHBalance","setUserETHBalance","setUserLiquidityTokenBalance","setLiquidityTokenSupply","setLiquidityTokenDecimals","updatePoolInfo","exTokenBalance","exchagneETHBalance","liquidityTokenInfo","liqTokenDecimal","liqTokenTotalSupply","exchangeTokenBalance","updateUserInfo","liqTokenBalance","userLiqTokenBalance","Footer","backgroundColor","position","left","bottom","external","href","App","setTheme","assetsUrl","process","setItem","path","children","Trade","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.18653a4a.chunk.js","sourcesContent":["import Web3 from 'web3';\nimport BigNumber from 'bignumber.js'\nimport Onboard from 'bnc-onboard';\n\nimport { notify } from './blockNative';\nimport { getAllowance } from './infura';\nimport { ETH_ADDRESS } from '../constants/options'\n\nconst oTokenABI = require('../constants/abi/OptionContract.json');\nconst exchangeABI = require('../constants/abi/OptionExchange.json');\nconst uniswapExchangeABI = require('../constants/abi/UniswapExchange.json');\n\nconst DEADLINE_FROM_NOW = 60 * 15;\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nconst storedTheme = window.localStorage.getItem('theme')\n\nconst onboard = Onboard({\n  darkMode: storedTheme==='dark',\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06', // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  walletSelect: {\n    description: \"Please select a wallet to connect to Opyn Dashboard\",\n    wallets: [\n      { walletName: 'metamask' },\n      {\n        walletName: 'walletConnect',\n        infuraKey: '44fd23cda65746a699a5d3c0e2fa45d5'\n      },\n      {\n        walletName: 'fortmatic',\n        apiKey: 'pk_live_3009900A5E842CD5'\n      },\n      { walletName: 'trust' },\n      { walletName: 'coinbase' },\n      { walletName: \"status\" },\n    ]\n  }\n});\n\nlet web3;\n\nexport const updateModalMode = async(theme) => {\n  const darkMode = theme === 'dark'\n  onboard.config({ darkMode })\n}\n\nexport const connect = async () => {\n  const selected = await onboard.walletSelect();\n  if (!selected) return false\n  const checked = await onboard.walletCheck();\n  if(!checked) return false\n  return onboard.getState().address;\n};\n\nexport const disconnect = async() => {\n  onboard.walletReset()\n}\n\nexport const checkConnectedAndGetAddress = async() => {\n  let checked = false\n  try {\n    checked = await onboard.walletCheck();\n  } catch (error) {\n    await onboard.walletSelect()\n    checked = await onboard.walletCheck();\n    \n  } finally {\n    if (checked) return onboard.getState().address;\n  }\n}\n\nexport const liquidate = async (oTokenAddr, owner, liquidateAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .liquidate(owner, parseInt(liquidateAmt))\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const burnOToken = async (oTokenAddr, burnAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .burnOTokens(burnAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const issueOToken = async (oTokenAddr, issueAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .issueOTokens(issueAmt, account)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .addETHCollateral(owner)\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * \n * @param {string} collaral \n * @param {string} oTokenAddr \n * @param {string} owner \n * @param {number|string} collateralAmt in min unit\n */\nexport const addERC20Collateral = async (collateral, oTokenAddr, owner, collateralAmt) => {\n  const collateralAmtBN = new BigNumber(collateralAmt)\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const allowance = await getAllowance(collateral, account, oTokenAddr);\n  // Approve to move collateral \n  if (new BigNumber(allowance).lt(collateralAmtBN)) {\n    const collateralToken = new web3.eth.Contract(oTokenABI, collateral)\n    await collateralToken.methods\n      .approve(oTokenAddr, UINT256_MAX)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } \n  await oToken.methods\n    .addERC20Collateral(owner, collateralAmtBN.toString())\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n\n}\n\n/**\n * \n * @param {string} collateral \n * @param {string} oTokenAddr \n * @param {string} collateralAmt in base unit\n */\nexport const removeCollateral = async (collateral, oTokenAddr, collateralAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if(collateral === ETH_ADDRESS) {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\nexport const redeem = async(token) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .redeemVaultBalance()\n    .send({from: account})\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n}\n\n/**\n * Exercise your oTokens\n * @param {string} oTokenAddr \n * @param {string} underlying asset type\n * @param {string} amountToExercise \n * @param {string[]} vaults vault owners\n */\nexport const exercise = async(oTokenAddr, underlying, amountToExercise, vaults) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const underlyingRequired = await oToken.methods.underlyingRequiredToExercise(amountToExercise).call()\n  \n  const underlyingIsETH = underlying === ETH_ADDRESS\n\n  if (!underlyingIsETH) {\n    const allowance = await getAllowance(underlying, account, oTokenAddr)\n    if(new BigNumber(allowance).lt(new BigNumber(underlyingRequired)))\n    await approve(underlying, oTokenAddr, UINT256_MAX)\n  }\n\n  await oToken.methods\n    .exercise(amountToExercise, vaults)\n    .send({from: account, value: underlyingIsETH ? underlyingRequired : '0'})\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n}\n\nexport const approve = async (oTokenAddr, spender, amt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVault = async (oTokenAddr) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .openVault()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Option Exchange\n\nexport const buyOTokensFromExchange = async (oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .buyOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      buyAmt\n    )\n    .send({ from: account, value: ethAmt })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const sellOTokensFromExchange = async (oTokenAddr, exchangeAddr, sellAmt) => {\n  const account = await checkConnectedAndGetAddress()  \n  const allowance = await getAllowance(oTokenAddr, account, exchangeAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(sellAmt))) {\n    await approve(oTokenAddr, exchangeAddr, UINT256_MAX);\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .sellOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      sellAmt\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Uniswap Exchange\n\n/**\n *\n */\nexport const addLiquidity = async (oToken, uniswapAddr, maxToken, minLiquidity, ethInWei) => {\n  const account = await checkConnectedAndGetAddress()\n  const allowance = await getAllowance(oToken, account, uniswapAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(maxToken))) {\n    await approve(oToken, uniswapAddr, UINT256_MAX);\n  }\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .addLiquidity(\n      minLiquidity, // min_liquidity\n      maxToken, // max_tokens\n      deadline // deadline\n    )\n    .send({ from: account, value: ethInWei })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n */\nexport const removeLiquidity = async (uniswapAddr, pool_token_amount, min_eth_wei, min_tokens) => {\n  const account = await checkConnectedAndGetAddress()\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .removeLiquidity(pool_token_amount, min_eth_wei, min_tokens, deadline)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","import Notify from \"bnc-notify\"\n\nexport const notify = Notify({\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06',\n  networkId: 1\n});\n\n","import Web3 from 'web3';\n\nconst optionContractABI = require('../constants/abi/OptionContract.json');\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json');\nconst oracleABI = require('../constants/abi/Oracle.json');\n\nconst Promise = require('bluebird');\nconst web3 = new Web3('https://mainnet.infura.io/v3/44fd23cda65746a699a5d3c0e2fa45d5');\n\n// ERC20 Info\n\n/**\n * \n * @param {string} erc20Token address\n * @param {string} user address\n * @return {Promise<string>}\n */\nexport const getTokenBalance = async (erc20Token, user) => {\n  if (user === '') return '0'\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const balance = await oTokenContract.methods.balanceOf(user).call();\n  return balance;\n};\n\nexport const getDecimals = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const decimals = await oTokenContract.methods.decimals().call();\n  return parseInt(decimals);\n};\n\nexport const getERC20Symbol = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  return await oTokenContract.methods.symbol().call();\n}\n\nexport const getERC20Info = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const totalSupplyDecimals = await token.methods.totalSupply().call();\n  const decimals = await token.methods.decimals().call();\n  const totalSupply = parseInt(totalSupplyDecimals) / 10 ** parseInt(decimals);\n  return { decimals, totalSupply };\n};\n\n// Option Contract\n\n/**\n * todo: use graph ql\n * @param {Array<string>} owners\n * @param {string} oToken\n */\nexport const getVaults = async (owners, oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n\n  const vaults = await Promise.map(owners, async (owner) => {\n    const res = await oTokenContract.methods.getVault(owner).call();\n    const collateral = web3.utils.fromWei(res[0]);\n    const oTokensIssued = res[1];\n    const underlying = res[2];\n    return { collateral, oTokensIssued, underlying, owner, oToken };\n  });\n  return vaults;\n};\n\n/**\n * Compare user balance with max liquidatable and decide max liquidatable\n * @param {string} oToken \n * @param {string} owner \n * @param {string} liquidator \n */\nexport const getMaxToLiquidate = async (oToken, owner, liquidator) => {\n  const maxVaultLiquidatable = await getMaxLiquidatable(oToken, owner)\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const userbalance = liquidator ? await oTokenContract.methods.balanceOf(liquidator).call() : 0;\n\n  const maxLiquidatable = Math.min(\n    parseInt(userbalance, 10),\n    parseInt(maxVaultLiquidatable, 10)\n  ).toString();\n\n  return parseInt(maxLiquidatable);\n};\n\n/**\n * Max liquidatable for given vault\n * @param {string} oToken \n * @param {string} owner \n * @return {Promise<number>}\n */\nexport const getMaxLiquidatable = async (oToken, vaultOwner) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable = await oTokenContract.methods.maxOTokensLiquidatable(vaultOwner).call();\n  return parseInt(maxVaultLiquidatable)\n}\n\n\n/**\n * \n * @param {string} oToken \n * @param {string} tokenToExercise \n * @return {Promise<string>}\n */\nexport const getUnderlyingRequiredToExercise = async (oToken, tokenToExercise) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const underlyringRequired = await oTokenContract.methods.underlyingRequiredToExercise(tokenToExercise).call();\n  // console.log(`what `, underlyringRequired)\n  return underlyringRequired\n}\n\nexport const getAssetsAndOracle = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const [oracle, underlying, strike, minRatioObj, strikePriceObj] = await Promise.all([\n    token.methods.COMPOUND_ORACLE().call(),\n    token.methods.underlying().call(),\n    token.methods.strike().call(),\n    token.methods.minCollateralizationRatio().call(),\n    token.methods.strikePrice().call(),\n  ]);\n  const strikePrice = strikePriceObj[0] * 10 ** strikePriceObj[1];\n  const minRatio = minRatioObj[0] * 10 ** minRatioObj[1];\n  return { underlying, strike, minRatio, strikePrice, oracle };\n};\n\n/**\n * \n * @param {string} contract \n * @param {string} user \n * @param {string} spender \n * @return {Promise<string>}\n */\nexport const getAllowance = async (contract, user, spender) => {\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call();\n  return allowance;\n};\n\n/**\n * Get balance in eth for the account\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  if (address === '') return '0'\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\n/**\n * Get price of token in unit of wei\n * @param {string} oracleAddr \n * @param {string} token \n * @returns {Promise<string>}\n */\nexport const getPrice = async (oracleAddr, token) => {\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return price; // unit: wei/ per token\n};\n\n// Option Exchange\nexport const getPremiumToPay = async (exchangeAddr, tokenToBuy, buyAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const paymentToken = '0x0000000000000000000000000000000000000000';\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call();\n  return web3.utils.fromWei(premiumToPay);\n};\n\nexport const getPremiumReceived = async (exchangeAddr, tokenToSell, sellAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const payoutToken = '0x0000000000000000000000000000000000000000';\n  const premiumReceived = await exchange.methods\n    .premiumReceived(tokenToSell, payoutToken, sellAmt)\n    .call();\n  return web3.utils.fromWei(premiumReceived);\n};\n\n// uniswapExchange","export const options = [\n  {\n    addr: '0x48ab8a7d3bf2eb942e153e4275ae1a8988238dc7',\n    title: 'Opyn ETH Put $100',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/03/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    underlying: \"0x0000000000000000000000000000000000000000\",\n    strike: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n    strikePrice: 1e-6,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x30651Fc7F912f5E40AB22F3D34C2159431Fb1c4F',\n    expiry: 1585958340\n  },\n  {\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    title: 'cDai Insurance',\n\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xA6923533A6362008e9b536271C2Bdc0FF1467D3c',\n    expiry: 1612915200\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\",\n    strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xE3A0a2431a093fed99037987eD0A88550e5E79AA',\n    expiry: 1612915200\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n     // constants in contract\n     symbol: 'oCRV',\n     name: 'Opyn y.curve.fi Insurance',\n     decimals: 8,\n     oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n     collateral: '0x0000000000000000000000000000000000000000',\n     underlying: \"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8\",\n     strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n     strikePrice: 9.2e-16,\n     minRatio: 1.6,\n     exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n     uniswapExchange: '0x21f5E9D4Ec20571402A5396084B1634314A68c97',\n     expiry: 1585440000\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 2e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x8a0976500EED661202810bAB030a057DF15c4CC9',\n    expiry: 1612915200\n  },\n]\n\nexport const ETH_ADDRESS = '0x0000000000000000000000000000000000000000'","import React, { useState } from 'react';\nimport { Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase } from '@aragon/ui';\n\nimport { connect, disconnect } from '../../utils/web3';\n\nfunction ConnectButton({ user, setUser }) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n    return true;\n  };\n\n  const disconnectWeb3 = async () => {\n    await disconnect();\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{paddingTop: 5, paddingRight: 5}}>\n      <LinkBase onClick={disconnectWeb3} size='small' > <IconPower /> </LinkBase>\n      </div>\n      <Box padding={6}>\n        <IdentityBadge entity={user} />\n      </Box>\n      \n    </>\n  ) : (\n    <Button icon={<IconConnect />} label={'Connect'} onClick={connectWeb3} />\n  );\n}\n\nexport default ConnectButton;\n","import React from 'react';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\nfunction ChangeMode({theme, updateTheme}) {\n\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark')\n    else updateTheme('light')\n  }\n\n    return (\n      <Button \n      icon={ theme === 'dark' ? <IconStar/> : <IconStarFilled/>} \n      onClick={handleChangeTheme}\n      label={ 'Theme' }\n      />\n    );\n  \n}\n\nexport default ChangeMode;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SettingsButton';\nimport { Bar, BackButton, LinkBase } from '@aragon/ui';\n\nfunction NavBar({ theme, updateTheme, user, setUser }) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n\n  return (\n    <Bar\n      primary={\n        isHome ? (\n          <></>\n        ) : (\n          <>\n            <div style={{ height: '100%' }}>\n              <BackButton onClick={()=>{\n                history.goBack();\n              }} />\n            </div>\n            <LinkButton title='My Vaults' onClick={()=>{history.push('/myvaults/')}} />\n            <LinkButton title='All Contracts' onClick={()=>{history.push('/options/')}} />\n            <LinkButton title='Trade' onClick={()=>{history.push('/trade/')}} />\n          </>\n        )\n      }\n      secondary={\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      }\n    ></Bar>\n  );\n}\n\nfunction LinkButton ({title, onClick}){\n  return(\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}> \n        <div style={{padding: '1%', opacity:0.5, fontSize: 17}}>\n            {title}\n        </div>\n        </LinkBase>\n    </div>\n  )\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Header, Box, LinkBase } from '@aragon/ui';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header primary='Welcome to Opyn Dashboard' />\n      <div style={{ padding: 5, opacity: 0.5 }}> Tools for DeFi Risk Management. </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%', marginRight: '3%' }}>\n          <MainButton title='My Vaults' description='Manage collateral, Mint/Burn oTokens' iconUrl='https://opyn.co/static/media/1.68813886.svg'  onClick={()=>{\n            history.push('/myvaults')\n          }} />\n        </div>\n\n        <div style={{ width: '30%' }}>\n          <MainButton title='All Contracts' description=' Monitor and liquidate vaults.' iconUrl='https://opyn.co/static/media/2.18d22be0.svg'  onClick={()=>{\n            history.push('/options/')\n          }} />\n        </div>\n\n        <div style={{ width: '30%', marginLeft: '3%' }}>\n          <MainButton title='Trade' description='Buy, Sell or Provided Liquidity.' iconUrl='https://opyn.co/static/media/3.4da8b24d.svg'  onClick={()=>{\n            history.push('./trade')\n          }} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction MainButton({ title, description, iconUrl, onClick }) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding:10, fontSize: 18 }}>{title}</div>\n        <img alt='icon' style={{ padding:10, height:64 }} src={iconUrl}></img>\n        <div style={{ paddingTop: 5, opacity: 0.5 }}> {description} </div>\n        \n      </Box>\n    </LinkBase>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/options';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToToken = (addr) => {\n    history.push(`/option/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='All Contracts' />\n      <div style={{padding: 5, opacity:0.5}}> Choose an option contract to proceed </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/options';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToTrade = (addr) => {\n    history.push(`/trade/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='Trade' />\n      <div style={{padding: 5, opacity:0.5}}> Choose an option contract to proceed </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToTrade(addr)}> Start Trading </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React from 'react'\n\nimport { IdentityBadge } from '@aragon/ui'\n\nfunction AddressBlock({label, address}){\n\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}> {label} </div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten={true} />\n      </div>\n    </>\n  );\n};\n\nexport default AddressBlock","import React from 'react'\n\n/**\n * \n * @param {{balance: number | string | BigNumber}} param0 \n */\nfunction BalanceBlock({asset, balance}){\n  let integer = '0',\n    digits = '0';\n  if (balance > 0) {\n    const str = balance.toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}> {asset} </div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>.\n        <span style={{ fontSize: 18 }}> {digits} </span>\n      </div>\n    </>\n  );\n};\n\nexport default BalanceBlock","import React from 'react';\n\nimport { Tag } from '@aragon/ui';\n\nfunction RatioTag({ isSafe, ratio, useCollateral = true }) {\n  return !useCollateral ? (\n    <Tag color='#78827a' background='#c0c2c0'>\n      Cool\n    </Tag>\n  ) : isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background='#FFEBAD' color='#FEC100'>\n        {' '}\n        Danger{' '}\n      </Tag>\n    ) : (\n      <Tag mode='new'> safe </Tag>\n    )\n  ) : (\n    <Tag color='#E34343' background='#FFC6C6'>\n      Unsafe!\n    </Tag>\n  );\n}\n\nexport default RatioTag;\n","import React from 'react';\n\nfunction SectionTitle({ title }) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n\nexport default SectionTitle","import React from 'react'\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nexport default MaxButton","import React from 'react'\n\nfunction HelperText({ label, amt }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default HelperText","import React from 'react'\n\nfunction PriceSection({ label, amt, symbol = '', forceDisplay=false }) {\n  if (parseFloat(amt) > 0 || forceDisplay) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default PriceSection","import React from 'react'\nimport { Button } from '@aragon/ui'\nimport { useHistory } from 'react-router-dom';\nimport { openVault } from '../../utils/web3'\n\nfunction ManageVaultButton({ oToken, owner }) {\n  const history = useHistory();\n  const goToManagePage = (oToken, owner) => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n  return <Button onClick={() => goToManagePage(oToken, owner)} label='Manage'></Button>;\n}\n\nfunction OpenVaultButton({ oToken, user }) {\n  const history = useHistory();\n\n  const openAndGoToVault = () => {\n    openVault(oToken)\n    history.push(`/manage/${oToken}/${user}`);\n  }\n\n  return <Button \n    onClick={() => openAndGoToVault(oToken)} \n    label='Open Vault'\n    />;\n}\n\nexport { ManageVaultButton, OpenVaultButton }","// const prefix = 'https://cors-anywhere-anton.herokuapp.com/';\nconst opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn'\n\n/**\n * @return {Promise<Array<{colalteral: string, oTokensIssued: string, owner: string}>>}\n */\nexport async function getAllVaultsForOption(optionAddress){\n  const query = `\n  {\n    vaults(where: {\n      optionsContract: \"${optionAddress}\"\n    }) {\n      owner\n      oTokensIssued,\n      collateral,\n    }\n  }`\n  const response = await postQuery(query)\n  const vaults = response.data.vaults\n  return vaults\n}\n\nexport async function getAllVaultsForUser(owner){\n  const query = `{\n    vaults (where: {owner: \"${owner}\"}) {\n      optionsContract {\n        address\n      }\n      oTokensIssued,\n      collateral,\n    }\n  }`\n  const response = await postQuery(query)\n  const actions = response.data.vaults\n  return actions\n}\n\nexport async function getLiquidationHistory(owner) {\n  const query = liquidationActionsQuery(owner);\n  const response = await postQuery(query)\n  return response.data.liquidateActions\n}\n\nconst liquidationActionsQuery = (owner) => `{\n  liquidateActions(where: {\n    vault_contains: \"${owner}\"\n  }) {\n    vault {\n      owner,\n      optionsContract {\n        address\n      }\n    },\n    liquidator,\n    collateralToPay,\n    timestamp\n    transactionHash\n  }\n}\n\n`\n\n/**\n * Get all exercise history for one user\n * @param {string} owner vault owner\n * @param {string} option contract address\n * @return {Promise<{amtCollateralToPay: string, exerciser:string, oTokensToExercise:string, timestamp:string, transactionHash: string}>}\n */\nexport async function getExerciseHistory(owner, option) {\n  const query = `{\n    exerciseActions (where: {\n      vault_contains: \"${owner}\"\n      optionsContract_contains: \"${option}\"\n    }) {\n      exerciser\n      oTokensToExercise\n      amtCollateralToPay\n      transactionHash\n      timestamp\n    }\n  }`\n\n  const response = await postQuery(query)\n  return response.data.exerciseActions\n}\n\nconst postQuery = async (query) => {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  }\n  const res = await fetch(opynGraphEndpoint,  options)\n  return await res.json()\n}","import Web3 from 'web3'\nimport BigNumber from 'bignumber.js'\nconst web3 = new Web3()\n\n/**\n * Convert 10.999 to 10999000\n * @param {number|string|BigNumber} rawAmt \n * @param {number} decimals \n * @returns {BigNumber}\n */\nexport function toBaseUnitBN(rawAmt, decimals) {\n  const raw = new BigNumber(rawAmt)\n  const base = new BigNumber(10)\n  const decimalsBN = new BigNumber(decimals)\n  return raw.times(base.pow(decimalsBN)).integerValue()\n}\n\n/**\n * Convert 10999000 to 10.999\n * @param {string | number | BigNumber} tokenAmount in base unit\n * @param {number} tokenDecimals \n * @return {BigNumber}\n */\nexport const toTokenUnitsBN = (tokenAmount, tokenDecimals) => {\n  const _amt = new BigNumber(tokenAmount)\n  const _digits = new BigNumber(10).pow(new BigNumber(tokenDecimals))\n  return _amt.div(_digits)\n}\n\nexport function formatDigits(num, percision) {\n  return parseFloat(num).toFixed(percision)\n}\n\nexport const fromWei = web3.utils.fromWei\nexport const toWei = web3.utils.toWei\n\nexport function timeSince(timeStamp) {\n  var now = new Date(),\n    secondsPast = (now.getTime() - timeStamp) / 1000;\n  if (secondsPast < 60) {\n    return parseInt(secondsPast) + 's ago';\n  }\n  if (secondsPast < 3600) {\n    return parseInt(secondsPast / 60) + 'm ago';\n  }\n  if (secondsPast <= 86400) {\n    return parseInt(secondsPast / 3600) + 'h ago';\n  }\n  if (secondsPast > 86400) {\n    const ts = new Date(timeStamp)\n    const day = ts.getDate();\n    const month = ts.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \", \"\");\n    const year = ts.getFullYear() === now.getFullYear() ? \"\" : \" \" + ts.getFullYear();\n    return day + \" \" + month + year;\n  }\n}\n\nexport function compareVaultRatio(vaultA, vaultB) {\n  const rateA = vaultA.ratio;\n  const rateB = vaultB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n\nexport function compareVaultIssued(vaultA, vaultB) {\n  const amountA = vaultA.oTokensIssued;\n  const amountB = vaultB.oTokensIssued;\n\n  let comparison = 0;\n  if (parseInt(amountA) > parseInt(amountB)) {\n    comparison = -1;\n  } else if (parseInt(amountA) < parseInt(amountB)) {\n    comparison = 1;\n  }\n  return comparison;\n}\n\n","import BigNumber from 'bignumber.js'\nimport { getPrice, getDecimals } from './infura'\nimport { toBaseUnitBN } from './number'\n\n\n/**\n * Get strike value in collateral for ratio calculation.\n * @param {string} collateral address\n * @param {string} strike address\n * @param {string} oracle address\n * @param {number?} collateralDecimals if provided, wont get again if needed\n * @return {Promise<BigNumber>}\n */\nexport const calculateStrikeValueInCollateral = async(collateral, strike, oracle, collateralDecimals=undefined ) => {\n  const ETH_Address = '0x0000000000000000000000000000000000000000'\n  let strikeValueInCollateral;\n  if (collateral === ETH_Address) {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    strikeValueInCollateral = new BigNumber(strikeValueInWei);\n  } else if (collateral === strike) {\n    // No collateral, like ETH option\n    if (collateralDecimals===undefined) \n      collateralDecimals = await getDecimals(collateral)\n    strikeValueInCollateral = new BigNumber(10).pow(new BigNumber(collateralDecimals));\n  } else {\n    // Use other ERC20 as collateral : Untested\n    if (collateralDecimals===undefined) \n      collateralDecimals = await getDecimals(collateral)\n    const strikeValueInWei = await getPrice(oracle, strike);\n    const collateralValueInWei = await getPrice(oracle, collateral);\n    strikeValueInCollateral = toBaseUnitBN(\n      parseInt(strikeValueInWei) / parseInt(collateralValueInWei),\n      collateralDecimals\n    );\n  }\n  return strikeValueInCollateral\n}\n\n/**\n * \n * @param {string|number|BigNumber} collateral number of collateral in base unit\n * @param {string|number|BigNumber} tokenIssued number of token in base unit\n * @param {string|number|BigNumber} strikePrice \n * @param {BigNumber} strikeValueInCollateral \n * @return {number}\n */\nexport const calculateRatio = (collateral, tokenIssued, strikePrice, strikeValueInCollateral) => {\n  if (tokenIssued === '0') return Infinity\n  const colalteralBN = new BigNumber(collateral)\n  const tokenIssuedBN = new BigNumber(tokenIssued)\n  const strikePriceBN = new BigNumber(strikePrice)\n  // const strikeValueInCollateralBN = new BigNumber(strikeValueInCollateral.toString())\n  const result = (colalteralBN.div(tokenIssuedBN)).div(strikePriceBN).div(strikeValueInCollateral)\n  return result.toNumber()\n}","import React, { useState, useMemo } from 'react';\n\nimport { Header, DataView, IdentityBadge } from '@aragon/ui';\nimport { options, ETH_ADDRESS } from '../../constants/options';\nimport { SectionTitle, ManageVaultButton, OpenVaultButton } from '../common';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { formatDigits, compareVaultRatio, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getDecimals } from '../../utils/infura';\n\nconst Promise = require('bluebird');\n\nfunction MyVaults({ user }) {\n  const [opendVaults, setOpenedVaults] = useState([]);\n  const [tokensToOpen, setTokensToOpen] = useState([]);\n  const isConnected = user !== '';\n\n  // Only request all vaults once\n  useMemo(async () => {\n    if (!isConnected) return;\n    const userVaults = await getAllVaultsForUser(user);\n    const openedVaults = [];\n    const notOpenedTokens = [];\n    await Promise.map(options, async (option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      const isOpened = entry !== undefined;\n      const collatearlIsETH = option.collateral === ETH_ADDRESS;\n      if (isOpened) {\n        const collateralDecimals = collatearlIsETH ? 18 : await getDecimals(option.collateral);\n        const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n          option.collateral,\n          option.strike,\n          option.oracle,\n          collateralDecimals\n        );\n        const ratio = calculateRatio(\n          entry.collateral,\n          entry.oTokensIssued,\n          option.strikePrice,\n          strikeValueInCollateral\n        );\n        openedVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          collateralDecimals: collateralDecimals,\n          ratio,\n        });\n      } else {\n        notOpenedTokens.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n        });\n      }\n    });\n    setOpenedVaults(openedVaults.sort(compareVaultRatio));\n    setTokensToOpen(notOpenedTokens);\n  }, [isConnected, user]);\n\n  return (\n    <>\n      <Header primary={'My Vaults'} />\n      {isConnected ? (\n        <>\n          {opendVaults.length > 0 ? (\n            <div style={{ paddingBottom: '3%' }}>\n              <SectionTitle title={'Existing Vaults'} />\n              <DataView\n                fields={['Token', 'contract', 'collateral', 'Ratio', '']}\n                entries={opendVaults}\n                entriesPerPage={6}\n                renderEntry={({ oToken, oTokenName, collateral, collateralDecimals, ratio }) => {\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} />,\n                    formatDigits(toTokenUnitsBN(collateral, collateralDecimals).toNumber(), 5),\n                    formatDigits(ratio, 4),\n                    <ManageVaultButton oToken={oToken} owner={user} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n          {tokensToOpen.length > 0 ? (\n            // Show vaults to open\n            <div>\n              <SectionTitle title={'Open new vaults'} />\n              <DataView\n                fields={['Token', 'contract', 'manage']}\n                entries={tokensToOpen}\n                renderEntry={({ oToken, oTokenName }) => {\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} shorten={false} />,\n                    <OpenVaultButton oToken={oToken} user={user} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </>\n      ) : (\n        // Not connected to wallet\n        <div style={{ padding: 5, opacity: 0.5 }}> Please connect wallet to proceed </div>\n      )}\n    </>\n  );\n}\n\nexport default MyVaults;\n","import React, { useState, useMemo } from 'react';\n\nimport { exercise } from '../../utils/web3';\nimport { PriceSection } from '../common';\nimport { getUnderlyingRequiredToExercise, getBalance, getTokenBalance } from '../../utils/infura';\nimport { toTokenUnitsBN, toBaseUnitBN, formatDigits, compareVaultIssued } from '../../utils/number';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  DataView,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\n/**\n *\n * @param {{\n * oToken: string,\n * option: { decimals: number, underlying:string }\n * collateralDecimals: Number\n * underlyingDecimals: Number\n * underlyingSymbol: string\n * vaults: { collateral:string, oTokensIssued: string, owner:string, symbol:string }[]\n * underlyingIsETH: boolean\n * }} param0\n */\nfunction ExerciseModal({\n  user,\n  oToken,\n  option,\n  vaults,\n  collateralDecimals,\n  underlyingDecimals,\n  underlyingSymbol,\n  underlyingIsETH,\n}) {\n  const [userUnderlyingBalance, setUserUnderlyingBalance] = useState(new BigNumber(0));\n  const [userOTokenBalance, setUserOTokenBalance] = useState(new BigNumber(0));\n\n  const [opened, setOpened] = useState(false);\n\n  const [exerciseAmount, setExerciseAmount] = useState(new BigNumber(0));\n  const [underlyringRequired, setUnderlyringRequired] = useState(new BigNumber(0));\n\n  const nonEmptyVaults = vaults\n    .filter((vault) => parseInt(vault.collateral) > 0)\n    .sort(compareVaultIssued);\n\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\n  const [selectedHasEnoughCollateral, setHasEnoughCollateral] = useState(false);\n\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  // Update user balance\n  useMemo(async () => {\n    if (!user) return;\n    let userUnderlying;\n    if (underlyingIsETH) {\n      userUnderlying = new BigNumber(await getBalance(user));\n    } else {\n      userUnderlying = toTokenUnitsBN(\n        await getTokenBalance(option.underlying, user),\n        underlyingDecimals\n      );\n    }\n    const userOTokenBalance = toTokenUnitsBN(await getTokenBalance(oToken, user), option.decimals);\n\n    setUserUnderlyingBalance(userUnderlying);\n    setUserOTokenBalance(userOTokenBalance);\n  }, [oToken, option.decimals, option.underlying, underlyingDecimals, underlyingIsETH, user]);\n\n  const onSelectEntries = (entries, indexes) => {\n    setSelectedIndexes(indexes);\n    checkHasEnoughToken(entries);\n  };\n\n  /**\n   * Set selectedHasEnoughCollateral according to selected entries\n   * @param {{oTokenIssued: string}[]} entries\n   */\n  const checkHasEnoughToken = (entries) => {\n    const sumIssued = entries.reduce((accumulator, current) => {\n      return accumulator.plus(new BigNumber(current.oTokensIssued));\n    }, new BigNumber(0));\n    if (sumIssued.gt(new BigNumber(0)) && sumIssued.gte(toBaseUnitBN(exerciseAmount, option.decimals))) {\n      setHasEnoughCollateral(true);\n    } else {\n      setHasEnoughCollateral(false);\n    }\n  };\n\n  const onChangeExerciseAmt = async (amount) => {\n    if (!amount) {\n      setExerciseAmount(new BigNumber(0));\n      setUnderlyringRequired(new BigNumber(0));\n      return;\n    }\n    const exerciseAmount = new BigNumber(amount);\n    setExerciseAmount(exerciseAmount);\n    const underlyingRawAmt = await getUnderlyingRequiredToExercise(\n      oToken,\n      toBaseUnitBN(exerciseAmount, option.decimals).toString()\n    );\n    const underlyingRequired = toTokenUnitsBN(underlyingRawAmt, underlyingDecimals);\n    setUnderlyringRequired(underlyingRequired);\n\n    // check current selection has enought tokens\n    const entries = selectedIndexes.map((index) => nonEmptyVaults[index]);\n    checkHasEnoughToken(entries);\n  };\n\n  return (\n    <>\n      {/* Button */}\n      <Button onClick={open} label='Claim'></Button>\n\n      {/* Modal */}\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header\n          primary={'Exercise Option'}\n          secondary={\n            <div style={{ display: 'flex' }}>\n              <PriceSection\n                label={`Balance:`}\n                amt={userOTokenBalance}\n                symbol={option.symbol}\n                forceDisplay={true}\n              />\n              <PriceSection label={' +'} amt={userUnderlyingBalance} symbol={underlyingSymbol} />\n            </div>\n          }\n        />\n        <Box heading={'Amount to Exercise'}>\n          <Split\n            primary={\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  adornment={option.symbol}\n                  adornmentPosition='end'\n                  value={exerciseAmount.toNumber()}\n                  onChange={(event)=>onChangeExerciseAmt(event.target.value)}\n                />\n              </>\n            }\n            secondary={\n              <div style={{ paddingTop: 5 }}>\n                <PriceSection\n                  label={'+ Underlyring'}\n                  amt={underlyringRequired.toNumber()}\n                  symbol={underlyingSymbol}\n                />\n              </div>\n            }\n          />\n        </Box>\n        <DataView\n          mode='table'\n          renderSelectionCount={(count) => `${count} vaults selected`}\n          fields={['Owner', 'Issued', 'collateral']}\n          entries={nonEmptyVaults}\n          entriesPerPage={5}\n          selection={selectedIndexes}\n          onSelectEntries={onSelectEntries}\n          renderEntry={({ owner, collateral, oTokensIssued }) => {\n            return [\n              <IdentityBadge entity={owner} />,\n              formatDigits(toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(), 5),\n              formatDigits(toTokenUnitsBN(collateral, collateralDecimals).toNumber(), 5),\n            ];\n          }}\n        />\n        <br></br>\n        <Button\n          label='Exercise'\n          disabled={!selectedHasEnoughCollateral}\n          wide={true}\n          onClick={async () => {\n            const vaultowners = selectedIndexes.map((index) => vaults[index].owner);\n            exercise(\n              oToken,\n              option.underlying,\n              toBaseUnitBN(exerciseAmount, option.decimals).toString(),\n              vaultowners\n            );\n          }}\n        />\n      </Modal>\n    </>\n  );\n}\n\nexport default ExerciseModal;\n","import React, { useState, useEffect } from 'react';\n\nimport { liquidate, addERC20Collateral, addETHCollateral } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { toTokenUnitsBN, toBaseUnitBN, formatDigits } from '../../utils/number';\nimport { RatioTag } from '../common';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconFundraising,\n  DataView,\n} from '@aragon/ui';\n\n/**\n * \n * @param {{collateral: string, oTokensIssued: string collateralDecimals:Number, decimals:Number}} param0 \n */\nfunction VaultModal({ useCollateral, oToken, owner, collateral, isSafe, oTokensIssued, ratio, decimals, collateralAsset, collateralIsETH, collateralDecimals }) {\n  const [opened, setOpened] = useState(false);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function getData() {\n      if (!opened) return;\n      const maxLiquidatable = await getMaxLiquidatable(oToken, owner);\n      if (!isCancelled) {\n        setLiquidateAmt(toTokenUnitsBN(maxLiquidatable, decimals).toNumber());\n      }\n    }\n    getData();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [decimals, oToken, opened, owner]);\n\n  return (\n    <>\n      <Button onClick={open} label='More'></Button>\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header primary={'Access Position'} />\n        <Box heading={'Owner'}>\n          <IdentityBadge entity={owner} shorten={false} />\n        </Box>\n        <DataView\n          fields={['Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[{ collateral, isSafe, oTokensIssued, ratio }]}\n          entriesPerPage={1}\n          renderEntry={({ collateral, isSafe, oTokensIssued, ratio }) => {\n            return [\n              formatDigits(toTokenUnitsBN(collateral, collateralDecimals), 5), \n              formatDigits(toTokenUnitsBN(oTokensIssued, decimals), 5),\n              ratio, \n              RatioTag({ isSafe, ratio, useCollateral })\n            ];\n          }}\n        />\n\n        <br></br>\n        <Box heading={'Add Collateral'}>\n          <Split\n            primary={\n              <TextInput\n                type='number'\n                wide={true}\n                adornment={<IconEthereum />}\n                adornmentPosition='end'\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            }\n            secondary={\n              <Button\n                label='Add Collateral'\n                wide={true}\n                onClick={() => {\n                  collateralIsETH \n                  ? addETHCollateral(oToken, owner, addValue)\n                  : addERC20Collateral(collateralAsset, oToken, owner, toBaseUnitBN(addValue, collateralDecimals).toString())}}\n              />\n            }\n          />\n        </Box>\n\n        <br></br>\n        { useCollateral ? <Box heading={'Liquidate'}>\n          <Split\n            primary={\n              <>\n                {/* <BalanceBlock /> */}\n                <TextInput\n                  wide={true}\n                  type='number'\n                  adornment={<IconFundraising />}\n                  adornmentPosition='end'\n                  value={liquidateAmt}\n                  onChange={(event) => {\n                    setLiquidateAmt(event.target.value);\n                  }}\n                />\n              </>\n            }\n            secondary={\n              <Button\n                wide={true}\n                disabled={isSafe}\n                label='Liquidate'\n                onClick={() => {\n                  liquidate(\n                    oToken, \n                    owner, \n                    toBaseUnitBN(liquidateAmt,decimals)\n                  );\n                }}\n              />\n            }\n          />\n        </Box>  : <></>}\n        \n      </Modal>\n    </>\n  );\n}\n\nexport default VaultModal;\n","import React, { useState, useEffect } from 'react';\n\nimport { DataView, IdentityBadge } from '@aragon/ui';\nimport VaultModal from './VaultModal';\nimport { SectionTitle, RatioTag } from '../common';\n\nimport { formatDigits, compareVaultRatio, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\n\n\nfunction VaultOwnerList({ oToken, user, vaults, option, collateralIsETH, collateralDecimals }) {\n  const vaultUsesCollateral = option.collateral !== option.strike;\n  \n  const [isLoading, setIsLoading] = useState(true);\n  const [vaultsWithDetail, setVaultDetail] = useState([])\n\n  const [page, setPage] = useState(0)\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      if(vaults.length === 0) return\n      const { strike, minRatio, strikePrice, oracle, collateral } = option;\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral,\n        strike,\n        oracle\n      );\n      const vaultDetail = vaults\n        .map((vault) => {\n          if (vault.oTokensIssued === '0') {\n            vault.ratio = Infinity;\n            vault.useCollateral = vaultUsesCollateral;\n            vault.isSafe = true;\n            return vault;\n          }\n          const ratio = calculateRatio(\n            vault.collateral,\n            vault.oTokensIssued,\n            strikePrice,\n            strikeValueInCollateral\n          );\n          vault.ratio = ratio;\n          vault.useCollateral = vaultUsesCollateral;\n          vault.isSafe = ratio > minRatio;\n          vault.oToken = oToken;\n          return vault;\n        })\n        .sort(compareVaultRatio);\n\n      if (!isCancelled) {\n        setVaultDetail(vaultDetail);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 12000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [collateralDecimals, collateralIsETH, oToken, option, user, vaultUsesCollateral, vaults]);\n\n  return (\n    <>\n      <SectionTitle title={'All Vaults'} />\n      <DataView\n        page={page}\n        onPageChange={setPage}\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaultsWithDetail}\n        entriesPerPage={5}\n        renderEntry={({ owner, collateral, oTokensIssued, ratio, isSafe, useCollateral }) => {\n          return [\n            <IdentityBadge entity={owner} shorten={true} />,\n            formatDigits(\n              toTokenUnitsBN(collateral, collateralDecimals).toNumber(),\n              6\n            ),\n            formatDigits(\n              toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(), \n              6\n            ),\n            formatDigits(ratio, 5),\n            RatioTag({ isSafe, ratio, useCollateral }),\n            <VaultModal\n              decimals={option.decimals}\n              oToken={oToken}\n              owner={owner}\n              collateral={collateral}\n              collateralAsset={option.collateral}\n              collateralDecimals={collateralDecimals}\n              isSafe={isSafe}\n              useCollateral={useCollateral}\n              collateralIsETH={collateralIsETH}\n              oTokensIssued={oTokensIssued}\n              ratio={ratio}\n            />,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Split, IdentityBadge } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js'\n\nimport { getERC20Info, getBalance, getTokenBalance } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number'\n\nfunction OptionOverview({ oToken, tokenName, option, collateralIsETH, collateralDecimals }) {\n  const [totalCollateral, setTotalCollateral] = useState(new BigNumber(0));\n  const [totalSupply, setTotalSupply] = useState('0');\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      let _totalCollateral;\n      if (collateralIsETH) {\n        _totalCollateral = new BigNumber(await getBalance(oToken))\n      } else {\n        const rawCollateralBalance = await getTokenBalance(option.collateral, oToken)\n        _totalCollateral = toTokenUnitsBN(rawCollateralBalance, collateralDecimals)\n      }\n      const { totalSupply } = await getERC20Info(oToken);\n      if (!isCancelled) {\n        setTotalCollateral(_totalCollateral);\n        setTotalSupply(totalSupply);\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [collateralDecimals, collateralIsETH, oToken, option.collateral]);\n\n  return (\n    <>\n      <Split\n        primary={\n          <Split\n            primary={\n              <Box heading={'contract'} padding={15}>\n                <IdentityBadge entity={oToken} shorten={false} />\n              </Box>\n            }\n            secondary={\n              <Box heading={'Total Collateral'} padding={15}>\n                {totalCollateral.toNumber()}\n              </Box>\n            }\n          />\n        }\n        secondary={\n          <Box heading={'total supply'} padding={15}>\n            {totalSupply} {tokenName}\n          </Box>\n        }\n      />\n    </>\n  );\n}\n\nexport default OptionOverview;\n","import React, { useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport ExerciseModal from './ExerciseModal';\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nimport { getDecimals, getERC20Symbol } from '../../utils/infura';\nimport { getAllVaultsForOption } from '../../utils/graph';\n\nimport { options, ETH_ADDRESS } from '../../constants/options';\n\nfunction OptionPage({ user }) {\n  let { token } = useParams();\n  const option = options.find((option) => option.addr === token);\n\n  const [vaults, setVaults] = useState([]);\n\n  const [collateralDecimals, setCollateralDecimals] = useState(18);\n  const [underlyingDecimals, setUnderlyingDecimals] = useState(18);\n  const [underlyingSymbol, setUnderlyingSymbol] = useState('ETH');\n\n  const collateralIsETH = option.collateral === ETH_ADDRESS;\n  const underlyingIsETH = option.underlying === ETH_ADDRESS;\n\n  useMemo(async () => {\n    if (!collateralIsETH) {\n      const _decimals = await getDecimals(option.collateral);\n      setCollateralDecimals(_decimals);\n    }\n    if (!underlyingIsETH) {\n      const [_decimals, _symbol] = await Promise.all([\n        getDecimals(option.underlying),\n        getERC20Symbol(option.underlying),\n      ]);\n      setUnderlyingDecimals(_decimals);\n      setUnderlyingSymbol(_symbol);\n    }\n\n    // Get All vaults once\n    const vaults = await getAllVaultsForOption(token);\n    setVaults(vaults);\n  }, [collateralIsETH, option.collateral, option.underlying, token, underlyingIsETH]);\n\n  return (\n    <>\n      <Header\n        primary={option.name}\n        secondary={\n          <ExerciseModal\n            user={user}\n            oToken={token}\n            option={option}\n            collateralDecimals={collateralDecimals}\n            underlyingDecimals={underlyingDecimals}\n            underlyingSymbol={underlyingSymbol}\n            underlyingIsETH={underlyingIsETH}\n            vaults={vaults}\n          />\n        }\n      />\n      {/* Basic Info Header */}\n      <OptionInfoBox\n        oToken={token}\n        user={user}\n        vaults={vaults}\n        option={option}\n        collateralDecimals={collateralDecimals}\n        collateralIsETH={collateralIsETH}\n      />\n      {/* List of Vaults */}\n      <VaultsList\n        oToken={token}\n        user={user}\n        vaults={vaults}\n        collateralDecimals={collateralDecimals}\n        collateralIsETH={collateralIsETH}\n        option={option}\n      />\n    </>\n  );\n}\n\nexport default OptionPage;\n","import React from 'react';\n\nimport { BalanceBlock, RatioTag, HelperText } from '../common';\nimport { formatDigits, toTokenUnitsBN } from '../../utils/number';\n\nconst HeaderDashboard = ({ ratio, minRatio, symbol, vault, decimals, newRatio, collateralDecimals, useCollateral }) => {\n  const tokenInUnit = vault.oTokensIssued ? toTokenUnitsBN(vault.oTokensIssued, decimals).toNumber() : '0';\n  const collateralBalance = vault.collateral \n  ? toTokenUnitsBN(vault.collateral, collateralDecimals).toString()\n  : '0'\n  \n  return (\n    <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset='Total Collateral' balance={formatDigits(collateralBalance, 6)} />\n      </div>\n      <div style={{ width: '50%' }}>\n        <BalanceBlock asset={`${symbol} Issued`} balance={tokenInUnit} />\n      </div>\n      <div style={{ width: '20%' }}>\n        <>\n          <div style={{ fontSize: 14, padding: 3 }}>\n            Current Ratio{' '}\n            {ratio > 0 ? <RatioTag isSafe={ratio >= minRatio} ratio={ratio} useCollateral={useCollateral} /> : <></>}\n          </div>\n          <div style={{ fontSize: 24, padding: 3 }}>\n            <span style={{ fontSize: 24 }}>{ratio.toString().split('.')[0]}</span>.\n            <span style={{ fontSize: 18 }}>{ratio.toString().split('.')[1]} </span>\n            {minRatio > 0 ? <span style={{ fontSize: 16 }}> / {minRatio} </span> : ''}\n          </div>\n          <> {newRatio === ratio ? '' : <HelperText label='New Ratio' amt={newRatio} />} </>\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport { getDecimals, getERC20Symbol } from '../../utils/infura'\nimport { addETHCollateral, addERC20Collateral, removeCollateral,  } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\nimport { formatDigits, toTokenUnitsBN, toBaseUnitBN } from '../../utils/number'\nimport { calculateRatio } from '../../utils/calculation'\nimport { ETH_ADDRESS } from '../../constants/options';\n\n/**\n * \n * @param {{isOwner: boolean, strikePrice:number, strikeValue:BigNumber, collateralAssetBalance: BigNumber }} param0 \n */\nfunction CollateralManagement({\n  isOwner,\n  vault,\n  collateralAsset,\n  collateralAssetBalance, // Bignumber, / token unit\n  token,\n  owner,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  setNewRatio\n}) {\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0); // in token unit\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0); // in token unit\n\n  const [collateralDecimals, setCollateralDecimals] = useState(18)\n  const [collateralSymbol, setCollateralSymbol] = useState(0)\n\n  const collateralIsETH = collateralAsset === ETH_ADDRESS\n\n  useMemo(async()=>{\n    if(collateralIsETH) return\n    const decimals = await getDecimals(collateralAsset)\n    const symbol = await getERC20Symbol(collateralAsset)\n    setCollateralDecimals(decimals)\n    setCollateralSymbol(symbol)\n  }, [collateralAsset, collateralIsETH])\n\n  /**\n   * @param {number} newCollateral in wei\n   */\n  const updateNewRatio = (newCollateral) => {\n    if(!newCollateral || newCollateral <= 0) return 0\n    const str = newCollateral.toString()\n    const newRatio = calculateRatio(str, vault.oTokensIssued, strikePrice, strikeValue)\n    setNewRatio(formatDigits(newRatio,5))\n  }\n\n  return (\n    <Box heading={'Collateral'}>\n      <div style={{ display: 'flex' }}>\n        {/* balance */}\n        <div style={{ width: '30%' }}>\n          {BalanceBlock({ \n            asset: collateralIsETH ? 'Your ETH Balance' : `Your ${collateralSymbol} Balance`, \n            balance: formatDigits(collateralAssetBalance.toString(),6) })}\n        </div>\n        {/* Add collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={addCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value\n                    if (amt === '') {\n                      setAddCollateralAmt(0)\n                      return\n                    } \n                    setAddCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateralDecimals)\n                    const newCollateralInWei = new BigNumber(vault.collateral).plus(amtRaw).toNumber()\n                    updateNewRatio(newCollateralInWei)\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setAddCollateralAmt(collateralAssetBalance.toNumber());\n                    const collateralBalanceRaw = toBaseUnitBN(collateralAssetBalance, collateralDecimals)\n                    const newCollateral = new BigNumber(vault.collateral).plus(collateralBalanceRaw).toNumber()\n                    updateNewRatio(newCollateral)\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Add'\n                onClick={() => {\n                  collateralIsETH \n                    ? addETHCollateral(token, owner, addCollateralAmt)\n                    : addERC20Collateral(collateralAsset, token, owner, toBaseUnitBN(addCollateralAmt, collateralDecimals))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={removeCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value\n                    if(amt === '') {\n                      setRemoveCollateralAmt(0)\n                      return\n                    }\n                    setRemoveCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateralDecimals)\n                    const newCollateralWei = new BigNumber(vault.collateral).minus(amtRaw).toNumber()\n                    updateNewRatio(newCollateralWei)\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikeValue.toNumber() <= 0) return;\n                    const strikePriceBN = new BigNumber(strikePrice)\n                    const tokenIssuedBN = new BigNumber(vault.oTokensIssued)\n                    const minRatioBN = new BigNumber(minRatio)\n                    const minCollateral = strikePriceBN.times(tokenIssuedBN).times(minRatioBN).times(strikeValue)\n                    // const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                    // const minCollateral = minValueInStrike * strikeValue;\n                    const maxToRemove = new BigNumber(vault.collateral).minus(minCollateral).toString();\n                    const maxToRemoveInTokenUnit = toTokenUnitsBN(maxToRemove, collateralDecimals).toNumber()\n                    setRemoveCollateralAmt(maxToRemoveInTokenUnit);\n                    setNewRatio(minRatio)\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Remove'\n                onClick={() => {\n                  removeCollateral(collateralAsset, token, toBaseUnitBN(removeCollateralAmt, collateralDecimals).toString());\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\n\nexport default CollateralManagement","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js'\n\nimport { burnOToken, issueOToken } from '../../utils/web3';\nimport { BalanceBlock, MaxButton } from '../common';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation'\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\n/**\n * \n * @param {{\n * strikeValue: BigNumber, \n * tokenBalance: BigNumber, \n * strikePrice: Number, \n * decimals: Number\n * }} param0 \n */\nfunction IssuedTokenManagement({\n  isOwner,\n  vault,\n  tokenBalance,\n  token,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  decimals,\n  symbol,\n  setNewRatio,\n}) {\n  const [issueAmt, setIssueAmt] = useState(new BigNumber(0));\n  const [burnAmt, setBurnAmt] = useState(new BigNumber(0));\n\n  /**\n   * \n   * @param {BigNumber} newAmt in raw amt\n   */\n  const updateNewRatio = (newAmt) => {\n    if(newAmt.lte(new BigNumber(0))) return\n    const newRatio = calculateRatio(vault.collateral, newAmt, strikePrice, strikeValue)\n    setNewRatio(newRatio);\n  };\n\n  const onChangeIssueAmt = (intputAmt) => {\n    if (!intputAmt){\n      setIssueAmt(new BigNumber(0))\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt)\n    setIssueAmt(amountBN);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).plus(toBaseUnitBN(amountBN, decimals)));\n  }\n\n  const onClickIssueToken = () => {\n    issueOToken(\n      token, \n      toBaseUnitBN(issueAmt, decimals).toString()\n    );\n  }\n\n  const onChangeBurnAmt = (intputAmt) => {\n    if(!intputAmt) {\n      setBurnAmt(new BigNumber(0))\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt)\n    updateNewRatio(new BigNumber(vault.oTokensIssued).minus(toBaseUnitBN(amountBN, decimals)));\n    setBurnAmt(amountBN);\n  }\n\n  const onClickBurnToken = () => {\n    burnOToken(\n      token, \n      toBaseUnitBN(burnAmt, decimals).toString()\n    );\n  }\n\n  return (\n    <Box heading={'Total Issued'}>\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock\n            asset={`Owner ${symbol} Balance `}\n            balance={tokenBalance.toString()}\n          />\n        </div>\n        {/* Issue More Token */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={issueAmt}\n                  onChange={(event) => onChangeIssueAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikePrice <= 0) return;\n                    // (vault.collateral) / (minRatio * strikePrice * strikeValue.toNumber());\n                    const maxTotal = new BigNumber(vault.collateral).div(\n                      new BigNumber(minRatio).times(new BigNumber(strikePrice)).times(strikeValue)\n                    )\n                      \n                    const maxToIssueRaw = maxTotal.minus(new BigNumber(vault.oTokensIssued));\n                    const maxToIssue = toTokenUnitsBN(maxToIssueRaw, decimals);\n                    setIssueAmt(maxToIssue);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Issue'\n                onClick={onClickIssueToken}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={burnAmt}\n                  onChange={(event) => onChangeBurnAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    const issued = toTokenUnitsBN(vault.oTokensIssued, decimals)\n                    const maxToBurn = tokenBalance.lt(issued) ? tokenBalance : issued; // min (issued, tokenBalance)\n                    setBurnAmt(maxToBurn);\n                    updateNewRatio(issued.minus(maxToBurn))\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Burn'\n                onClick={onClickBurnToken}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default IssuedTokenManagement;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport { Box, DataView, IdentityBadge, TransactionBadge, TextInput, Button } from '@aragon/ui';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { getLiquidationHistory } from '../../utils/graph';\nimport { formatDigits, fromWei, toTokenUnitsBN, timeSince, toBaseUnitBN } from '../../utils/number';\n\n/**\n * \n * @param {{userTokenBalance: BigNumber}} param0 \n */\nfunction LiquidationHistory({ owner, token, isOwner, tokenDecimals, userTokenBalance }) {\n  const [maxLiquidatable, setMaxLiquidatable] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  const [amountToLiquidate, setAmtToLiquidate] = useState(0);\n\n  useEffect(() => {\n    async function updateLiquidatable() {\n      const maxToLiquidate = await getMaxLiquidatable(token, owner);\n      setMaxLiquidatable(toTokenUnitsBN(maxToLiquidate, tokenDecimals).toNumber());\n    }\n\n    updateLiquidatable();\n  });\n\n  useMemo(async () => {\n    async function updateList() {\n      const actions = await getLiquidationHistory(owner);\n      const actionsForThisVault = actions.filter(\n        (entry) => entry.vault.optionsContract.address === token\n      );\n      setEntries(actionsForThisVault);\n      setIsLoading(false);\n    }\n    updateList();\n  }, [owner, token]);\n\n  return (\n    <>\n      {isOwner ? <></> : (\n        <Box heading={'Liquidate'}>\n          <>\n            <div style={{ display: 'flex' }}>\n              {/* balance */}\n              <div style={{ width: '30%' }}>\n                <BalanceBlock asset={`Max To Liquidate`} balance={maxLiquidatable} />\n              </div>\n              <div style={{ width: '70%', paddingTop: '2%' }}>\n                <div style={{ display: 'flex' }}>\n                  <div style={{ width: '60%' }}>\n                    <>\n                      <TextInput\n                        type='number'\n                        wide={true}\n                        value={amountToLiquidate}\n                        onChange={(event) => {\n                          setAmtToLiquidate(event.target.value);\n                        }}\n                      />\n                      <MaxButton\n                        onClick={() => {\n                          const maximum = Math.min(userTokenBalance.toNumber(), maxLiquidatable);\n                          setAmtToLiquidate(maximum);\n                        }}\n                      />\n                    </>\n                  </div>\n                  <div style={{ width: '40%' }}>\n                    <Button\n                      disabled={maxLiquidatable <= 0}\n                      label='Liquidate'\n                      onClick={() => {\n                        const amtToLiquidate = toBaseUnitBN(amountToLiquidate, tokenDecimals).toString();\n                        liquidate(token, owner, amtToLiquidate);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        </Box>\n      )}\n\n      {/* History Section */}\n      <Box heading={'History'}>\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Liquidator', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({ collateralToPay, liquidator, timestamp, transactionHash }) => {\n            return [\n              <TransactionBadge transaction={transactionHash} />,\n              formatDigits(fromWei(collateralToPay), 5),\n              <IdentityBadge entity={liquidator} />,\n              timeSince(parseInt(timestamp * 1000)),\n            ];\n          }}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default LiquidationHistory;\n","import React, { useState, useMemo } from 'react';\n\nimport { Box, DataView, IdentityBadge, TransactionBadge } from '@aragon/ui';\n\n\nimport { getExerciseHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\nfunction ExerciseHistory({ owner, token, collateralDecimals, tokenDecimals  }) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n  \n  useMemo(async () => {\n    const actions = await getExerciseHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n      {/* History Section */}\n      <Box heading={'History'}>\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Collateral', 'oToken', 'Exerciser', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({ amtCollateralToPay,  oTokensToExercise, exerciser, timestamp, transactionHash }) => {\n            return [\n              <TransactionBadge transaction={transactionHash} />,\n              formatDigits(\n                toTokenUnitsBN(amtCollateralToPay, collateralDecimals).toNumber(),\n                5\n              ),\n              formatDigits(\n                toTokenUnitsBN(oTokensToExercise, tokenDecimals).toNumber(),\n                5\n              ),\n              <IdentityBadge entity={exerciser} />,\n              timeSince(parseInt(timestamp * 1000)),\n            ];\n          }}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default ExerciseHistory;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Header, Tabs, Box, Timer, Button } from '@aragon/ui';\n\nimport HeaderDashboard from './HeaderDashboard';\nimport CollateralManagement from './CollateralManagement';\nimport IssuedTokenManagement from './IssuedTokenManagement';\nimport LiquidationHistory from './Liquidation';\nimport ExerciseHistory from './Exercise';\n\nimport { formatDigits, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getTokenBalance, getBalance, getDecimals } from '../../utils/infura';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { redeem } from '../../utils/web3';\n\nimport { options, ETH_ADDRESS } from '../../constants/options';\nimport BigNumber from 'bignumber.js';\n\nfunction ManageVault({ user }) {\n  let { token, owner } = useParams();\n\n  const option = options.find((option) => option.addr === token);\n  const { decimals, symbol, oracle, strike, strikePrice, minRatio, collateral, expiry } = option;\n\n  // Tab Navigation\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const [vault, setVault] = useState({});\n  const [strikeValueInCollateral, setStrikeValue] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(0);\n\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [userCollateralAssetBalance, setUserCollateralAssetBalance] = useState(new BigNumber(0));\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n  const [newRatio, setNewRatio] = useState(ratio);\n\n  const [collateralDecimals, setCollateralDecimals] = useState(18);\n  const collateralIsETH = collateral === ETH_ADDRESS;\n\n  const vaultUsesCollateral = collateral !== strike;\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateInfo() {\n      const vault = (await getAllVaultsForUser(owner)).find(\n        (vault) => vault.optionsContract.address === token\n      );\n      if (vault === undefined) {\n        return;\n      }\n      setNoVault(false);\n      let [_ownerTokenBalance, _userTokenBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getTokenBalance(token, user),\n      ]);\n\n      // SetUserCollateralAmount\n      let collateralBalance = new BigNumber(0)\n      let _collateralDecimals = 18;\n\n      if (collateralIsETH) {\n        collateralBalance = new BigNumber(await getBalance(user));\n      } else {\n        const _tokenBalance = await getTokenBalance(collateral, user);\n        _collateralDecimals = await getDecimals(collateral);\n        collateralBalance = toTokenUnitsBN(_tokenBalance, _collateralDecimals);\n      }\n\n      const _ownerTokenBalanceBN = toTokenUnitsBN(_ownerTokenBalance, decimals);\n      const _userTokenBalanceBN = toTokenUnitsBN(_userTokenBalance, decimals);\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral,\n        strike,\n        oracle\n      );\n      const ratio = calculateRatio(\n        vault.collateral,\n        vault.oTokensIssued,\n        strikePrice,\n        strikeValueInCollateral\n      );\n\n      if (!isCancelled) {\n        setStrikeValue(strikeValueInCollateral);\n        setVault(vault);\n        setCollateralDecimals(_collateralDecimals);\n        setOwnerTokenBalance(_ownerTokenBalanceBN);\n        setUserTokenBalance(_userTokenBalanceBN);\n        setRatio(formatDigits(ratio, 5));\n        setUserCollateralAssetBalance(collateralBalance);\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [\n    collateral,\n    collateralDecimals,\n    collateralIsETH,\n    decimals,\n    oracle,\n    owner,\n    strike,\n    strikePrice,\n    token,\n    user,\n    vaultUsesCollateral,\n  ]);\n\n  const isOwner = user === owner;\n\n  return noVault ? (\n    <div style={{ padding: 100, textAlign: 'center' }}> No Vault Found for this user </div>\n  ) : (\n    <>\n      <Header\n        primary={isOwner ? 'Manage Your Vault' : 'Vault Detail'}\n        secondary={\n          expiry * 1000 > Date.now() ? (\n            <Timer end={new Date(expiry * 1000)} />\n          ) : (\n            <Button onClick={() => redeem(token)} label={'Redeem'} />\n          )\n        }\n      />\n\n      <HeaderDashboard\n        owner={owner}\n        user={user}\n        ratio={ratio}\n        minRatio={minRatio}\n        vault={vault}\n        decimals={decimals}\n        symbol={symbol}\n        newRatio={newRatio}\n        useCollateral={vaultUsesCollateral}\n        collateralIsETH={collateralIsETH}\n        collateralDecimals={collateralDecimals}\n      />\n\n      <Tabs\n        items={['Collateral Management', 'Token Issuance', 'Liquidation', 'Exercise']}\n        selected={tabSelected}\n        onChange={setTabSelected}\n      />\n\n      {tabSelected === 0 ? (\n        <CollateralManagement\n          isOwner={isOwner}\n          vault={vault}\n          collateralAssetBalance={userCollateralAssetBalance}\n          collateralAsset={option.collateral}\n          token={token}\n          owner={owner}\n          strikeValue={strikeValueInCollateral}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 1 ? (\n        <IssuedTokenManagement\n          isOwner={isOwner}\n          vault={vault}\n          tokenBalance={ownerTokenBalance}\n          token={token}\n          strikeValue={strikeValueInCollateral}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          decimals={decimals}\n          symbol={symbol}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 2 ? (\n        vaultUsesCollateral ? (\n          <LiquidationHistory\n            userTokenBalance={userTokenBalance}\n            isOwner={isOwner}\n            owner={owner}\n            token={token}\n            tokenDecimals={decimals}\n          />\n        ) : (\n          <Box> This vault cannot be liquidated </Box>\n        )\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 3 ? (\n        <ExerciseHistory\n          owner={owner}\n          token={token}\n          tokenDecimals={decimals}\n          collateralDecimals={collateralDecimals}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default ManageVault;\n","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport BigNumber from 'bignumber.js'\n\nimport { BalanceBlock, AddressBlock } from '../common';\n\n/**\n * \n * @param {{ poolTokenBalance: BigNumber, poolETHBalance: BigNumber }}  \n */\nconst HeaderDashboard = ({ symbol, poolETHBalance, poolTokenBalance, uniswapExchange }) => {\n  return (\n    <div style={{ padding: '2%', display: 'flex',  alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset='Total ETH Liquidity' balance={poolETHBalance} />\n      </div>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset={`${symbol} Liquidity`} balance={poolTokenBalance} />\n      </div>\n      <div style={{ width: '40%' }}>\n        <>\n          <AddressBlock label=\"Uniswap Contract\" address={uniswapExchange} />\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState } from 'react';\n\nimport { buyOTokensFromExchange, sellOTokensFromExchange } from '../../utils/web3';\n\nimport { getPremiumToPay, getPremiumReceived } from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\n/**\n * \n * @param {{\n *  decimals: number\n *  tokenBalance: BigNumber\n * }} param0 \n */\nfunction OptionExchange({ symbol, tokenBalance, token, exchange, decimals }) {\n  const [buyAmt, setBuyAmt] = useState(new BigNumber(0));\n  const [sellAmt, setSellAmt] = useState(new BigNumber(0));\n  const [premiumToPay, setPremiumToPay] = useState(new BigNumber(0));\n  const [premiumReceived, setPremiumReceived] = useState(new BigNumber(0));\n\n  const updatePremiumToPay = async (buyAmt) => {\n    const butAmountBN = new BigNumber(buyAmt)\n    if (butAmountBN.lte(new BigNumber(0))) {\n      setPremiumToPay(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(butAmountBN, decimals).toString();\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(new BigNumber(premium));\n  };\n\n  const updatePremiumReceived = async (sellAmt) => {\n    const sellAmountBN = new BigNumber(sellAmt)\n    if (sellAmountBN.lte(new BigNumber(0))) {\n      setPremiumReceived(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(sellAmountBN, decimals).toString();\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(new BigNumber(premium));\n  };\n\n  return (\n    <Box heading={'Exchange'}>\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`${symbol} Balance`} balance={tokenBalance} />\n        </div>\n        {/* Buy Token from Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={buyAmt}\n                  onChange={(event) => {\n                    if(event.target.value){\n                      setBuyAmt(event.target.value);\n                      updatePremiumToPay(event.target.value);\n                    } else {\n                      setBuyAmt(new BigNumber(0));\n                      updatePremiumToPay(new BigNumber(0));\n                    }\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Buy'\n                onClick={() => {\n                  buyOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(buyAmt, decimals).toString(),\n                    toBaseUnitBN(premiumToPay, 18).toString()\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label='Cost:' amt={premiumToPay.toString()} symbol='' />\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={sellAmt}\n                  onChange={(event) => {\n                    if(event.target.value) {\n                      setSellAmt(event.target.value);\n                      updatePremiumReceived(event.target.value);\n                    } else {\n                      setSellAmt(new BigNumber(0))\n                      updatePremiumReceived(new BigNumber(0));\n                    }\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setSellAmt(tokenBalance);\n                    updatePremiumReceived(tokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Sell'\n                onClick={() => {\n                  sellOTokensFromExchange(\n                    token, \n                    exchange, \n                    toBaseUnitBN(sellAmt, decimals).toString()\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label='Premium' amt={premiumReceived} />\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default OptionExchange;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js'\nimport { addLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconEthereum } from '@aragon/ui';\n\n/**\n * \n * @param {{ \n * poolTokenBalance: BigNumber, \n * poolETHBalance:BigNumber, \n * liquidityTokenSupply: BigNumber, \n * userTokenBalance: BigNumber, \n * userETHBalance:BigNumber \n * uniswapExchange: string\n * }} param0 \n */\nfunction AddLiquidity({ \n  otoken, \n  otokenSymbol, \n  otokenDecimals, \n  userTokenBalance, \n  userETHBalance,\n  uniswapExchange,\n  poolTokenBalance, \n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply\n}) {\n  const SLIPPAGE_RATE = 2;\n\n\n  const [amtETHToAdd, setAmtETHToAdd] = useState(new BigNumber(0));\n  const [amtTokenToAdd, setAmtTokenToAdd] = useState(new BigNumber(0));\n\n  const liquidityMinted = (liquidityTokenSupply.times( amtETHToAdd)).div(poolETHBalance);\n  const liquidityMintedMin = (liquidityMinted.times(new BigNumber(100 - SLIPPAGE_RATE))).div(new BigNumber(100))\n  const ethToTokenRatio = poolETHBalance.div(poolTokenBalance);\n  const tokenToEthRatio = poolTokenBalance.div(poolETHBalance);\n\n  const onChangeETHAmtToSend = (ethAmt) => {\n    if (!ethAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return\n    }\n\n    const newTokenAmt = (new BigNumber(ethAmt).times(tokenToEthRatio));\n    setAmtETHToAdd(new BigNumber(ethAmt));\n    setAmtTokenToAdd(newTokenAmt);\n  };\n\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return\n    }\n\n    const newEthAmt = new BigNumber(tokenAmt).times(ethToTokenRatio);\n    setAmtETHToAdd(newEthAmt);\n    setAmtTokenToAdd(new BigNumber(tokenAmt));\n  };\n\n  return (\n    <Box heading={'Add Liquidity'}>\n      <div style={{ display: 'flex' }}>\n        {/* Pool Status */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`ETH Balance`} balance={userETHBalance} />\n        </div>\n        {/* Add Liquidity too pool */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <TextInput\n                  adornmentPosition='end'\n                  adornment={otokenSymbol}\n                  type='number'\n                  wide={true}\n                  value={amtTokenToAdd.toNumber()}\n                  onChange={(event) => {\n                    onChangeTokenAmtToSend(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    onChangeTokenAmtToSend(userTokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition='end'\n                adornment={<IconEthereum />}\n                type='number'\n                wide={true}\n                value={amtETHToAdd.toNumber()}\n                onChange={(event) => {\n                  onChangeETHAmtToSend(event.target.value);\n                }}\n              />\n              <PriceSection label='Mint' amt={liquidityMinted} symbol='Pool Tokens' />\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Add Liquidity'\n                onClick={() => {\n                  const maxToken = toBaseUnitBN(amtTokenToAdd, otokenDecimals).toString();\n                  const minLiquidity = toBaseUnitBN(liquidityMintedMin, liquidityTokenDecimals).toString();\n                  const ethWei = toBaseUnitBN(amtETHToAdd, 18).toString()\n                  addLiquidity(\n                    otoken,\n                    uniswapExchange,\n                    maxToken,\n                    minLiquidity,\n                    ethWei\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\n\n\nexport default AddLiquidity;\n","import React, { useState } from 'react';\n\nimport { removeLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { Box, TextInput, Button, IconCircleMinus, IconFundraising } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\n/**\n * \n * @param {{\n *  otokenDecimals: number,\n *  liquidityTokenDecimals: number,\n *  otokenSymbol: string,\n *  uniswapExchange: string\n *  userliquidityTokenBalance: BigNumber\n *  poolTokenBalance: BigNumber\n *  poolETHBalance: BigNumber\n *  liquidityTokenDecimals: BigNumber\n *  liquidityTokenSupply: BigNumber\n * \n * }} param0 \n */\nfunction RemoveLiquidity({ \n  otokenSymbol, \n  otokenDecimals, \n  userliquidityTokenBalance,\n  uniswapExchange, \n  poolTokenBalance, \n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply\n}) {\n  const SLIPPAGE_RATE = 2;\n\n  const [amtLiquidityTokenToSell, setAmtLiquidityTokenToSell] = useState(new BigNumber(0));\n\n  const poolPortion = amtLiquidityTokenToSell.div(liquidityTokenSupply)\n  const estETHRecieved = poolETHBalance.times(poolPortion)\n  const estOTokenReceived = poolTokenBalance.times(poolPortion)\n\n  const minETHReceived = estETHRecieved.times( new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100))\n  const minTokenReceived = estOTokenReceived.times( new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100))\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if(!tokenAmt) {\n      setAmtLiquidityTokenToSell(new BigNumber(0))\n      return\n    }\n    const tokenAmtBN = new BigNumber(tokenAmt)\n    setAmtLiquidityTokenToSell(tokenAmtBN)\n  };\n\n  return (\n    <Box heading={'Remove Liquidity'}>\n      <div style={{ display: 'flex' }}>\n        {/* Pool Token in Hold */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`Pool Token Balance`} balance={userliquidityTokenBalance} />\n        </div>\n        {/* Remove */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition='end'\n                adornment={<IconFundraising />}\n                type='number'\n                wide={true}\n                value={amtLiquidityTokenToSell.toNumber()}\n                onChange={(event) => {\n                  onChangeTokenAmtToSend(event.target.value);\n                }}\n              />\n              <MaxButton\n                onClick={()=>setAmtLiquidityTokenToSell(userliquidityTokenBalance)}\n              />\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n              <PriceSection label='You get' amt={estETHRecieved} symbol='ETH' />\n              <PriceSection label='+' amt={estOTokenReceived} symbol={otokenSymbol} />\n              </>\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Remove Liquidity'\n                onClick={() => {\n                  const amt = toBaseUnitBN(amtLiquidityTokenToSell, liquidityTokenDecimals).toString()\n                  const min_eth = toBaseUnitBN(minETHReceived, 18).toString()\n                  const min_token = toBaseUnitBN(minTokenReceived, otokenDecimals).toString()\n                  \n                  removeLiquidity(\n                    uniswapExchange,\n                    amt,\n                    min_eth,\n                    min_token\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default RemoveLiquidity;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport { getTokenBalance, getBalance, getERC20Info } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number'\n\n\nimport { options } from '../../constants/options';\n\nimport DashBoard from './Header';\nimport OptionExchange from './OptionExchange'\n\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity'\nimport BigNumber from 'bignumber.js';\n\nfunction ManagePool({ user }) {\n\n  let { token } = useParams();\n\n  const option = options.find((option) => option.addr === token);\n  const { uniswapExchange, decimals, symbol, exchange } = option;\n\n  const [poolTokenBalance, setPoolTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [poolETHBalance, setPoolETHBalance] = useState(new BigNumber(0));\n  const [userETHBalance, setUserETHBalance] = useState(new BigNumber(0));\n\n  const [userliquidityTokenBalance, setUserLiquidityTokenBalance] = useState(new BigNumber(0));\n  const [liquidityTokenSupply, setLiquidityTokenSupply] = useState(new BigNumber(0));\n  const [liquidityTokenDecimals, setLiquidityTokenDecimals] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      let [exTokenBalance, exchagneETHBalance, liquidityTokenInfo] = await Promise.all([\n        getTokenBalance(token, uniswapExchange),\n        getBalance(uniswapExchange),\n        getERC20Info(uniswapExchange),\n      ]);\n      const { decimals: liqTokenDecimal, totalSupply: liqTokenTotalSupply } = liquidityTokenInfo;\n      const exchangeTokenBalance = toTokenUnitsBN(exTokenBalance, decimals);\n      if (!isCancelled) {\n        setLiquidityTokenDecimals(liqTokenDecimal);\n        setLiquidityTokenSupply(new BigNumber(liqTokenTotalSupply));\n        setPoolETHBalance(new BigNumber(exchagneETHBalance));\n        setPoolTokenBalance(exchangeTokenBalance);\n      }\n    }\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, token, uniswapExchange]);\n\n  useEffect(() => {\n    if (user === '') return;\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      let [tokenBalance, userETHBalance, liqTokenBalance] = await Promise.all([\n        getTokenBalance(token, user),\n        getBalance(user),\n        getTokenBalance(uniswapExchange, user),\n      ]);\n\n      const userTokenBalance = toTokenUnitsBN(tokenBalance, decimals);\n      const userLiqTokenBalance = toTokenUnitsBN(liqTokenBalance, liquidityTokenDecimals);\n      if (!isCancelled) {\n        setUserLiquidityTokenBalance(userLiqTokenBalance);\n        setUserETHBalance(userETHBalance);\n        setUserTokenBalance(userTokenBalance);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, liquidityTokenDecimals, token, uniswapExchange, user]);\n\n  return (\n    <>\n      <Header primary='Exchange' />\n\n      <DashBoard\n        user={user}\n        symbol={symbol}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        uniswapExchange={uniswapExchange}\n      />\n\n      <OptionExchange\n        symbol={symbol}\n        tokenBalance={userTokenBalance}\n        token={token}\n        exchange={exchange}\n        decimals={decimals}\n      />\n\n      <Header primary='Provide Liquidity' />\n\n      <AddLiquidity\n        user={user}\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n\n      <RemoveLiquidity\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n    </>\n  );\n}\n\nexport default ManagePool;\n","import React from 'react'\n\nimport { Link } from '@aragon/ui'\n\nfunction Footer({theme}) {\n  var style = {\n    backgroundColor: theme === 'light' ? \"#F8F8F8\" : '#35425e' ,\n    textAlign: \"center\",\n    padding: \"17px\",\n    position: \"fixed\",\n    left: \"0\",\n    bottom: \"0\",\n    height: \"50px\",\n    width: \"100%\",\n    fontSize: \"12px\"\n  }\n\n  return (  \n    <div style={style}>\n      Powered By {' '}\n      <Link  external={true} href=\"https://opyn.co/#/\">Opyn</Link>{', '} \n      <Link  external={true} href=\"https://ui.aragon.org/\">Aragon UI</Link>{', '}  \n      <Link  external={true} href=\"https://www.blocknative.com/\">Blocknative</Link>{'. '}  \n      Hosted on <Link  external={true} href=\"https://github.com/antoncoding/opyn-liquidator\">GitHub</Link>.\n    </div>\n  )\n}\n\nexport default Footer","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { updateModalMode } from './utils/web3'\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage'\nimport AllOptoins from './components/AllContracts';\nimport Trade from './components/Trade'\nimport MyVaults from './components/MyVaults'\nimport OptionPage from './components/OptionPage';\nimport ManageVault from './components/ManageVault'\nimport ManagePool from './components/ManagePool'\nimport Footer from './components/Footer';\nimport { Main } from '@aragon/ui';\n\nfunction App() {\n  const storedTheme = window.localStorage.getItem('theme') || 'light';\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (theme) => {\n    setTheme(theme);\n    updateModalMode(theme)\n    window.localStorage.setItem('theme', theme);\n  };\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          {/* All Options */}\n          <Route path='/option/:token' children={<OptionPage user={user} />} />\n          <Route path='/options/' children={<AllOptoins />} />\n          {/* My Vaults */}\n          <Route path='/myvaults' children={<MyVaults user={user} />} />\n          <Route path='/manage/:token/:owner' children={<ManageVault user={user}/>} />\n          {/* Trade */}\n          <Route path='/trade/:token/' children={<ManagePool user={user} />} />\n          <Route path='/trade/' children={<Trade/>} />\n          {/* HomePage */}\n          <Route path='/' children={<HomePage/>} />\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}