{"version":3,"sources":["components/NavBar/ConnectButton.js","components/NavBar/SettingsButton.js","components/NavBar/index.js","constants/options.js","components/Onboarding/index.js","utils/graph.js","utils/common.js","utils/infura.js","utils/blockNative.js","utils/web3.js","components/TokenView/VaultModal.js","components/TokenView/common.js","components/TokenView/MyVaultBox.js","components/TokenView/VaultsList.js","components/TokenView/OptionInfoBox.js","components/TokenView/index.js","components/ManageVault/Manage.js","components/ManageVault/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["ConnectButton","user","setUser","useState","isConnected","setIsConnected","connectWeb3","a","window","ethereum","enable","accounts","padding","entity","connectedAccount","icon","label","onClick","ChangeMode","theme","updateTheme","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","addr","goBack","secondary","options","title","symbol","name","decimals","oracle","collateral","underlying","strike","strikePrice","minRatio","exchange","DashBoard","style","opacity","fields","entries","entriesPerPage","renderEntry","shorten","push","goToToken","opynGraphEndpoint","getAllVaultOwners","method","headers","body","JSON","stringify","query","fetch","res","json","actions","data","vaultOpenedActions","owners","map","action","owner","Set","formatDigits","num","percision","parseFloat","toFixed","optionContractABI","require","optionExchangeABI","oracleABI","Promise","web3","Web3","getVaults","oToken","oTokenContract","eth","Contract","methods","getVault","call","utils","fromWei","oTokensIssued","owned","filter","vault","vaults","getVaultsWithLiquidatable","maxLiquidatable","isUnsafe","maxOTokensLiquidatable","NewVaults","sort","compare","getMaxLiquidatable","liquidator","maxVaultLiquidatable","balanceOf","userbalance","Math","min","parseInt","toString","getTokenBalance","balance","getDecimals","getERC20Info","address","token","totalSupply","totalSupplyDecimals","getAllowance","contract","spender","allowance","getBalance","getPrice","oracleAddr","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","ownerA","ownerB","rateA","ratio","rateB","comparison","notify","Notify","dappId","networkId","oTokenABI","exchangeABI","getAccounts","liquidate","oTokenAddr","liquidateAmt","send","from","on","hash","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmount","value","toWei","removeETHCollateral","removeCollateral","approve","amt","openVault","buyOTokensFromExchange","ethAmt","buyOTokens","sellOTokensFromExchange","sellOTokens","PositionModal","isSafe","opened","setOpened","setTokenDecimals","addValue","setAddValue","setLiquidateAmt","isCancelled","_decimals","getData","width","visible","onClose","heading","createTag","type","wide","adornment","adornmentPosition","onChange","event","target","disabled","renderListEntry","VaultModal","background","color","mode","SectionTitle","fontSize","MangeButton","goToManagePage","OpenVaultButton","MyVault","myVault","find","undefined","VaultOwnerList","option","isLoading","setIsLoading","setVaults","updateInfo","ethValueInStrike","vaultDetail","Infinity","valueProtectingInEth","vaultWithLiquidatable","id","setInterval","clearInterval","status","OptionOverview","tokenName","setBalance","setTotalSupply","all","tokenInfo","init","TokenView","useParams","OptionInfoBox","VaultsList","MaxButton","PriceSection","handleDecimals","rawAmt","decimal","round","balanceBlock","asset","integer","digits","str","split","length","ManageVault","setVault","lastETHValueInStrike","setLastETHValue","setRatio","tokenBalance","setTokenBalance","ethBalance","setETHBalance","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","setIssueAmt","setBurnAmt","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","noVault","setNoVault","updatePremiumToPay","amount","premium","updatePremiumReceived","console","debug","ownerBalance","lastStrikeValue","isOwner","textAlign","display","alignItems","paddingTop","minCollateral","maxToRemove","maxToIssue","issued","Number","Manage","Footer","backgroundColor","position","left","bottom","height","external","href","App","storedTheme","localStorage","getItem","setTheme","assetsUrl","process","setItem","path","children","Onboarding","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.214f961a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, IdentityBadge, IconConnect, Box } from '@aragon/ui';\n\nfunction ConnectButton({user, setUser}){\n  const [isConnected, setIsConnected] = useState(false)\n\n  const connectWeb3 = async () => {\n    const accounts = await window.ethereum.enable();\n    setIsConnected(true)\n    setUser(accounts[0])\n    return true;\n  };\n  \n    return isConnected ? (\n      <Box padding={6}>\n        <IdentityBadge entity={user} connectedAccount />\n      </Box>\n    ) : (\n      <Button \n        icon={<IconConnect/>} \n        label={'Connect'} \n        onClick={connectWeb3}\n      /> \n    );\n  \n}\n\nexport default ConnectButton;\n","import React from 'react';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\nfunction ChangeMode({theme, updateTheme}) {\n\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark')\n    else updateTheme('light')\n  }\n\n    return (\n      <Button \n      icon={ theme === 'dark' ? <IconStar/> : <IconStarFilled/>} \n      onClick={handleChangeTheme}\n      label={ 'Theme' }\n      />\n    );\n  \n}\n\nexport default ChangeMode;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SettingsButton';\nimport { Bar, BackButton } from '@aragon/ui';\n\nfunction NavBar({ theme, updateTheme, user, setUser }) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n\n  const handleBack = (addr) => {\n    history.goBack()\n  };\n\n  return (\n    <Bar\n      primary={isHome ? <></> : <BackButton onClick={handleBack} />}\n      secondary={\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      }\n    ></Bar>\n  );\n}\n\nexport default NavBar;\n","export const options = [\n  {\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    title: 'cDai Insurance',\n\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017'\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\",\n    strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017'\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n     // constants in contract\n     symbol: 'oCRV',\n     name: 'Opyn y.curve.fi Insurance',\n     decimals: 8,\n     oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n     collateral: '0x0000000000000000000000000000000000000000',\n     underlying: \"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8\",\n     strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n     strikePrice: 9.2e-16,\n     minRatio: 1.6,\n     exchange: '0x5778f2824a114f6115dc74d432685d3336216017'\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 2e-10,\n    minRatio: 1.6,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017'\n  },\n]","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/options';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\n\nfunction DashBoard() {\n  const history = useHistory();\n  const goToToken = (addr) => {\n    history.push(`/token/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='Welcome to Opyn Position Monitor' />\n      <div style={{padding: 5, opacity:0.5}}> Choose a option contract to start </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> Let's Go </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default DashBoard;\n","// const prefix = 'https://cors-anywhere-anton.herokuapp.com/';\nconst opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn'\n\n/**\n * @return {Promise<Array<string>>}\n */\nexport async function getAllVaultOwners(){\n  const query = `{\n    vaultOpenedActions(first: 100, ) {\n      owner\n    }\n  }`\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  }\n  const res = await fetch(opynGraphEndpoint,  options)\n  const actions = (await res.json()).data.vaultOpenedActions\n  const owners = actions.map(action => action.owner)\n  return [...new Set(owners)]\n\n  // return [\"0xfb338c5fe584c026270e5ded1c2e0aca786a22fe\" ,\"0x7e5ce10826ee167de897d262fcc9976f609ecd2b\" ,\"0xabc04058e20c9cba4f360244648fedf30cebc3b4\" ,\"0x97c7c0c55a4ae424e9164bbc5cf8aa139cae5eec\" ,\"0x78353498a7c2741d52de5ef45e58bd17148a6297\" ,\"0x81bb32e4a7e4d0500d11a52f3a5f60c9a6ef126c\" ,\"0xd4c80637f45a55b5e1afa9cd0c935395063d4523\" ,\"0x855328ee5e94924cb83b267f25a513c2a2fc3e5e\"]\n}","export function formatDigits(num, percision) {\n  return parseFloat(num).toFixed(percision)\n}","import Web3 from 'web3';\nimport { formatDigits } from './common'\n\nconst optionContractABI = require('../constants/abi/OptionContract.json')\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json')\nconst oracleABI = require('../constants/abi/Oracle.json')\n\nconst Promise = require('bluebird');\nconst web3 = new Web3('https://mainnet.infura.io/v3/44fd23cda65746a699a5d3c0e2fa45d5');\n\n/**\n *\n * @param {Array<string>} owners\n * @param {string} oToken\n */\nexport const getVaults = async (owners, oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n\n  const vaults = await Promise.map(owners, async (owner) => {\n    const res = await oTokenContract.methods.getVault(owner).call();\n    const collateral = formatDigits(web3.utils.fromWei(res[0]), 6);\n    const oTokensIssued = res[1];\n    const underlying = res[2];\n    const owned = res[3];\n    return { collateral, oTokensIssued, underlying, owned, owner, oToken };\n  }).filter((vault) => vault.owned)\n  \n    return vaults \n};\n\nexport const getVaultsWithLiquidatable = async(vaults, oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const NewVaults = await Promise.map(vaults, async(vault) => {\n    let maxLiquidatable = 0\n    if(vault.isUnsafe) {\n      maxLiquidatable = await oTokenContract.methods\n        .maxOTokensLiquidatable(vault.owner)\n        .call();\n    }\n    vault.maxLiquidatable = maxLiquidatable\n    return vault\n  })\n  return NewVaults.sort(compare);\n}\n\nexport const getMaxLiquidatable = async(oToken, owner, liquidator) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable =  await oTokenContract.methods\n    .maxOTokensLiquidatable(owner)\n    .call();\n      \n  const userbalance = liquidator \n    ? await oTokenContract.methods.balanceOf(liquidator).call()\n    : 0\n  \n  const maxLiquidatable = Math.min(\n      parseInt(userbalance, 10), \n      parseInt(maxVaultLiquidatable, 10)\n  ).toString();\n  \n  return  parseInt(maxLiquidatable)\n  \n}\n\nexport const getTokenBalance = async(oToken, user) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const balance = await oTokenContract.methods.balanceOf(user).call()\n  return parseInt(balance)\n}\n\nexport const getDecimals = async(oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const decimals = await oTokenContract.methods.decimals().call()\n  return parseInt(decimals)\n}\n\nexport const getERC20Info = async(address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const totalSupplyDecimals = await token.methods.totalSupply().call();\n  const decimals = await token.methods.decimals().call();\n  const totalSupply = parseInt(totalSupplyDecimals) / 10 ** parseInt(decimals);\n  return { decimals, totalSupply }\n}\n\nexport const getAssetsAndOracle = async(address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const [\n    oracle, \n    underlying, \n    strike, \n    minRatioObj, \n    strikePriceObj\n  ] = await Promise.all([\n    token.methods.COMPOUND_ORACLE().call(),\n    token.methods.underlying().call(),\n    token.methods.strike().call(),\n    token.methods.minCollateralizationRatio().call(),\n    token.methods.strikePrice().call()\n  ]) \n  const strikePrice = strikePriceObj[0] * (10 ** strikePriceObj[1])\n  const minRatio =  minRatioObj[0] * (10 ** minRatioObj[1])\n  return {  underlying, strike, minRatio, strikePrice, oracle }\n}\n\nexport const getAllowance = async(contract, user, spender) => {\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call()\n  return allowance\n}\n\n/**\n * Get balance of accounts\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\nexport const getPrice = async (oracleAddr, token) => {\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return web3.utils.fromWei(price); // price base eth/ per token\n};\n\n// Exchange\nexport const getPremiumToPay = async(exchangeAddr, tokenToBuy, buyAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr)\n  const paymentToken = '0x0000000000000000000000000000000000000000';\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call()\n  return web3.utils.fromWei(premiumToPay)\n}\n\nexport const getPremiumReceived = async(exchangeAddr, tokenToSell, sellAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr)\n  const payoutToken = '0x0000000000000000000000000000000000000000';\n  const premiumReceived = await exchange.methods.premiumReceived(tokenToSell, payoutToken, sellAmt).call()\n  return web3.utils.fromWei(premiumReceived)\n}\n\n\nfunction compare(ownerA, ownerB) {\n  const rateA = ownerA.ratio;\n  const rateB = ownerB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n","import Notify from \"bnc-notify\"\n\nexport const notify = Notify({\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06',\n  networkId: 1\n});\n\n","import Web3 from 'web3'\nimport { notify } from './blockNative'\nimport { getAllowance } from './infura'\nconst oTokenABI = require('../constants/abi/OptionContract.json')\nconst exchangeABI = require('../constants/abi/OptionExchange.json')\n\nexport const getAccounts = async() => {\n  const accounts = await window.ethereum.enable();\n  return accounts\n}\n\nexport const liquidate = async(oTokenAddr, owner, liquidateAmt) => {\n\n  const accounts = await window.ethereum.enable();\n  const web3 = new Web3(window.ethereum);\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr)\n  \n  await oToken.methods.liquidate(owner, liquidateAmt).send({from: accounts[0]})\n    .on('transactionHash', (hash)=>{\n      notify.hash(hash)\n    })\n}\n\nexport const burnOToken = async(oTokenAddr, burnAmt) => {\n  const accounts = await window.ethereum.enable();\n  const web3 = new Web3(window.ethereum);\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr)\n  await oToken.methods.burnOTokens(burnAmt).send({from: accounts[0]})\n    .on('transactionHash', (hash)=>{\n      notify.hash(hash)\n    })\n}\n\nexport const issueOToken = async(oTokenAddr, issueAmt) => {\n  const accounts = await window.ethereum.enable();\n  const web3 = new Web3(window.ethereum);\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr)\n  \n  await oToken.methods.issueOTokens(issueAmt, accounts[0]).send({from: accounts[0]})\n    .on('transactionHash', (hash)=>{\n      notify.hash(hash)\n    })\n}\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmount) => {\n  const accounts = await window.ethereum.enable();\n  const web3 = new Web3(window.ethereum);\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr)\n  await oToken.methods.addETHCollateral(owner).send({from: accounts[0], value: web3.utils.toWei(ethAmount.toString())})\n    .on('transactionHash', (hash)=>{\n      notify.hash(hash)\n    })\n}\n\nexport const removeETHCollateral = async (oTokenAddr, ethAmount) => {\n  const accounts = await window.ethereum.enable();\n  const web3 = new Web3(window.ethereum);\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr)\n  await oToken.methods.removeCollateral(web3.utils.toWei(ethAmount.toString())).send({from: accounts[0] })\n    .on('transactionHash', (hash)=>{\n      notify.hash(hash)\n    })\n}\n\nexport const approve = async(oTokenAddr, spender, amt) => {\n  const accounts = await window.ethereum.enable();\n  const web3 = new Web3(window.ethereum);\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr)\n  await oToken.methods.approve(spender, amt).send({from: accounts[0]})\n  .on('transactionHash', (hash)=>{\n    notify.hash(hash)\n  })\n}\n\nexport const openVault = async(oTokenAddr) => {\n  const accounts = await window.ethereum.enable();\n  const web3 = new Web3(window.ethereum);\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr)\n  await oToken.methods.openVault().send({from: accounts[0]})\n  .on('transactionHash', (hash)=>{\n    notify.hash(hash)\n  })\n}\n\n// Option Exchange\n\n\nexport const buyOTokensFromExchange = async(oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const accounts = await window.ethereum.enable();\n  const web3 = new Web3(window.ethereum);\n  \n\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr)\n  await exchange.methods.buyOTokens(\n    accounts[0],\n    oTokenAddr,\n    '0x0000000000000000000000000000000000000000', // payment\n    buyAmt,\n  ).send({from: accounts[0], value: web3.utils.toWei(ethAmt.toString())})\n  .on('transactionHash', (hash)=>{\n    notify.hash(hash)\n  })\n}\n\nexport const sellOTokensFromExchange = async(oTokenAddr, exchangeAddr, sellAmt) => {\n  const accounts = await window.ethereum.enable();\n  const web3 = new Web3(window.ethereum);\n  const allowance = await getAllowance(oTokenAddr, accounts[0], exchangeAddr)\n  // console.log(`allowance ${allowance}`)\n  // console.log(`to buy ${buyAmt}`)\n  if (allowance < sellAmt) {\n    await approve(oTokenAddr, exchangeAddr, sellAmt)\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr)\n  await exchange.methods.sellOTokens(\n    accounts[0],\n    oTokenAddr,\n    '0x0000000000000000000000000000000000000000', // payment\n    sellAmt,\n  ).send({from: accounts[0]})\n  .on('transactionHash', (hash)=>{\n    notify.hash(hash)\n  })\n}","import React, { useState, useEffect } from 'react';\n\nimport { addETHCollateral, liquidate, getAccounts } from '../../utils/web3';\nimport { getMaxLiquidatable, getDecimals } from '../../utils/infura';\n\nimport { createTag } from './common';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconFundraising,\n  DataView,\n} from '@aragon/ui';\n\nfunction PositionModal({ oToken, owner, collateral, isSafe, oTokensIssued, ratio }) {\n  const [opened, setOpened] = useState(false);\n  const [decimals, setTokenDecimals] = useState(0);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() =>{\n    let isCancelled = false\n    async function getData(){    \n      if(!opened) return\n      const accounts = await getAccounts();\n      const maxLiquidatable = await getMaxLiquidatable(oToken, owner, accounts[0]);\n      const _decimals = await getDecimals(oToken);\n      if(!isCancelled){\n        setTokenDecimals(_decimals);\n        setLiquidateAmt(maxLiquidatable / 10 ** _decimals);\n      }\n    }\n    getData()\n\n    // clean up function\n    return ()=>{\n      isCancelled = true\n    }\n  }, [oToken, opened, owner]);\n\n  return (\n    <>\n      <Button onClick={open} label='More'></Button>\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header primary={'Access Position'}/>\n        <Box heading={'Owner'}>\n          <IdentityBadge entity={owner} shorten={false} />\n        </Box>\n        <DataView\n          fields={['Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[{ collateral, isSafe, oTokensIssued, ratio }]}\n          entriesPerPage={1}\n          renderEntry={({ collateral, isSafe, oTokensIssued, ratio }) => {\n            return [collateral, oTokensIssued, ratio, createTag(isSafe, ratio)];\n          }}\n        />\n\n        <br></br>\n        <Box heading={'Add Collateral'}>\n          <Split\n            primary={\n              <TextInput\n                type='number'\n                wide={true}\n                adornment={<IconEthereum />}\n                adornmentPosition='end'\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            }\n            secondary={\n              <Button\n                label='Add Collateral'\n                wide={true}\n                onClick={() => {\n                  addETHCollateral(oToken, owner, addValue);\n                }}\n              />\n            }\n          />\n        </Box>\n\n        <br></br>\n        <Box heading={'Liquidate'}>\n          <Split\n            primary={\n              <TextInput\n                wide={true}\n                type='number'\n                adornment={<IconFundraising />}\n                adornmentPosition='end'\n                value={liquidateAmt}\n                onChange={(event) => {\n                  setLiquidateAmt(event.target.value);\n                }}\n              />\n            }\n            secondary={\n              <Button\n                wide={true}\n                disabled={isSafe}\n                label='Liquidate'\n                onClick={() => {\n                  liquidate(oToken, owner, liquidateAmt * 10 ** decimals);\n                }}\n              />\n            }\n          />\n        </Box>\n      </Modal>\n    </>\n  );\n}\n\nexport default PositionModal;\n","import React from 'react';\n\nimport { Tag, IdentityBadge } from '@aragon/ui';\n\nimport VaultModal from './VaultModal';\n\nexport const renderListEntry = ({ owner, collateral, oTokensIssued, ratio, isSafe, oToken }) => {\n  return [\n    <IdentityBadge entity={owner} shorten={true} />,\n    collateral,\n    oTokensIssued,\n    ratio,\n    createTag(isSafe, ratio),\n    <VaultModal\n      oToken={oToken}\n      owner={owner}\n      collateral={collateral}\n      isSafe={isSafe}\n      oTokensIssued={oTokensIssued}\n      ratio={ratio}\n    />,\n  ];\n};\n\nexport const createTag = (isSafe, ratio) => {\n  return isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background='#FFEBAD' color='#FEC100'>\n        {' '}\n        Danger{' '}\n      </Tag>\n    ) : (\n      <Tag mode='new'> safe </Tag>\n    )\n  ) : (\n    <Tag color='#E34343' background='#FFC6C6'>\n      Unsafe!\n    </Tag>\n  );\n};\n\nexport function SectionTitle({ title }) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { DataView, Button, IdentityBadge } from '@aragon/ui';\nimport { createTag, SectionTitle } from './common';\n\nimport { openVault } from '../../utils/web3'\n\nfunction MangeButton({ oToken, owner }) {\n  const history = useHistory();\n  const goToManagePage = (oToken, owner) => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n  return <Button onClick={() => goToManagePage(oToken, owner)} label='Manage'></Button>;\n}\n\nfunction OpenVaultButton({ oToken, user }) {\n\n  const history = useHistory();\n\n  const openAndGoToVault = () => {\n    openVault(oToken)\n    history.push(`/manage/${oToken}/${user}`);\n  }\n\n  return <Button \n    onClick={() => openAndGoToVault(oToken)} \n    label='Open Vault'\n    />;\n}\n\nfunction MyVault({ vaults, oToken, user }) {\n  const myVault = vaults.find((vault) => vault.owner === user);\n  return user === '' ?\n  <></> :\n  myVault === undefined ? (\n    <>\n      <SectionTitle title={'No Vault Yet'} />\n      <DataView\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={[{}]}\n        entriesPerPage={1}\n        renderEntry={() => {\n          return [\n            <IdentityBadge entity={user} shorten={true} connectedAccount={true} />,\n            '-',\n            '-',\n            '-',\n            '-',\n            OpenVaultButton({ oToken, user}),\n          ];\n        }}\n      />\n    </> // has no open vault\n  ) : (\n    <>\n      <SectionTitle title={'My Vault'} />\n      <DataView\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={[myVault]}\n        entriesPerPage={1}\n        renderEntry={({ owner, collateral, oTokensIssued, ratio, isSafe, oToken }) => {\n          return [\n            <IdentityBadge entity={owner} shorten={true} connectedAccount={true} />,\n            collateral,\n            oTokensIssued,\n            ratio,\n            createTag(isSafe, ratio),\n            MangeButton({ oToken, owner }),\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default MyVault;\n","import React, { useState, useEffect } from 'react';\nimport { DataView } from '@aragon/ui';\nimport { getAllVaultOwners } from '../../utils/graph';\nimport { getVaults, getPrice, getVaultsWithLiquidatable } from '../../utils/infura';\nimport { options } from '../../constants/options';\nimport { renderListEntry, SectionTitle } from './common';\nimport { formatDigits } from '../../utils/common';\nimport MyVault from './MyVaultBox';\n\nfunction VaultOwnerList({ oToken, user }) {\n  const option = options.find((option) => option.addr === oToken);\n  const [isLoading, setIsLoading] = useState(true);\n  const [vaults, setVaults] = useState([]);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      const owners = await getAllVaultOwners();\n      const { strike, decimals, minRatio, strikePrice, oracle } = option;\n      const vaults = (await getVaults(owners, oToken));\n\n      const ethValueInStrike = 1 / (await getPrice(oracle, strike));\n      const vaultDetail = vaults.map((vault) => {\n        if (vault.oTokensIssued === '0') {\n          vault.ratio = Infinity\n          vault.isSafe = true\n          return vault\n        } \n        const valueProtectingInEth = parseFloat(strikePrice) * vault.oTokensIssued;\n        const ratio = formatDigits(\n          (parseFloat(vault.collateral) * ethValueInStrike) / valueProtectingInEth,\n          4\n        );\n\n        const oTokensIssued = formatDigits(parseInt(vault.oTokensIssued) / 10 ** decimals, 4);\n        vault.oTokensIssued = oTokensIssued;\n        vault.ratio = ratio;\n        vault.isSafe = ratio > minRatio;\n        return vault;\n      });\n\n      const vaultWithLiquidatable = await getVaultsWithLiquidatable(vaultDetail);\n\n      if (!isCancelled) {\n        setVaults(vaultWithLiquidatable);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 12000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [oToken, option, user]);\n\n  return (\n    <>\n      <MyVault vaults={vaults} oToken={oToken} user={user} />\n      <SectionTitle title={'All Vaults'} />\n      <DataView\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaults}\n        entriesPerPage={5}\n        renderEntry={renderListEntry}\n      />\n    </>\n  );\n}\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Split, Header, IdentityBadge } from '@aragon/ui';\nimport { getERC20Info, getBalance } from '../../utils/infura';\n\nimport { options } from '../../constants/options';\n\nfunction OptionOverview({ oToken, tokenName }) {\n  const option = options.find((option) => option.addr === oToken);\n  const [balance, setBalance] = useState('0');\n  const [totalSupply, setTotalSupply] = useState('0');\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      const [balance, tokenInfo] = await Promise.all([getBalance(oToken), getERC20Info(oToken)]);\n      const { totalSupply } = tokenInfo;\n      if (!isCancelled) {\n        setBalance(balance);\n        setTotalSupply(totalSupply);\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [oToken]);\n\n  return (\n    <>\n      <Header primary={option.name} />\n      <Split\n        primary={\n          <Split\n            primary={\n              <Box heading={'contract'} padding={15}>\n                <IdentityBadge entity={oToken} shorten={false} />\n              </Box>\n            }\n            secondary={\n              <Box heading={'balance'} padding={15}>\n                {balance}\n              </Box>\n            }\n          />\n        }\n        secondary={\n          <Box heading={'total supply'} padding={15}>\n            {totalSupply} {tokenName}\n          </Box>\n        }\n      />\n    </>\n  );\n}\n\nexport default OptionOverview;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nfunction TokenView({user}) {\n  let { addr } = useParams();\n  return (\n    <>\n      <OptionInfoBox oToken={addr} user={user} />\n      <VaultsList oToken={addr} user={user}/>\n    </>\n  );\n}\n\nexport default TokenView;\n","import React, { useState, useEffect } from 'react';\n\nimport {\n  getVaults,\n  getTokenBalance,\n  getBalance,\n  getPrice,\n  getPremiumToPay,\n  getPremiumReceived,\n} from '../../utils/infura';\n\nimport {\n  ButtonBase,\n  IconCirclePlus,\n  IconCircleMinus,\n  Button,\n  TextInput,\n  Header,\n  Box,\n} from '@aragon/ui';\n\nimport {\n  addETHCollateral,\n  removeETHCollateral,\n  burnOToken,\n  issueOToken,\n  buyOTokensFromExchange,\n  sellOTokensFromExchange,\n} from '../../utils/web3';\nimport { options } from '../../constants/options';\nimport { formatDigits } from '../../utils/common';\nimport { createTag } from '../TokenView/common';\n\nfunction ManageVault({ token, owner, user }) {\n  const option = options.find((option) => option.addr === token);\n  const { exchange, decimals, symbol, oracle, strike, strikePrice, minRatio } = option;\n\n  const [vault, setVault] = useState({});\n  const [lastETHValueInStrike, setLastETHValue] = useState(0);\n\n  const [ratio, setRatio] = useState(0);\n\n  const [tokenBalance, setTokenBalance] = useState(0);\n  const [ethBalance, setETHBalance] = useState(0);\n\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0);\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0);\n\n  const [issueAmt, setIssueAmt] = useState(0);\n  const [burnAmt, setBurnAmt] = useState(0);\n\n  const [buyAmt, setBuyAmt] = useState(0);\n  const [sellAmt, setSellAmt] = useState(0);\n  const [premiumToPay, setPremiumToPay] = useState(0);\n  const [premiumReceived, setPremiumReceived] = useState(0);\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n\n  const updatePremiumToPay = async (buyAmt) => {\n    if (!buyAmt || burnAmt === 0) {\n      setPremiumToPay(0)\n      return;\n    }\n    const amount = handleDecimals(buyAmt, decimals);\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(premium);\n  };\n\n  const updatePremiumReceived = async (sellAmt) => {\n    if (!sellAmt || sellAmt === 0) {\n      setPremiumReceived(0)\n      return\n    };\n    const amount = handleDecimals(sellAmt, decimals);\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(premium);\n  };\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateInfo() {\n      console.debug('Updating Page...');\n      const vault = (await getVaults([owner], token))[0];\n      if (vault === undefined) {\n        return;\n      }\n      setNoVault(false);\n      const [ownerBalance, ethBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getBalance(owner),\n      ]);\n\n      const tokenBalance = ownerBalance / 10 ** decimals;\n\n      const lastStrikeValue = await getPrice(oracle, strike);\n      const ethValueInStrike = 1 / lastStrikeValue;\n      const valueProtectingInEth = parseFloat(strikePrice) * vault.oTokensIssued;\n      const ratio = formatDigits(\n        (parseFloat(vault.collateral) * ethValueInStrike) / valueProtectingInEth,\n        5\n      );\n\n      if (!isCancelled) {\n        setLastETHValue(ethValueInStrike);\n        setVault(vault);\n        setTokenBalance(tokenBalance);\n        setETHBalance(ethBalance);\n        setRatio(ratio);\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, oracle, owner, strike, strikePrice, token]);\n\n  const isOwner = user === owner;\n\n  return noVault ? (\n    <div style={{ padding: 100, textAlign: 'center' }}> No Vault Found for this user </div>\n  ) : (\n    <>\n      <Header primary={isOwner ? 'Manage Your Vault' : 'Vault Detail'} />\n\n      <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%' }}>{balanceBlock('Owner ETH Balance', ethBalance)}</div>\n        <div style={{ width: '50%' }}>{balanceBlock(`${symbol} Balance`, tokenBalance)}</div>\n        <div style={{ width: '20%' }}>\n          <>\n            <div style={{ fontSize: 14, padding: 3 }}>\n              Current Ratio {ratio > 0 ? createTag(ratio >= minRatio, ratio) : ''}\n            </div>\n            <div style={{ fontSize: 24, padding: 3 }}>\n              <span style={{ fontSize: 24 }}>{ratio.toString().split('.')[0]}</span>.\n              <span style={{ fontSize: 18 }}>{ratio.toString().split('.')[1]} </span>\n              {minRatio > 0 ? <span style={{ fontSize: 16 }}> / {minRatio} </span> : ''}\n              {/* {balance} */}\n            </div>\n          </>\n        </div>\n      </div>\n\n      <Box heading={'Collateral'}>\n        <div style={{ display: 'flex' }}>\n          {/* balance */}\n          <div style={{ width: '30%' }}>{balanceBlock('ETH', vault.collateral)}</div>\n          {/* Add collateral */}\n          <div style={{ width: '32%', paddingTop: '2%' }}>\n            <div style={{ display: 'flex' }}>\n              <div style={{ width: '60%' }}>\n                <>\n                  <TextInput\n                    type='number'\n                    wide={true}\n                    value={addCollateralAmt}\n                    onChange={(event) => {\n                      setAddCollateralAmt(event.target.value);\n                    }}\n                  />\n                  <MaxButton\n                    onClick={() => {\n                      setAddCollateralAmt(ethBalance);\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{ width: '40%' }}>\n                <Button\n                  wide={true}\n                  icon={<IconCirclePlus />}\n                  label='Add'\n                  onClick={() => {\n                    addETHCollateral(token, owner, addCollateralAmt);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ width: '6%' }}></div>\n          {/* Remove collateral */}\n          <div style={{ width: '32%', paddingTop: '2%' }}>\n            <div style={{ display: 'flex' }}>\n              <div style={{ width: '60%' }}>\n                <>\n                  <TextInput\n                    type='number'\n                    wide={true}\n                    value={removeCollateralAmt}\n                    onChange={(event) => {\n                      setRemoveCollateralAmt(event.target.value);\n                    }}\n                  />\n                  <MaxButton\n                    onClick={() => {\n                      if (lastETHValueInStrike <= 0) return;\n                      const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                      const minCollateral = minValueInStrike / lastETHValueInStrike;\n                      const maxToRemove = vault.collateral - minCollateral;\n                      setRemoveCollateralAmt(maxToRemove);\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{ width: '40%' }}>\n                <Button\n                  wide={true}\n                  icon={<IconCircleMinus />}\n                  label='Remove'\n                  onClick={() => {\n                    removeETHCollateral(token, removeCollateralAmt);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Box>\n\n      <Box heading={'Total Issued'}>\n        <div style={{ display: 'flex' }}>\n          {/* total Issued */}\n          <div style={{ width: '30%' }}>\n            {balanceBlock(symbol, vault.oTokensIssued ? vault.oTokensIssued / 10 ** decimals : 0)}\n          </div>\n          {/* Issue More Token */}\n          <div style={{ width: '32%', paddingTop: '2%' }}>\n            <div style={{ display: 'flex' }}>\n              <div style={{ width: '60%' }}>\n                <>\n                  <TextInput\n                    type='number'\n                    wide={true}\n                    value={issueAmt}\n                    onChange={(event) => {\n                      setIssueAmt(event.target.value);\n                    }}\n                  />\n                  <MaxButton\n                    onClick={() => {\n                      if (strikePrice <= 0) return;\n\n                      const maxTotal =\n                        (vault.collateral * lastETHValueInStrike) / (minRatio * strikePrice);\n                      const maxToIssueRaw = maxTotal - vault.oTokensIssued;\n                      const maxToIssue = maxToIssueRaw / 10 ** decimals;\n                      setIssueAmt(maxToIssue);\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{ width: '40%' }}>\n                <Button\n                  wide={true}\n                  icon={<IconCirclePlus />}\n                  label='Issue'\n                  onClick={() => {\n                    issueOToken(token, handleDecimals(issueAmt, decimals));\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ width: '6%' }}></div>\n          {/* Remove collateral */}\n          <div style={{ width: '32%', paddingTop: '2%' }}>\n            <div style={{ display: 'flex' }}>\n              <div style={{ width: '60%' }}>\n                <>\n                  <TextInput\n                    type='number'\n                    wide={true}\n                    value={burnAmt}\n                    onChange={(event) => {\n                      setBurnAmt(event.target.value);\n                    }}\n                  />\n                  <MaxButton\n                    onClick={() => {\n                      const issued = Number(vault.oTokensIssued) / 10 ** decimals;\n                      setBurnAmt(Math.min(tokenBalance, issued));\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{ width: '40%' }}>\n                <Button\n                  wide={true}\n                  icon={<IconCircleMinus />}\n                  label='Burn'\n                  onClick={() => {\n                    burnOToken(token, handleDecimals(burnAmt, decimals));\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Box>\n\n      {/* Exchange */}\n      <Box heading={'Exchange'}>\n        <div style={{ display: 'flex' }}>\n          {/* total Issued */}\n          <div style={{ width: '30%' }}>{balanceBlock( `${symbol} Balance`, tokenBalance)}</div>\n          {/* Buy Token from Uniswap */}\n          <div style={{ width: '32%', paddingTop: '2%' }}>\n            <div style={{ display: 'flex' }}>\n              <div style={{ width: '60%' }}>\n                <>\n                  <TextInput\n                    type='number'\n                    wide={true}\n                    value={buyAmt}\n                    onChange={(event) => {\n                      setBuyAmt(event.target.value);\n                      updatePremiumToPay(event.target.value);\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{ width: '40%' }}>\n                <Button\n                  wide={true}\n                  icon={<IconCirclePlus />}\n                  label='Buy'\n                  onClick={() => {\n                    buyOTokensFromExchange(\n                      token,\n                      exchange,\n                      handleDecimals(buyAmt, decimals),\n                      premiumToPay\n                    );\n                  }}\n                />\n              </div>\n            </div>\n            <PriceSection label='Cost:' amt={premiumToPay} symbol='' />\n          </div>\n          <div style={{ width: '6%' }}></div>\n          {/* Remove collateral */}\n          <div style={{ width: '32%', paddingTop: '2%' }}>\n            <div style={{ display: 'flex' }}>\n              <div style={{ width: '60%' }}>\n                <>\n                  <TextInput\n                    type='number'\n                    wide={true}\n                    value={sellAmt}\n                    onChange={(event) => {\n                      setSellAmt(event.target.value);\n                      updatePremiumReceived(event.target.value);\n                    }}\n                  />\n                  <MaxButton\n                    onClick={() => {\n                      setSellAmt(tokenBalance);\n                      updatePremiumReceived(tokenBalance);\n                    }}\n                  />\n                </>\n              </div>\n              <div style={{ width: '40%' }}>\n                <Button\n                  wide={true}\n                  icon={<IconCircleMinus />}\n                  label='Sell'\n                  onClick={() => {\n                    sellOTokensFromExchange(\n                      token,\n                      exchange,\n                      handleDecimals(sellAmt, decimals)\n                    );\n                  }}\n                />\n              </div>\n            </div>\n            <PriceSection label='Premium' amt={premiumReceived} />\n          </div>\n        </div>\n      </Box>\n    </>\n  );\n}\n\nfunction MaxButton({ onClick }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nconst handleDecimals = (rawAmt, decimal) => {\n  return Math.round(parseFloat(rawAmt) * 10 ** decimal);\n};\n\nconst balanceBlock = (asset, balance) => {\n  let integer = '0',\n    digits = '0';\n  if (balance > 0) {\n    const str = balance.toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}> {asset} </div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>.\n        <span style={{ fontSize: 18 }}> {digits} </span>\n        {/* {balance} */}\n      </div>\n    </>\n  );\n};\n\nexport default ManageVault;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport ManageMyVault from './Manage'\n\nfunction ManageVault({user}) {\n  let { token, owner } = useParams();\n\n  return (\n    <>\n      <ManageMyVault owner={owner} user={user} token={token}/>\n    </>\n  );\n}\n\nexport default ManageVault;\n","import React from 'react'\n\nimport { Link } from '@aragon/ui'\n\nfunction Footer({theme}) {\n  var style = {\n    backgroundColor: theme === 'light' ? \"#F8F8F8\" : '#35425e' ,\n    textAlign: \"center\",\n    padding: \"17px\",\n    position: \"fixed\",\n    left: \"0\",\n    bottom: \"0\",\n    height: \"50px\",\n    width: \"100%\",\n    fontSize: \"12px\"\n  }\n\n  return (  \n    <div style={style}>\n      Powered By {' '}\n      <Link  external={true} href=\"https://opyn.co/#/\">Opyn</Link>{', '} \n      <Link  external={true} href=\"https://ui.aragon.org/\">Aragon UI</Link>{', '}  \n      <Link  external={true} href=\"https://www.blocknative.com/\">Blocknative</Link>{'. '}  \n      Hosted on <Link  external={true} href=\"https://github.com/antoncoding/opyn-liquidator\">GitHub</Link>.\n    </div>\n  )\n}\n\nexport default Footer","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Onboarding from './components/Onboarding';\nimport TokenView from './components/TokenView';\nimport ManageVault from './components/ManageVault'\nimport Footer from './components/Footer';\nimport { Main } from '@aragon/ui';\n\nfunction App() {\n  const storedTheme = window.localStorage.getItem('theme') || 'light';\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (theme) => {\n    setTheme(theme);\n    window.localStorage.setItem('theme', theme);\n  };\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          <Route path='/token/:addr' children={<TokenView user={user} />} />\n          <Route path='/manage/:token/:owner' children={<ManageVault user={user}/>} />\n          <Route path='/' children={<Onboarding />} />\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}