{"version":3,"sources":["utils/web3.js","utils/blockNative.js","utils/infura.js","constants/contracts.js","components/NavBar/ConnectButton.js","components/NavBar/SettingsButton.js","components/NavBar/index.js","components/HomePage/index.js","components/common/AddressBlock.js","components/common/BalanceBlock.js","components/common/RatioTag.js","components/common/SectionTitle.js","components/common/MaxButton.js","components/common/HelpText.js","components/common/PriceSection.js","components/common/Comment.js","components/common/VaultButton.js","components/AllContracts/index.js","components/Trade/index.js","utils/graph.js","utils/number.js","utils/calculation.js","components/MyVaults/index.js","components/types/index.js","components/OptionPage/ExerciseModal.js","components/OptionPage/VaultModal.js","components/OptionPage/VaultsList.js","components/OptionPage/OptionInfoBox.js","components/OptionPage/index.js","components/ManageVault/HeaderDashboard.js","components/ManageVault/CollateralManagement.js","components/ManageVault/IssuedTokenManagement.js","components/ManageVault/Liquidation.js","components/ManageVault/Exercise.js","components/ManageVault/index.js","components/ManagePool/Header.js","components/ManagePool/OptionExchange.js","components/ManagePool/AddLiquidity.js","components/ManagePool/RemoveLiquidity.js","components/ManagePool/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["web3","notify","Notify","dappId","process","networkId","optionContractABI","require","optionExchangeABI","oracleABI","Web3","ETH_ADDR","getTokenBalance","erc20Token","user","a","oTokenContract","eth","Contract","methods","balanceOf","call","balance","getDecimals","decimals","parseInt","getERC20Symbol","symbol","getERC20Info","address","token","totalSupply","totalSupplyDecimals","getMaxLiquidatable","oToken","vaultOwner","maxOTokensLiquidatable","maxVaultLiquidatable","getUnderlyingRequiredToExercise","tokenToExercise","underlyingRequiredToExercise","underlyringRequired","getAllowance","contract","spender","allowance","getBalance","utils","fromWei","getPrice","oracleAddr","oracle","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","paymentToken","exchange","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","insurances","addr","title","name","collateral","underlying","strike","strikePrice","minRatio","uniswapExchange","expiry","eth_options","allOptions","concat","ETH_ADDRESS","DAI","KETH","oTokenABI","exchangeABI","uniswapExchangeABI","invokerABI","UINT256_MAX","storedTheme","window","localStorage","getItem","onboard","Onboard","darkMode","subscriptions","wallet","provider","walletSelect","description","wallets","walletName","infuraKey","apiKey","updateModalMode","theme","config","connect","walletCheck","getState","disconnect","walletReset","checkConnectedAndGetAddress","checked","liquidate","oTokenAddr","owner","liquidateAmt","account","send","from","on","hash","kollateralLiquidate","optionExchange","amountOTokens","BigNumber","lte","Error","kollateralInvoker","data","abi","encodeParameters","invoke","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmt","value","toWei","toString","addERC20Collateral","collateralAmt","collateralAmtBN","lt","collateralToken","approve","removeCollateral","redeem","redeemVaultBalance","amt","exercise","amountToExercise","vaults","underlyingRequired","underlyingIsETH","openVault","buyOTokensFromExchange","buyOTokens","sellOTokensFromExchange","sellOTokens","addLiquidity","uniswapAddr","maxToken","minLiquidity","ethInWei","deadline","Math","ceil","Date","now","removeLiquidity","pool_token_amount","min_eth_wei","min_tokens","ConnectButton","setUser","useState","isConnected","setIsConnected","connectWeb3","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","padding","entity","icon","label","ChangeMode","updateTheme","LinkButton","paddingLeft","opacity","fontSize","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","height","goBack","push","secondary","MainButton","iconUrl","width","alt","src","HomePage","display","alignItems","marginRight","marginLeft","AddressBlock","shorten","BalanceBlock","asset","integer","digits","gt","str","split","length","RatioTag","isSafe","ratio","useCollateral","background","color","mode","defaultProps","SectionTitle","MaxButton","HelperText","parseFloat","toFixed","PriceSection","forceDisplay","amtBN","toNumber","Comment","text","ManageVaultButton","OpenVaultButton","AllContracts","tabSelected","setTabSelected","goToToken","items","selected","onChange","fields","entries","entriesPerPage","renderEntry","header","toDateString","goToTrade","getAllVaultsForOption","optionAddress","query","postQuery","response","getAllVaultsForUser","actions","getLiquidationHistory","liquidationActionsQuery","liquidateActions","getExerciseHistory","option","exerciseActions","options","method","headers","body","JSON","stringify","fetch","res","json","toBaseUnitBN","rawAmt","raw","base","decimalsBN","times","pow","integerValue","toTokenUnitsBN","tokenAmount","tokenDecimals","div","formatDigits","num","percision","timeSince","timeStamp","secondsPast","getTime","ts","day","getDate","month","match","replace","year","getFullYear","compareVaultRatio","vaultA","vaultB","rateA","rateB","comparison","compareVaultIssued","amountA","oTokensIssued","amountB","calculateStrikeValueInCollateral","collateralDecimals","undefined","strikeValueInWei","strikeValueInCollateral","collateralValueInWei","calculateRatio","tokenIssued","Infinity","colalteralBN","tokenIssuedBN","strikePriceBN","Promise","MyVaults","opendVaults","setOpenedVaults","tokensToOpen","setTokensToOpen","useMemo","userVaults","openedVaults","notOpenedTokens","map","entry","find","vault","optionsContract","isOpened","collatearlIsETH","oTokenName","sort","paddingBottom","PropTypes","shape","string","isRequired","number","ExerciseModal","underlyingDecimals","underlyingSymbol","userUnderlyingBalance","setUserUnderlyingBalance","userOTokenBalance","setUserOTokenBalance","opened","setOpened","exerciseAmount","setExerciseAmount","setUnderlyringRequired","nonEmptyVaults","filter","selectedIndexes","setSelectedIndexes","selectedHasEnoughCollateral","setHasEnoughCollateral","userUnderlying","userOTkns","checkHasEnoughToken","sumIssued","reduce","accumulator","current","plus","gte","onChangeExerciseAmt","amount","exeAmtBN","underlyingRawAmt","index","visible","onClose","heading","type","wide","adornment","adornmentPosition","event","target","renderSelectionCount","count","selection","onSelectEntries","indexes","disabled","vaultowners","VaultModal","collateralIsETH","toast","useToast","addValue","setAddValue","setLiquidateAmt","isCancelled","maxLiquidatable","getData","catch","error","justifyContent","VaultOwnerList","vaultUsesCollateral","isLoading","setIsLoading","vaultsWithDetail","setVaultDetail","page","setPage","updateInfo","vaultDetail","id","setInterval","clearInterval","onPageChange","status","OptionOverview","tokenSymbol","totalCollateral","setTotalCollateral","setTotalSupply","totalCollt","rawCollateralBalance","supply","init","OptionPage","useParams","o","setVaults","setCollateralDecimals","setUnderlyingDecimals","setUnderlyingSymbol","colltDecimals","all","_decimals","_symbol","allVaults","OptionInfoBox","VaultsList","HeaderDashboard","newRatio","tokenInUnit","collateralBalance","CollateralManagement","isOwner","collateralAsset","collateralAssetBalance","strikeValue","setNewRatio","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","collateralSymbol","setCollateralSymbol","updateNewRatio","newCollateral","amtRaw","newCollateralInWei","collateralBalanceRaw","newCollateralWei","minus","minRatioBN","minCollateral","maxToRemove","maxToRemoveInTokenUnit","IssuedTokenManagement","tokenBalance","setIssueAmt","setBurnAmt","newAmt","intputAmt","amountBN","onChangeIssueAmt","maxToIssueRaw","maxToIssue","onChangeBurnAmt","issued","maxToBurn","LiquidationHistory","userTokenBalance","setMaxLiquidatable","setEntries","amountToLiquidate","setAmtToLiquidate","maxToLiquidate","updateLiquidatable","actionsForThisVault","actionA","actionB","timestamp","updateList","maximum","min","amtToLiquidate","collateralToPay","liquidator","transactionHash","transaction","ExerciseHistory","amtCollateralToPay","oTokensToExercise","exerciser","ManageVault","setVault","setStrikeValue","setRatio","ownerTokenBalance","setOwnerTokenBalance","setUserTokenBalance","userCollateralAssetBalance","setUserCollateralAssetBalance","noVault","setNoVault","v","vaultToManage","_ownerTokenBalance","_userTokenBalance","userColltBalance","ownerTokenBalanceBN","userTokenBalanceBN","strikeValInCollt","currentRatio","textAlign","end","Liquidation","Exercise","poolETHBalance","poolTokenBalance","OptionExchange","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","updatePremiumToPay","butAmountBN","premium","updatePremiumReceived","sellAmountBN","AddLiquidity","otoken","otokenSymbol","otokenDecimals","userETHBalance","liquidityTokenDecimals","liquidityTokenSupply","amtETHToAdd","setAmtETHToAdd","amtTokenToAdd","setAmtTokenToAdd","liquidityMinted","liquidityMintedMin","ethToTokenRatio","tokenToEthRatio","onChangeTokenAmtToSend","tokenAmt","newEthAmt","newTokenAmt","onChangeETHAmtToSend","ethWei","RemoveLiquidity","userliquidityTokenBalance","amtLiquidityTokenToSell","setAmtLiquidityTokenToSell","poolPortion","estETHRecieved","estOTokenReceived","minETHReceived","minTokenReceived","tokenAmtBN","min_eth","min_token","ManagePool","setPoolTokenBalance","setPoolETHBalance","setUserETHBalance","setUserLiquidityTokenBalance","setLiquidityTokenSupply","setLiquidityTokenDecimals","updatePoolInfo","exTokenBalance","exchagneETHBalance","liquidityTokenInfo","liqTokenDecimal","liqTokenTotalSupply","exchangeTokenBalance","updateUserInfo","userEthBalance","liqTokenBalance","userOTknBalanceBN","userLiqTknBalanceBN","Footer","backgroundColor","position","left","bottom","external","href","App","setTheme","assetsUrl","newTheme","setItem","path","Trade","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.3dbf2cba.chunk.js","sourcesContent":["/* eslint-disable camelcase */\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport Onboard from 'bnc-onboard';\n\nimport { notify } from './blockNative';\nimport { getAllowance, getPremiumToPay } from './infura';\nimport {\n  ETH_ADDRESS, DAI, ERC20_Liquidator, AAVE_LENDING, Kollateral_Liquidator, Kollateral_Invoker, KETH,\n} from '../constants/contracts';\n\nconst oTokenABI = require('../constants/abi/OptionContract.json');\nconst exchangeABI = require('../constants/abi/OptionExchange.json');\nconst uniswapExchangeABI = require('../constants/abi/UniswapExchange.json');\nconst aaveABI = require('../constants/abi/LendingPool.json');\nconst invokerABI = require('../constants/abi/KollateralInvoker.json');\n\nconst DEADLINE_FROM_NOW = 60 * 15;\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY;\nconst FORTMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY;\n\nconst storedTheme = window.localStorage.getItem('theme');\n\nlet web3;\n\nconst onboard = Onboard({\n  darkMode: storedTheme === 'dark',\n  dappId: BLOCKNATIVE_KEY, // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  walletSelect: {\n    description: 'Please select a wallet to connect to Opyn Dashboard',\n    wallets: [\n      { walletName: 'metamask' },\n      {\n        walletName: 'walletConnect',\n        infuraKey: INFURA_KEY,\n      },\n      {\n        walletName: 'fortmatic',\n        apiKey: FORTMATIC_KEY,\n      },\n      { walletName: 'trust' },\n      { walletName: 'coinbase' },\n      { walletName: 'status' },\n    ],\n  },\n});\n\n\nexport const updateModalMode = async (theme) => {\n  const darkMode = theme === 'dark';\n  onboard.config({ darkMode });\n};\n\nexport const connect = async () => {\n  const selected = await onboard.walletSelect();\n  if (!selected) return false;\n  const checked = await onboard.walletCheck();\n  if (!checked) return false;\n  return onboard.getState().address;\n};\n\nexport const disconnect = async () => {\n  onboard.walletReset();\n};\n\n// eslint-disable-next-line consistent-return\nexport const checkConnectedAndGetAddress = async () => {\n  let checked = false;\n  try {\n    checked = await onboard.walletCheck();\n  } catch (error) {\n    await onboard.walletSelect();\n    checked = await onboard.walletCheck();\n  } finally {\n    // eslint-disable-next-line no-unsafe-finally\n    if (checked) return onboard.getState().address;\n  }\n};\n\nexport const liquidate = async (oTokenAddr, owner, liquidateAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .liquidate(owner, liquidateAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const aaveLiquidate = async (oTokenAddr, optionExchange, owner) => {\n  const account = await checkConnectedAndGetAddress();\n  const oTokenAddressBytes = web3.utils.hexToBytes(web3.utils.toHex(oTokenAddr));\n  const vaultAddressBytes = web3.utils.hexToBytes(web3.utils.toHex(owner));\n  const data = oTokenAddressBytes.concat(vaultAddressBytes);\n\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const amountOTokens = await oToken.methods.maxOTokensLiquidatable(owner).call();\n\n  const premiumToPay = await getPremiumToPay(\n    optionExchange, // exchange\n    oTokenAddr,\n    amountOTokens,\n    DAI,\n  );\n\n  const lendingPool = new web3.eth.Contract(aaveABI, AAVE_LENDING);\n\n  // Use liquidator to liquidate our own position\n  await lendingPool.methods\n    .flashLoan(\n      ERC20_Liquidator,\n      DAI, // _reserve\n      premiumToPay, // amount\n      data,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} oTokenAddr\n * @param {string} optionExchange\n * @param {string} owner\n * @param {string} paymentToken payment token address\n */\nexport const kollateralLiquidate = async (oTokenAddr, optionExchange, owner, paymentToken) => {\n  const account = await checkConnectedAndGetAddress();\n\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const amountOTokens = await oToken.methods.maxOTokensLiquidatable(owner).call();\n\n  if (new BigNumber(amountOTokens).lte(new BigNumber(0))) {\n    throw new Error('Nothing to liquidate');\n  }\n\n  const premiumToPay = await getPremiumToPay(\n    optionExchange, // exchange\n    oTokenAddr,\n    amountOTokens,\n    paymentToken === KETH ? ETH_ADDRESS : paymentToken,\n  );\n\n  const kollateralInvoker = new web3.eth.Contract(invokerABI, Kollateral_Invoker);\n\n  const data = web3.eth.abi.encodeParameters(['address', 'address'], [owner, oTokenAddr]);\n  await kollateralInvoker.methods\n    .invoke(\n      Kollateral_Liquidator, // invokeTo\n      data, // invokeData\n      paymentToken, // tokenAddress: Dai, ETH,\n      premiumToPay,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const burnOToken = async (oTokenAddr, burnAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .burnOTokens(burnAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const issueOToken = async (oTokenAddr, issueAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .issueOTokens(issueAmt, account)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .addETHCollateral(owner)\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collaral\n * @param {string} oTokenAddr\n * @param {string} owner\n * @param {number|string} collateralAmt in min unit\n */\nexport const addERC20Collateral = async (collateral, oTokenAddr, owner, collateralAmt) => {\n  const collateralAmtBN = new BigNumber(collateralAmt);\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const allowance = await getAllowance(collateral, account, oTokenAddr);\n  // Approve to move collateral\n  if (new BigNumber(allowance).lt(collateralAmtBN)) {\n    const collateralToken = new web3.eth.Contract(oTokenABI, collateral);\n    await collateralToken.methods\n      .approve(oTokenAddr, UINT256_MAX)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n  await oToken.methods\n    .addERC20Collateral(owner, collateralAmtBN.toString())\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collateral\n * @param {string} oTokenAddr\n * @param {string} collateralAmt in base unit\n */\nexport const removeCollateral = async (collateral, oTokenAddr, collateralAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if (collateral === ETH_ADDRESS) {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\nexport const redeem = async (token) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .redeemVaultBalance()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const approve = async (oTokenAddr, spender, amt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * Exercise your oTokens\n * @param {string} oTokenAddr\n * @param {string} underlying asset type\n * @param {string} amountToExercise\n * @param {string[]} vaults vault owners\n */\nexport const exercise = async (oTokenAddr, underlying, amountToExercise, vaults) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const underlyingRequired = await oToken.methods\n    .underlyingRequiredToExercise(amountToExercise)\n    .call();\n\n  const underlyingIsETH = underlying === ETH_ADDRESS;\n\n  if (!underlyingIsETH) {\n    const allowance = await getAllowance(underlying, account, oTokenAddr);\n    if (new BigNumber(allowance).lt(new BigNumber(underlyingRequired))) {\n      await approve(underlying, oTokenAddr, UINT256_MAX);\n    }\n  }\n\n  await oToken.methods\n    .exercise(amountToExercise, vaults)\n    .send({ from: account, value: underlyingIsETH ? underlyingRequired : '0' })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVault = async (oTokenAddr) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .openVault()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Option Exchange\n\nexport const buyOTokensFromExchange = async (oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .buyOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      buyAmt,\n    )\n    .send({ from: account, value: ethAmt })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const sellOTokensFromExchange = async (oTokenAddr, exchangeAddr, sellAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oTokenAddr, account, exchangeAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(sellAmt))) {\n    await approve(oTokenAddr, exchangeAddr, UINT256_MAX);\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .sellOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      sellAmt,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Uniswap Exchange\n\n/**\n *\n */\nexport const addLiquidity = async (oToken, uniswapAddr, maxToken, minLiquidity, ethInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oToken, account, uniswapAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(maxToken))) {\n    await approve(oToken, uniswapAddr, UINT256_MAX);\n  }\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .addLiquidity(\n      minLiquidity, // min_liquidity\n      maxToken, // max_tokens\n      deadline, // deadline\n    )\n    .send({ from: account, value: ethInWei })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n */\nexport const removeLiquidity = async (uniswapAddr, pool_token_amount, min_eth_wei, min_tokens) => {\n  const account = await checkConnectedAndGetAddress();\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .removeLiquidity(pool_token_amount, min_eth_wei, min_tokens, deadline)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","import Notify from 'bnc-notify';\n\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY;\n\n// eslint-disable-next-line import/prefer-default-export\nexport const notify = Notify({\n  dappId: BLOCKNATIVE_KEY,\n  networkId: 1,\n});\n","import Web3 from 'web3';\n\nconst Promise = require('bluebird');\nconst optionContractABI = require('../constants/abi/OptionContract.json');\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json');\nconst oracleABI = require('../constants/abi/Oracle.json');\n\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\n\nconst web3 = new Web3(`https://mainnet.infura.io/v3/${INFURA_KEY}`);\n\nconst ETH_ADDR = '0x0000000000000000000000000000000000000000';\n\n// ERC20 Info\n\n/**\n *\n * @param {string} erc20Token address\n * @param {string} user address\n * @return {Promise<string>}\n */\nexport const getTokenBalance = async (erc20Token, user) => {\n  if (user === '') return '0';\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const balance = await oTokenContract.methods.balanceOf(user).call();\n  return balance;\n};\n\nexport const getDecimals = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const decimals = await oTokenContract.methods.decimals().call();\n  return parseInt(decimals, 10);\n};\n\nexport const getERC20Symbol = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  return oTokenContract.methods.symbol().call();\n};\n\n/**\n *\n * @param {*} address\n * @return {Promise<{decimals: number, totalSupply: number}>}\n */\nexport const getERC20Info = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const totalSupplyDecimals = await token.methods.totalSupply().call();\n  const decimals = await token.methods.decimals().call();\n  const totalSupply = parseInt(totalSupplyDecimals, 10) / 10 ** parseInt(decimals, 10);\n  return { decimals: parseInt(decimals, 10), totalSupply };\n};\n\n// Option Contract\n\n/**\n * todo: use graph ql\n * @param {Array<string>} owners\n * @param {string} oToken\n */\nexport const getVaults = async (owners, oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n\n  const vaults = await Promise.map(owners, async (owner) => {\n    const res = await oTokenContract.methods.getVault(owner).call();\n    const collateral = web3.utils.fromWei(res[0]);\n    const oTokensIssued = res[1];\n    const underlying = res[2];\n    return {\n      collateral, oTokensIssued, underlying, owner, oToken,\n    };\n  });\n  return vaults;\n};\n\n/**\n * Max liquidatable for given vault\n * @param {string} oToken\n * @param {string} owner\n * @return {Promise<number>}\n */\nexport const getMaxLiquidatable = async (oToken, vaultOwner) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable = await oTokenContract.methods\n    .maxOTokensLiquidatable(vaultOwner)\n    .call();\n  return maxVaultLiquidatable;\n};\n\n// /**\n//  * Compare user balance with max liquidatable and decide max liquidatable\n//  * @param {string} oToken\n//  * @param {string} owner\n//  * @param {string} liquidator\n//  */\n// export const getMaxToLiquidate = async (oToken, owner, liquidator) => {\n//   const maxVaultLiquidatable = await getMaxLiquidatable(oToken, owner);\n//   const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n//   const userbalance = liquidator ? await oTokenContract.methods.balanceOf(liquidator).call() : 0;\n\n//   const maxLiquidatable = Math.min(\n//     parseInt(userbalance, 10),\n//     parseInt(maxVaultLiquidatable, 10),\n//   ).toString();\n\n//   return parseInt(maxLiquidatable, 10);\n// };\n\n/**\n *\n * @param {string} oToken\n * @param {string} tokenToExercise\n * @return {Promise<string>}\n */\nexport const getUnderlyingRequiredToExercise = async (oToken, tokenToExercise) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const underlyringRequired = await oTokenContract.methods\n    .underlyingRequiredToExercise(tokenToExercise)\n    .call();\n  // console.log(`what `, underlyringRequired)\n  return underlyringRequired;\n};\n\nexport const getAssetsAndOracle = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const [oracle, underlying, strike, minRatioObj, strikePriceObj] = await Promise.all([\n    token.methods.COMPOUND_ORACLE().call(),\n    token.methods.underlying().call(),\n    token.methods.strike().call(),\n    token.methods.minCollateralizationRatio().call(),\n    token.methods.strikePrice().call(),\n  ]);\n  const strikePrice = strikePriceObj[0] * 10 ** strikePriceObj[1];\n  const minRatio = minRatioObj[0] * 10 ** minRatioObj[1];\n  return {\n    underlying, strike, minRatio, strikePrice, oracle,\n  };\n};\n\n/**\n *\n * @param {string} contract\n * @param {string} user\n * @param {string} spender\n * @return {Promise<string>}\n */\nexport const getAllowance = async (contract, user, spender) => {\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call();\n  return allowance;\n};\n\n/**\n * Get balance in eth for the account\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  if (address === '') return '0';\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\n/**\n * Get price of token in unit of wei\n * @param {string} oracleAddr\n * @param {string} token\n * @returns {Promise<string>}\n */\nexport const getPrice = async (oracleAddr, token) => {\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return price; // unit: wei/ per token\n};\n\n// Option Exchange\nexport const getPremiumToPay = async (\n  exchangeAddr,\n  tokenToBuy,\n  buyAmt,\n  paymentToken = ETH_ADDR,\n) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call();\n  return premiumToPay;\n};\n\nexport const getPremiumReceived = async (exchangeAddr, tokenToSell, sellAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const payoutToken = ETH_ADDR;\n  const premiumReceived = await exchange.methods\n    .premiumReceived(tokenToSell, payoutToken, sellAmt)\n    .call();\n  return web3.utils.fromWei(premiumReceived);\n};\n\n// uniswapExchange\n","/* eslint-disable camelcase */\nexport const insurances = [\n  {\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    title: 'cDai Insurance',\n\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xA6923533A6362008e9b536271C2Bdc0FF1467D3c',\n    expiry: 1612915200,\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x39AA39c021dfbaE8faC545936693aC917d5E7563',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xE3A0a2431a093fed99037987eD0A88550e5E79AA',\n    expiry: 1612915200,\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n    // constants in contract\n    symbol: 'oCRV',\n    name: 'Opyn y.curve.fi Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 9.2e-16,\n    minRatio: 1.6,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x21f5E9D4Ec20571402A5396084B1634314A68c97',\n    expiry: 1585440000,\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance ',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 2e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x8a0976500EED661202810bAB030a057DF15c4CC9',\n    expiry: 1612915200,\n  },\n];\n\nexport const eth_options = [\n  {\n    addr: '0x48ab8a7d3bf2eb942e153e4275ae1a8988238dc7',\n    title: 'ETH Put $100 04/03/20',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/03/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    underlying: '0x0000000000000000000000000000000000000000',\n    strike: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    strikePrice: 1e-6,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x30651Fc7F912f5E40AB22F3D34C2159431Fb1c4F',\n    expiry: 1585958340,\n  },\n  {\n    addr: '0x6c79f10543c7886c6946b8a996f824e474bac8f2',\n    title: 'ETH Put $100 04/24/20',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/24/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    underlying: '0x0000000000000000000000000000000000000000',\n    strike: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    strikePrice: 1e-6,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x5734a78b1985B47dF3fbf1736c278F57c2C30983',\n    expiry: 1587715200,\n  },\n];\n\nexport const allOptions = insurances.concat(eth_options);\n\nexport const ETH_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const ERC20_Liquidator = '0xF8cE4E70F52FdDBc72547Ce9616ed3E7d4525e8A';\nexport const Kollateral_Liquidator = '0xfBaB30f79bbbC92C708E7e9b01E329e003d8Ce48';\n\nexport const AAVE_LENDING = '0x398eC7346DcD622eDc5ae82352F02bE94C62d119';\nexport const Kollateral_Invoker = '0x06d1f34fd7c055ae5ca39aa8c6a8e10100a45c01';\n\nexport const DAI = '0x6b175474e89094c44da98b954eedeac495271d0f';\nexport const USDC = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48';\nexport const KETH = '0x0000000000000000000000000000000000000001';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase,\n} from '@aragon/ui';\n\nimport { connect, disconnect } from '../../utils/web3';\n\nfunction ConnectButton({ user, setUser }) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n  };\n\n  const disconnectWeb3 = async () => {\n    await disconnect();\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{ paddingTop: 5, paddingRight: 5 }}>\n        <LinkBase onClick={disconnectWeb3} size=\"small\">\n          {' '}\n          <IconPower />\n          {' '}\n        </LinkBase>\n      </div>\n      <Box padding={6}>\n        <IdentityBadge entity={user} />\n      </Box>\n\n    </>\n  ) : (\n    <Button icon={<IconConnect />} label=\"Connect\" onClick={connectWeb3} />\n  );\n}\n\nConnectButton.propTypes = {\n  user: PropTypes.string.isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n\nexport default ConnectButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\nfunction ChangeMode({ theme, updateTheme }) {\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark');\n    else updateTheme('light');\n  };\n\n  return (\n    <Button\n      icon={theme === 'dark' ? <IconStar /> : <IconStarFilled />}\n      onClick={handleChangeTheme}\n      label=\"Theme\"\n    />\n  );\n}\n\nChangeMode.propTypes = {\n  theme: PropTypes.string.isRequired,\n  updateTheme: PropTypes.func.isRequired,\n};\n\nexport default ChangeMode;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, BackButton, LinkBase } from '@aragon/ui';\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SettingsButton';\n\nfunction NavBar({\n  theme, updateTheme, user, setUser,\n}) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n\n  return (\n    <Bar\n      primary={\n        isHome ? (\n          <></>\n        ) : (\n          <>\n            <div style={{ height: '100%' }}>\n              <BackButton\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n            <LinkButton\n              title=\"My Vaults\"\n              onClick={() => {\n                history.push('/myvaults/');\n              }}\n            />\n            <LinkButton\n              title=\"All Contracts\"\n              onClick={() => {\n                history.push('/options/');\n              }}\n            />\n            <LinkButton\n              title=\"Trade\"\n              onClick={() => {\n                history.push('/trade/');\n              }}\n            />\n          </>\n        )\n      }\n      secondary={(\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      )}\n    />\n  );\n}\n\n\nNavBar.propTypes = {\n  theme: PropTypes.string.isRequired,\n  updateTheme: PropTypes.func.isRequired,\n  user: PropTypes.string.isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n\nfunction LinkButton({ title, onClick }) {\n  return (\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}>\n        <div style={{ padding: '1%', opacity: 0.5, fontSize: 17 }}>{title}</div>\n      </LinkBase>\n    </div>\n  );\n}\n\nLinkButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Header, Box, LinkBase } from '@aragon/ui';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header primary=\"Welcome to Opyn Dashboard\" />\n      <div style={{ padding: 5, opacity: 0.5 }}> Tools for DeFi Risk Management. </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%', marginRight: '3%' }}>\n          <MainButton\n            title=\"My Vaults\"\n            description=\"Manage collateral, Mint/Burn oTokens\"\n            iconUrl=\"https://opyn.co/static/media/1.68813886.svg\"\n            onClick={() => {\n              history.push('/myvaults');\n            }}\n          />\n        </div>\n\n        <div style={{ width: '30%' }}>\n          <MainButton\n            title=\"All Contracts\"\n            description=\" Monitor and liquidate vaults.\"\n            iconUrl=\"https://opyn.co/static/media/2.18d22be0.svg\"\n            onClick={() => {\n              history.push('/options/');\n            }}\n          />\n        </div>\n\n        <div style={{ width: '30%', marginLeft: '3%' }}>\n          <MainButton\n            title=\"Trade\"\n            description=\"Buy, Sell or Provided Liquidity.\"\n            iconUrl=\"https://opyn.co/static/media/3.4da8b24d.svg\"\n            onClick={() => {\n              history.push('./trade');\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction MainButton({\n  title, description, iconUrl, onClick,\n}) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding: 10, fontSize: 18 }}>{title}</div>\n        <img alt=\"icon\" style={{ padding: 10, height: 64 }} src={iconUrl} />\n        <div style={{ paddingTop: 5, opacity: 0.5 }}>\n          {' '}\n          {description}\n          {' '}\n        </div>\n\n      </Box>\n    </LinkBase>\n  );\n}\n\nMainButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  iconUrl: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IdentityBadge } from '@aragon/ui';\n\nfunction AddressBlock({ label, address }) {\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}>{label}</div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten />\n      </div>\n    </>\n  );\n}\n\nAddressBlock.propTypes = {\n  label: PropTypes.string.isRequired,\n  address: PropTypes.string.isRequired,\n};\n\nexport default AddressBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BigNumber from 'bignumber.js';\n\nfunction BalanceBlock({ asset, balance }) {\n  let integer = '0';\n  let digits = '0';\n  if (new BigNumber(balance).gt(new BigNumber(0))) {\n    const str = new BigNumber(balance).toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}>{asset}</div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>\n        .\n        <span style={{ fontSize: 18 }}>\n          {' '}\n          {digits}\n          {' '}\n        </span>\n      </div>\n    </>\n  );\n}\n\nBalanceBlock.propTypes = {\n  asset: PropTypes.string.isRequired,\n  balance: PropTypes.oneOfType([\n    PropTypes.instanceOf(BigNumber),\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n};\n\nexport default BalanceBlock;\n","import React from 'react';\nimport { Tag } from '@aragon/ui';\nimport Proptypes from 'prop-types';\n\nfunction RatioTag({ isSafe, ratio, useCollateral = true }) {\n  return !useCollateral ? (\n    <Tag color=\"#78827a\" background=\"#c0c2c0\">\n      Cool\n    </Tag>\n  ) : isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background=\"#FFEBAD\" color=\"#FEC100\">\n        {' '}\n        Danger\n        {' '}\n      </Tag>\n    ) : (\n      <Tag mode=\"new\"> safe </Tag>\n    )\n  ) : (\n    <Tag color=\"#E34343\" background=\"#FFC6C6\">\n      Unsafe!\n    </Tag>\n  );\n}\n\nRatioTag.propTypes = {\n  isSafe: Proptypes.bool.isRequired,\n  ratio: Proptypes.number.isRequired,\n  useCollateral: Proptypes.bool,\n};\n\nRatioTag.defaultProps = {\n  useCollateral: true,\n};\n\nexport default RatioTag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SectionTitle({ title }) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SectionTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nMaxButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default MaxButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction HelperText({ label, amt }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>\n          {label}\n        </span>\n        <span style={{ fontSize: 13 }}>\n          {parseFloat(amt).toFixed(5)}\n        </span>\n      </div>\n    );\n  } return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\nHelperText.propTypes = {\n  label: PropTypes.string.isRequired,\n  amt: PropTypes.string.isRequired,\n};\n\nexport default HelperText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\n\nfunction PriceSection({\n  label, amt, symbol = '', forceDisplay = false,\n}) {\n  const amtBN = new BigNumber(amt);\n  if (amtBN.gt(new BigNumber(0)) || forceDisplay) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>{label}</span>\n        <span style={{ fontSize: 13 }}>{amtBN.toNumber().toFixed(5)}</span>\n        <span style={{ fontSize: 13 }}>{symbol}</span>\n      </div>\n    );\n  }\n  return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\nPriceSection.propTypes = {\n  label: PropTypes.string.isRequired,\n  symbol: PropTypes.string,\n  amt: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.instanceOf(BigNumber),\n  ]).isRequired,\n  forceDisplay: PropTypes.bool,\n};\n\nPriceSection.defaultProps = {\n  symbol: '',\n  forceDisplay: false,\n};\n\nexport default PriceSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Comment({ text }) {\n  return (\n    <div style={{ padding: 5, opacity: 0.5 }}>\n      {text}\n    </div>\n  );\n}\n\nComment.propTypes = {\n  text: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n  ]).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport { Button } from '@aragon/ui';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { openVault } from '../../utils/web3';\n\n\nfunction ManageVaultButton({ oToken, owner }) {\n  const history = useHistory();\n\n  const goToManagePage = () => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n\n  return <Button onClick={() => goToManagePage(oToken, owner)} label=\"Manage\" />;\n}\n\nManageVaultButton.propTypes = {\n  oToken: PropTypes.string.isRequired,\n  owner: PropTypes.string.isRequired,\n};\n\n\nfunction OpenVaultButton({ oToken, user }) {\n  const history = useHistory();\n\n  const openAndGoToVault = () => {\n    openVault(oToken);\n    history.push(`/manage/${oToken}/${user}`);\n  };\n\n  return (\n    <Button\n      onClick={() => openAndGoToVault(oToken)}\n      label=\"Open Vault\"\n    />\n  );\n}\n\nOpenVaultButton.propTypes = {\n  oToken: PropTypes.string.isRequired,\n  user: PropTypes.string.isRequired,\n};\n\nexport { ManageVaultButton, OpenVaultButton };\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, DataView, IdentityBadge, Button, Tabs,\n} from '@aragon/ui';\nimport { eth_options, insurances } from '../../constants/contracts';\n// import { timeSince } from '../../utils/number';\nimport { Comment } from '../common';\n\nfunction AllContracts() {\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const history = useHistory();\n  const goToToken = (addr) => {\n    history.push(`/option/${addr}`);\n  };\n  return (\n    <>\n      <Header primary=\"All Contracts\" />\n      <Comment text=\"Choose an option contract to proceed.\" />\n      <Tabs\n        items={['DeFi Insurance', 'ETH Options']}\n        selected={tabSelected}\n        onChange={setTabSelected}\n      />\n\n      {tabSelected === 0 ? (\n        <DataView\n          fields={['Name', 'Contract', '']}\n          entries={insurances}\n          entriesPerPage={6}\n          renderEntry={({ addr, title }) => [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> View Vault </Button>,\n          ]}\n        />\n      ) : (\n        <DataView\n          header=\"Options\"\n          fields={['Name', 'Contract', 'Expiry', '']}\n          entries={eth_options}\n          entriesPerPage={6}\n          renderEntry={({ addr, title, expiry }) => [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            new Date(parseInt(expiry * 1000, 10)).toDateString(),\n            <Button onClick={() => goToToken(addr)}> View Vault </Button>,\n          ]}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, DataView, IdentityBadge, Button,\n} from '@aragon/ui';\nimport { insurances, eth_options } from '../../constants/contracts';\n\nimport { Comment } from '../common';\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToTrade = (addr) => {\n    history.push(`/trade/${addr}`);\n  };\n  return (\n    <>\n      <Header primary=\"Trade\" />\n      <Comment text=\"Buy or Sell DeFi Insurance\" />\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={insurances}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => [\n          <>{title}</>,\n          <IdentityBadge entity={addr} shorten={false} />,\n          <Button onClick={() => goToTrade(addr)}> Start Trading </Button>,\n        ]}\n      />\n      <br />\n      <Comment text=\"Trade Options\" />\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={eth_options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => [\n          <>{title}</>,\n          <IdentityBadge entity={addr} shorten={false} />,\n          <Button onClick={() => goToTrade(addr)}> Start Trading </Button>,\n        ]}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","// const prefix = 'https://cors-anywhere-anton.herokuapp.com/';\nconst opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn';\n\n/**\n * @return {Promise<Array<{colalteral: string, oTokensIssued: string, owner: string}>>}\n */\nexport async function getAllVaultsForOption(optionAddress) {\n  const query = `\n  {\n    vaults(where: {\n      optionsContract: \"${optionAddress}\"\n    }) {\n      owner\n      oTokensIssued,\n      collateral,\n    }\n  }`;\n  const response = await postQuery(query);\n  const vaults = response.data.vaults;\n  return vaults;\n}\n\nexport async function getAllVaultsForUser(owner) {\n  const query = `{\n    vaults (where: {owner: \"${owner}\"}) {\n      optionsContract {\n        address\n      }\n      oTokensIssued,\n      collateral,\n    }\n  }`;\n  const response = await postQuery(query);\n  const actions = response.data.vaults;\n  return actions;\n}\n\nexport async function getLiquidationHistory(owner) {\n  const query = liquidationActionsQuery(owner);\n  const response = await postQuery(query);\n  return response.data.liquidateActions;\n}\n\nconst liquidationActionsQuery = (owner) => `{\n  liquidateActions(where: {\n    vault_contains: \"${owner}\"\n  }) {\n    vault {\n      owner,\n      optionsContract {\n        address\n      }\n    },\n    liquidator,\n    collateralToPay,\n    timestamp\n    transactionHash\n  }\n}\n\n`;\n\n/**\n * Get all exercise history for one user\n * @param {string} owner vault owner\n * @param {string} option contract address\n * @return {Promise<{\n * amtCollateralToPay: string,\n * exerciser:string,\n * oTokensToExercise:string,\n * timestamp:string,\n * transactionHash: string}>}\n */\nexport async function getExerciseHistory(owner, option) {\n  const query = `{\n    exerciseActions (where: {\n      vault_contains: \"${owner}\"\n      optionsContract_contains: \"${option}\"\n    }) {\n      exerciser\n      oTokensToExercise\n      amtCollateralToPay\n      transactionHash\n      timestamp\n    }\n  }`;\n\n  const response = await postQuery(query);\n  return response.data.exerciseActions;\n}\n\nconst postQuery = async (query) => {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  };\n  const res = await fetch(opynGraphEndpoint, options);\n  return res.json();\n};\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\nconst web3 = new Web3();\n\n/**\n * Convert 10.999 to 10999000\n * @param {number|string|BigNumber} rawAmt\n * @param {number} decimals\n * @returns {BigNumber}\n */\nexport function toBaseUnitBN(rawAmt, decimals) {\n  const raw = new BigNumber(rawAmt);\n  const base = new BigNumber(10);\n  const decimalsBN = new BigNumber(decimals);\n  return raw.times(base.pow(decimalsBN)).integerValue();\n}\n\n/**\n * Convert 10999000 to 10.999\n * @param {string | number | BigNumber} tokenAmount in base unit\n * @param {number} tokenDecimals\n * @return {BigNumber}\n */\nexport const toTokenUnitsBN = (tokenAmount, tokenDecimals) => {\n  const amt = new BigNumber(tokenAmount);\n  const digits = new BigNumber(10).pow(new BigNumber(tokenDecimals));\n  return amt.div(digits);\n};\n\nexport function formatDigits(num, percision) {\n  return parseFloat(num).toFixed(percision);\n}\n\nexport const fromWei = web3.utils.fromWei;\nexport const toWei = web3.utils.toWei;\n\nexport function timeSince(timeStamp) {\n  const now = new Date();\n  const secondsPast = (now.getTime() - timeStamp) / 1000;\n  if (secondsPast < 60) {\n    return `${parseInt(secondsPast, 10)}s ago`;\n  }\n  if (secondsPast < 3600) {\n    return `${parseInt(secondsPast / 60, 10)}m ago`;\n  }\n  if (secondsPast <= 86400) {\n    return `${parseInt(secondsPast / 3600, 10)}h ago`;\n  }\n  if (secondsPast > 86400) {\n    const ts = new Date(timeStamp);\n    const day = ts.getDate();\n    const month = ts\n      .toDateString()\n      .match(/ [a-zA-Z]*/)[0]\n      .replace(' ', '');\n    const year = ts.getFullYear() === now.getFullYear() ? '' : ` ${ts.getFullYear()}`;\n    return `${day} ${month}${year}`;\n  }\n\n  return timeStamp;\n}\n\nexport function compareVaultRatio(vaultA, vaultB) {\n  const rateA = vaultA.ratio;\n  const rateB = vaultB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n\nexport function compareVaultIssued(vaultA, vaultB) {\n  const amountA = vaultA.oTokensIssued;\n  const amountB = vaultB.oTokensIssued;\n\n  let comparison = 0;\n  if (parseInt(amountA, 10) > parseInt(amountB, 10)) {\n    comparison = -1;\n  } else if (parseInt(amountA, 10) < parseInt(amountB, 10)) {\n    comparison = 1;\n  }\n  return comparison;\n}\n","import BigNumber from 'bignumber.js';\nimport { getPrice, getDecimals } from './infura';\nimport { toBaseUnitBN } from './number';\n\n/**\n * Get strike value in collateral for ratio calculation.\n * @param {string} collateral address\n * @param {string} strike address\n * @param {string} oracle address\n * @param {number?} collateralDecimals if provided, wont get again if needed\n * @return {Promise<BigNumber>}\n */\nexport const calculateStrikeValueInCollateral = async (\n  collateral,\n  strike,\n  oracle,\n  collateralDecimals = undefined,\n) => {\n  const ETH_Address = '0x0000000000000000000000000000000000000000';\n  let strikeValueInCollateral;\n  let decimals = collateralDecimals;\n  if (collateral === ETH_Address) {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    strikeValueInCollateral = new BigNumber(strikeValueInWei);\n  } else if (collateral === strike) {\n    // No collateral, like ETH option\n    if (decimals === undefined) decimals = await getDecimals(collateral);\n    strikeValueInCollateral = new BigNumber(10).pow(new BigNumber(decimals));\n  } else {\n    // Use other ERC20 as collateral : Untested\n    if (decimals === undefined) decimals = await getDecimals(collateral);\n    const strikeValueInWei = await getPrice(oracle, strike);\n    const collateralValueInWei = await getPrice(oracle, collateral);\n    strikeValueInCollateral = toBaseUnitBN(\n      parseInt(strikeValueInWei, 10) / parseInt(collateralValueInWei, 10),\n      decimals,\n    );\n  }\n  return strikeValueInCollateral;\n};\n\n/**\n *\n * @param {string|number|BigNumber} collateral number of collateral in base unit\n * @param {string|number|BigNumber} tokenIssued number of token in base unit\n * @param {string|number|BigNumber} strikePrice\n * @param {BigNumber} strikeValueInCollateral\n * @return {number}\n */\nexport const calculateRatio = (collateral, tokenIssued, strikePrice, strikeValueInCollateral) => {\n  if (tokenIssued === '0') return Infinity;\n  const colalteralBN = new BigNumber(collateral);\n  const tokenIssuedBN = new BigNumber(tokenIssued);\n  const strikePriceBN = new BigNumber(strikePrice);\n  // const strikeValueInCollateralBN = new BigNumber(strikeValueInCollateral.toString())\n  const result = colalteralBN\n    .div(tokenIssuedBN)\n    .div(strikePriceBN)\n    .div(strikeValueInCollateral);\n  return result.toNumber();\n};\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Header, DataView, IdentityBadge } from '@aragon/ui';\nimport { allOptions, ETH_ADDRESS } from '../../constants/contracts';\nimport {\n  SectionTitle, ManageVaultButton, OpenVaultButton, Comment,\n} from '../common';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport {\n  formatDigits, compareVaultRatio, toTokenUnitsBN,\n} from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getDecimals } from '../../utils/infura';\n\nconst Promise = require('bluebird');\n\nfunction MyVaults({ user }) {\n  const [opendVaults, setOpenedVaults] = useState([]);\n  const [tokensToOpen, setTokensToOpen] = useState([]);\n  const isConnected = user !== '';\n\n  // Only request all vaults once\n  useMemo(async () => {\n    if (!isConnected) return;\n    const userVaults = await getAllVaultsForUser(user);\n    const openedVaults = [];\n    const notOpenedTokens = [];\n    await Promise.map(allOptions, async (option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      const isOpened = entry !== undefined;\n      const collatearlIsETH = option.collateral === ETH_ADDRESS;\n      if (isOpened) {\n        const collateralDecimals = collatearlIsETH ? 18 : await getDecimals(option.collateral);\n        const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n          option.collateral,\n          option.strike,\n          option.oracle,\n          collateralDecimals,\n        );\n        const ratio = calculateRatio(\n          entry.collateral,\n          entry.oTokensIssued,\n          option.strikePrice,\n          strikeValueInCollateral,\n        );\n        openedVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          collateralDecimals,\n          ratio,\n        });\n      } else if (option.expiry > (Date.now() / 1000)) {\n        notOpenedTokens.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n        });\n      }\n    });\n    setOpenedVaults(openedVaults.sort(compareVaultRatio));\n    setTokensToOpen(notOpenedTokens);\n  }, [isConnected, user]);\n\n  return (\n    <>\n      <Header primary=\"My Vaults\" />\n      {isConnected ? (\n        <>\n          {opendVaults.length > 0 ? (\n            <div style={{ paddingBottom: '3%' }}>\n              <SectionTitle title=\"Existing Vaults\" />\n              <DataView\n                fields={['Token', 'contract', 'collateral', 'Ratio', '']}\n                entries={opendVaults}\n                entriesPerPage={6}\n                renderEntry={({\n                  oToken, oTokenName, collateral, collateralDecimals, ratio,\n                }) => [\n                  oTokenName,\n                  <IdentityBadge entity={oToken} />,\n                  formatDigits(toTokenUnitsBN(collateral, collateralDecimals).toNumber(), 5),\n                  formatDigits(ratio, 4),\n                  <ManageVaultButton oToken={oToken} owner={user} />,\n                ]}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n          {tokensToOpen.length > 0 ? (\n            // Show vaults to open\n            <div>\n              <SectionTitle title=\"Open new vaults\" />\n              <DataView\n                fields={['Token', 'contract', 'manage']}\n                entries={tokensToOpen}\n                renderEntry={({ oToken, oTokenName }) => [\n                  oTokenName,\n                  <IdentityBadge entity={oToken} shorten={false} />,\n                  <OpenVaultButton oToken={oToken} user={user} />,\n                ]}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </>\n      ) : (\n        // Not connected to wallet\n        <Comment text=\"Please connect wallet to proceed.\" />\n      )}\n    </>\n  );\n}\n\nMyVaults.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default MyVaults;\n","import PropTypes from 'prop-types';\n\nexport const vault = PropTypes.shape({\n  owner: PropTypes.string,\n  oTokensIssued: PropTypes.string,\n  collateral: PropTypes.string,\n});\n\n// export const detailVault = PropTypes.shape({\n//   oTokensIssued: PropTypes.string,\n//   collateral: PropTypes.string,\n// });\n\nexport const option = PropTypes.shape({\n  addr: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  symbol: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  decimals: PropTypes.number.isRequired,\n  oracle: PropTypes.string.isRequired,\n  collateral: PropTypes.string.isRequired,\n  underlying: PropTypes.string.isRequired,\n  strike: PropTypes.string.isRequired,\n  strikePrice: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  exchange: PropTypes.string.isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n  expiry: PropTypes.number.isRequired,\n});\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  DataView,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\nimport * as myType from '../types';\nimport { exercise } from '../../utils/web3';\nimport { PriceSection } from '../common';\nimport { getUnderlyingRequiredToExercise, getBalance, getTokenBalance } from '../../utils/infura';\nimport {\n  toTokenUnitsBN, toBaseUnitBN, formatDigits, compareVaultIssued,\n} from '../../utils/number';\n\n\n/**\n *\n * @param {{\n * oToken: string,\n * option: { decimals: number, underlying:string }\n * collateralDecimals: Number\n * underlyingDecimals: Number\n * underlyingSymbol: string\n * vaults: { collateral:string, oTokensIssued: string, owner:string, symbol:string }[]\n * underlyingIsETH: boolean\n * }} param0\n */\nfunction ExerciseModal({\n  user,\n  oToken,\n  option,\n  vaults,\n  collateralDecimals,\n  underlyingDecimals,\n  underlyingSymbol,\n  underlyingIsETH,\n}) {\n  const [userUnderlyingBalance, setUserUnderlyingBalance] = useState(new BigNumber(0));\n  const [userOTokenBalance, setUserOTokenBalance] = useState(new BigNumber(0));\n\n  const [opened, setOpened] = useState(false);\n\n  const [exerciseAmount, setExerciseAmount] = useState(new BigNumber(0));\n  const [underlyringRequired, setUnderlyringRequired] = useState(new BigNumber(0));\n\n  const nonEmptyVaults = vaults\n    .filter((vault) => parseInt(vault.collateral, 10) > 0)\n    .sort(compareVaultIssued);\n\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\n  const [selectedHasEnoughCollateral, setHasEnoughCollateral] = useState(false);\n\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  // Update user balance\n  useMemo(async () => {\n    if (!user) return;\n    if (!opened) return;\n    let userUnderlying;\n    if (underlyingIsETH) {\n      userUnderlying = new BigNumber(await getBalance(user));\n    } else {\n      userUnderlying = toTokenUnitsBN(\n        await getTokenBalance(option.underlying, user),\n        underlyingDecimals,\n      );\n    }\n    const userOTkns = toTokenUnitsBN(await getTokenBalance(oToken, user), option.decimals);\n\n    setUserUnderlyingBalance(userUnderlying);\n    setUserOTokenBalance(userOTkns);\n  }, [oToken, option.decimals, option.underlying, underlyingDecimals, underlyingIsETH, user, opened]);\n\n  const onSelectEntries = (entries, indexes) => {\n    setSelectedIndexes(indexes);\n    checkHasEnoughToken(entries);\n  };\n\n  /**\n   * Set selectedHasEnoughCollateral according to selected entries\n   * @param {{oTokenIssued: string}[]} entries\n   */\n  const checkHasEnoughToken = (entries) => {\n    const sumIssued = entries.reduce(\n      (accumulator, current) => accumulator.plus(new BigNumber(current.oTokensIssued)), new BigNumber(0),\n    );\n    if (sumIssued.gt(new BigNumber(0)) && sumIssued.gte(toBaseUnitBN(exerciseAmount, option.decimals))) {\n      setHasEnoughCollateral(true);\n    } else {\n      setHasEnoughCollateral(false);\n    }\n  };\n\n  const onChangeExerciseAmt = async (amount) => {\n    if (!amount) {\n      setExerciseAmount(new BigNumber(0));\n      setUnderlyringRequired(new BigNumber(0));\n      return;\n    }\n    const exeAmtBN = new BigNumber(amount);\n    setExerciseAmount(exeAmtBN);\n    const underlyingRawAmt = await getUnderlyingRequiredToExercise(\n      oToken,\n      toBaseUnitBN(exeAmtBN, option.decimals).toString(),\n    );\n    const underlyingRequired = toTokenUnitsBN(underlyingRawAmt, underlyingDecimals);\n    setUnderlyringRequired(underlyingRequired);\n\n    // check current selection has enought tokens\n    const entries = selectedIndexes.map((index) => nonEmptyVaults[index]);\n    checkHasEnoughToken(entries);\n  };\n\n  return (\n    <>\n      {/* Button */}\n      <Button onClick={open} label=\"Claim\" />\n\n      {/* Modal */}\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header\n          primary=\"Exercise Option\"\n          secondary={(\n            <div style={{ display: 'flex' }}>\n              <PriceSection\n                label=\"Balance:\"\n                amt={userOTokenBalance.toNumber()}\n                symbol={option.symbol}\n                forceDisplay\n              />\n              <PriceSection label=\" +\" amt={userUnderlyingBalance.toNumber()} symbol={underlyingSymbol} />\n            </div>\n          )}\n        />\n        <Box heading=\"Amount to Exercise\">\n          <Split\n            primary={(\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  adornment={option.symbol}\n                  adornmentPosition=\"end\"\n                  value={exerciseAmount.toNumber()}\n                  onChange={(event) => onChangeExerciseAmt(event.target.value)}\n                />\n              </>\n            )}\n            secondary={(\n              <div style={{ paddingTop: 5 }}>\n                <PriceSection\n                  label=\"+ Underlyring\"\n                  amt={underlyringRequired.toNumber()}\n                  symbol={underlyingSymbol}\n                />\n              </div>\n            )}\n          />\n        </Box>\n        <DataView\n          mode=\"table\"\n          renderSelectionCount={(count) => `${count} vaults selected`}\n          fields={['Owner', 'Issued', 'collateral']}\n          entries={nonEmptyVaults}\n          entriesPerPage={5}\n          selection={selectedIndexes}\n          onSelectEntries={onSelectEntries}\n          renderEntry={({ owner, collateral, oTokensIssued }) => [\n            <IdentityBadge entity={owner} />,\n            formatDigits(toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(), 5),\n            formatDigits(toTokenUnitsBN(collateral, collateralDecimals).toNumber(), 5),\n          ]}\n        />\n        <br />\n        <Button\n          label=\"Exercise\"\n          disabled={!selectedHasEnoughCollateral}\n          wide\n          onClick={async () => {\n            const vaultowners = selectedIndexes.map((index) => vaults[index].owner);\n            exercise(\n              oToken,\n              option.underlying,\n              toBaseUnitBN(exerciseAmount, option.decimals).toString(),\n              vaultowners,\n            );\n          }}\n        />\n      </Modal>\n    </>\n  );\n}\n\nExerciseModal.propTypes = {\n  user: PropTypes.string.isRequired,\n  oToken: PropTypes.string.isRequired,\n  option: myType.option.isRequired,\n  vaults: PropTypes.arrayOf(myType.vault).isRequired,\n  collateralDecimals: PropTypes.number.isRequired,\n  underlyingDecimals: PropTypes.number.isRequired,\n  underlyingSymbol: PropTypes.string.isRequired,\n  underlyingIsETH: PropTypes.bool.isRequired,\n};\n\nexport default ExerciseModal;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconConnect,\n  DataView,\n  useToast,\n  Tag,\n} from '@aragon/ui';\n\nimport * as MyPTypes from '../types';\nimport { RatioTag, Comment } from '../common';\n\nimport {\n  liquidate,\n  addERC20Collateral,\n  addETHCollateral,\n  kollateralLiquidate,\n} from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { toTokenUnitsBN, toBaseUnitBN, formatDigits } from '../../utils/number';\nimport { KETH, DAI, USDC } from '../../constants/contracts';\n\n/**\n *\n * @param {{ option:{\n * decimals:number,\n * exchange:string, collateral:string, symbol:string}\n * oTokensIssued: string collateralDecimals:Number, exchange:string}} param0\n */\nfunction VaultModal({\n  option,\n  useCollateral,\n  oToken,\n  owner,\n  collateral, // amount of collateral of this vault\n  isSafe,\n  oTokensIssued,\n  ratio,\n  collateralIsETH,\n  collateralDecimals,\n}) {\n  const toast = useToast();\n  const [opened, setOpened] = useState(false);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function getData() {\n      if (!opened) return;\n      const maxLiquidatable = await getMaxLiquidatable(oToken, owner);\n      if (!isCancelled) {\n        setLiquidateAmt(toTokenUnitsBN(maxLiquidatable, option.decimals).toNumber());\n      }\n    }\n    getData();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [option.decimals, oToken, opened, owner]);\n\n  return (\n    <>\n      <Button onClick={open} label=\"More\" />\n      <Modal width={900} padding={50} visible={opened} onClose={close}>\n        <Header primary=\"Access Position\" />\n\n        <DataView\n          fields={['Owner', 'Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[{\n            collateral, isSafe, oTokensIssued, ratio, owner,\n          }]}\n          entriesPerPage={1}\n          renderEntry={(vault) => [\n            <IdentityBadge entity={vault.owner} shorten />,\n            formatDigits(toTokenUnitsBN(vault.collateral, collateralDecimals), 5),\n            formatDigits(toTokenUnitsBN(vault.oTokensIssued, option.decimals), 5),\n            formatDigits(vault.ratio, 4),\n            RatioTag({ isSafe: vault.isSafe, ratio, useCollateral }),\n          ]}\n        />\n\n        <br />\n        <Box heading=\"Add Collateral\">\n          <Split\n            primary={(\n              <TextInput\n                type=\"number\"\n                wide\n                adornment={<IconEthereum />}\n                adornmentPosition=\"end\"\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            )}\n            secondary={(\n              <Button\n                label=\"Add Collateral\"\n                wide\n                onClick={() => {\n                  if (collateralIsETH) {\n                    addETHCollateral(oToken, owner, addValue);\n                  } else {\n                    addERC20Collateral(\n                      option.collateral,\n                      oToken,\n                      owner,\n                      toBaseUnitBN(addValue, collateralDecimals).toString(),\n                    );\n                  }\n                }}\n              />\n            )}\n          />\n        </Box>\n\n        {useCollateral ? (\n          <Box heading=\"Liquidate\">\n            <Comment text={`Liquidate with your ${option.symbol}`} />\n            <Split\n              primary={(\n                <>\n                  <TextInput\n                    wide\n                    type=\"number\"\n                    value={liquidateAmt}\n                    onChange={(event) => {\n                      setLiquidateAmt(event.target.value);\n                    }}\n                  />\n                </>\n              )}\n              secondary={(\n                <>\n                  <Button\n                    wide\n                    disabled={isSafe}\n                    label=\"Liquidate\"\n                    onClick={() => {\n                      liquidate(oToken, owner, toBaseUnitBN(liquidateAmt, option.decimals)).catch(\n                        (error) => {\n                          toast(error.toString());\n                        },\n                      );\n                    }}\n                  />\n                </>\n              )}\n            />\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n              <Comment text=\" Or \" />\n            </div>\n            <Comment text={(\n              <>\n                <Tag> beta </Tag>\n                Liquidate with Kollateral Flashloan\n              </>\n              )}\n            />\n\n            <div style={{ display: 'flex' }}>\n              <Button\n                icon={<IconConnect />}\n                label=\"DAI\"\n                disabled={isSafe}\n                onClick={() => {\n                  kollateralLiquidate(oToken, option.exchange, owner, DAI).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n                selected\n              />\n              <Button\n                icon={<IconConnect />}\n                label=\"USDC\"\n                disabled={isSafe}\n                onClick={() => {\n                  kollateralLiquidate(oToken, option.exchange, owner, USDC).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n              />\n              <Button\n                icon={<IconConnect />}\n                label=\"ETH\"\n                disabled={isSafe}\n                onClick={() => {\n                  kollateralLiquidate(oToken, option.exchange, owner, KETH).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n              />\n            </div>\n          </Box>\n        ) : (\n          <></>\n        )}\n      </Modal>\n    </>\n  );\n}\n\nVaultModal.propTypes = {\n  option: MyPTypes.option.isRequired,\n  useCollateral: PropTypes.bool.isRequired,\n  oToken: PropTypes.string.isRequired,\n  owner: PropTypes.string.isRequired,\n  collateral: PropTypes.string.isRequired,\n  isSafe: PropTypes.bool.isRequired,\n  oTokensIssued: PropTypes.string.isRequired,\n  ratio: PropTypes.number.isRequired,\n  collateralIsETH: PropTypes.bool.isRequired,\n  collateralDecimals: PropTypes.number.isRequired,\n};\n\nexport default VaultModal;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { DataView, IdentityBadge } from '@aragon/ui';\nimport VaultModal from './VaultModal';\nimport { SectionTitle, RatioTag } from '../common';\nimport * as MyPTypes from '../types';\nimport { formatDigits, compareVaultRatio, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\n\n\nfunction VaultOwnerList({\n  oToken, user, vaults, option, collateralIsETH, collateralDecimals,\n}) {\n  const vaultUsesCollateral = option.collateral !== option.strike;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [vaultsWithDetail, setVaultDetail] = useState([]);\n\n  const [page, setPage] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      if (vaults.length === 0) return;\n      const {\n        strike, minRatio, strikePrice, oracle, collateral,\n      } = option;\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral,\n        strike,\n        oracle,\n      );\n      const vaultDetail = vaults\n        .map((vault) => {\n          if (vault.oTokensIssued === '0') {\n            return {\n              owner: vault.owner,\n              oTokensIssued: vault.oTokensIssued,\n              collateral: vault.collateral,\n              ratio: Infinity,\n              useCollateral: vaultUsesCollateral,\n              isSafe: true,\n            };\n          }\n          const ratio = calculateRatio(\n            vault.collateral,\n            vault.oTokensIssued,\n            strikePrice,\n            strikeValueInCollateral,\n          );\n          return {\n            owner: vault.owner,\n            oTokensIssued: vault.oTokensIssued,\n            collateral: vault.collateral,\n            ratio,\n            useCollateral: vaultUsesCollateral,\n            isSafe: ratio > minRatio,\n            oToken,\n          };\n        })\n        .sort(compareVaultRatio);\n\n      if (!isCancelled) {\n        setVaultDetail(vaultDetail);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 12000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [collateralDecimals, collateralIsETH, oToken, option, user, vaultUsesCollateral, vaults]);\n\n  return (\n    <>\n      <SectionTitle title=\"All Vaults\" />\n      <DataView\n        page={page}\n        onPageChange={setPage}\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaultsWithDetail}\n        entriesPerPage={5}\n        renderEntry={({\n          owner, collateral, oTokensIssued, ratio, isSafe, useCollateral,\n        }) => [\n          <IdentityBadge entity={owner} shorten />,\n          formatDigits(\n            toTokenUnitsBN(collateral, collateralDecimals).toNumber(),\n            6,\n          ),\n          formatDigits(\n            toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(),\n            6,\n          ),\n          formatDigits(ratio, 5),\n          RatioTag({ isSafe, ratio, useCollateral }),\n          <VaultModal\n            option={option}\n            oToken={oToken}\n            owner={owner}\n            collateral={collateral}\n            collateralDecimals={collateralDecimals}\n            isSafe={isSafe}\n            useCollateral={useCollateral}\n            collateralIsETH={collateralIsETH}\n            oTokensIssued={oTokensIssued}\n            ratio={ratio}\n          />,\n        ]}\n      />\n    </>\n  );\n}\n\nVaultOwnerList.propTypes = {\n  oToken: PropTypes.string.isRequired,\n  user: PropTypes.string.isRequired,\n  vaults: PropTypes.arrayOf(MyPTypes.vault).isRequired,\n  option: MyPTypes.option.isRequired,\n  collateralIsETH: PropTypes.bool.isRequired,\n  collateralDecimals: PropTypes.number.isRequired,\n};\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Split, IdentityBadge } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport * as MyPTypes from '../types';\n\nimport { getERC20Info, getBalance, getTokenBalance } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\n\nfunction OptionOverview({\n  oToken, tokenSymbol, option, collateralIsETH, collateralDecimals,\n}) {\n  const [totalCollateral, setTotalCollateral] = useState(new BigNumber(0));\n  const [totalSupply, setTotalSupply] = useState('0');\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      let totalCollt;\n      if (collateralIsETH) {\n        totalCollt = new BigNumber(await getBalance(oToken));\n      } else {\n        const rawCollateralBalance = await getTokenBalance(option.collateral, oToken);\n        totalCollt = toTokenUnitsBN(rawCollateralBalance, collateralDecimals);\n      }\n      const { totalSupply: supply } = await getERC20Info(oToken);\n      if (!isCancelled) {\n        setTotalCollateral(totalCollt);\n        setTotalSupply(supply);\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [collateralDecimals, collateralIsETH, oToken, option.collateral]);\n\n  return (\n    <>\n      <Split\n        primary={(\n          <Split\n            primary={(\n              <Box heading=\"contract\" padding={15}>\n                <IdentityBadge entity={oToken} shorten={false} />\n              </Box>\n            )}\n            secondary={(\n              <Box heading=\"Total Collateral\" padding={15}>\n                {totalCollateral.toNumber()}\n              </Box>\n            )}\n          />\n        )}\n        secondary={(\n          <Box heading=\"total supply\" padding={15}>\n            {totalSupply}\n            {' '}\n            {tokenSymbol}\n          </Box>\n        )}\n      />\n    </>\n  );\n}\n\nOptionOverview.propTypes = {\n  oToken: PropTypes.string.isRequired,\n  tokenSymbol: PropTypes.string.isRequired,\n  option: MyPTypes.option.isRequired,\n  collateralIsETH: PropTypes.bool.isRequired,\n  collateralDecimals: PropTypes.number.isRequired,\n};\n\nexport default OptionOverview;\n","import React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport ExerciseModal from './ExerciseModal';\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nimport { getDecimals, getERC20Symbol } from '../../utils/infura';\nimport { getAllVaultsForOption } from '../../utils/graph';\n\nimport { allOptions, ETH_ADDRESS } from '../../constants/contracts';\n\nfunction OptionPage({ user }) {\n  const { token } = useParams();\n  const option = allOptions.find((o) => o.addr === token);\n\n  const [vaults, setVaults] = useState([]);\n\n  const [collateralDecimals, setCollateralDecimals] = useState(18);\n  const [underlyingDecimals, setUnderlyingDecimals] = useState(18);\n  const [underlyingSymbol, setUnderlyingSymbol] = useState('ETH');\n\n  const collateralIsETH = option.collateral === ETH_ADDRESS;\n  const underlyingIsETH = option.underlying === ETH_ADDRESS;\n\n  useMemo(async () => {\n    if (!collateralIsETH) {\n      const colltDecimals = await getDecimals(option.collateral);\n      setCollateralDecimals(colltDecimals);\n    }\n    if (!underlyingIsETH) {\n      const [_decimals, _symbol] = await Promise.all([\n        getDecimals(option.underlying),\n        getERC20Symbol(option.underlying),\n      ]);\n      setUnderlyingDecimals(_decimals);\n      setUnderlyingSymbol(_symbol);\n    }\n\n    // Get All vaults once\n    const allVaults = await getAllVaultsForOption(token);\n    setVaults(allVaults);\n  }, [collateralIsETH, option.collateral, option.underlying, token, underlyingIsETH]);\n\n  return (\n    <>\n      <Header\n        primary={option.name}\n        secondary={(\n          <ExerciseModal\n            user={user}\n            oToken={token}\n            option={option}\n            collateralDecimals={collateralDecimals}\n            underlyingDecimals={underlyingDecimals}\n            underlyingSymbol={underlyingSymbol}\n            underlyingIsETH={underlyingIsETH}\n            vaults={vaults}\n          />\n        )}\n      />\n      {/* Basic Info Header */}\n      <OptionInfoBox\n        tokenSymbol={option.symbol}\n        oToken={token}\n        user={user}\n        vaults={vaults}\n        option={option}\n        collateralDecimals={collateralDecimals}\n        collateralIsETH={collateralIsETH}\n      />\n      {/* List of Vaults */}\n      <VaultsList\n        oToken={token}\n        user={user}\n        vaults={vaults}\n        collateralDecimals={collateralDecimals}\n        collateralIsETH={collateralIsETH}\n        option={option}\n      />\n    </>\n  );\n}\n\nOptionPage.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default OptionPage;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { BalanceBlock, RatioTag, HelperText } from '../common';\nimport { formatDigits, toTokenUnitsBN } from '../../utils/number';\nimport * as MyPTypes from '../types';\n\nconst HeaderDashboard = ({\n  ratio, minRatio, symbol, vault, decimals, newRatio, collateralDecimals, useCollateral,\n}) => {\n  const tokenInUnit = vault.oTokensIssued ? toTokenUnitsBN(vault.oTokensIssued, decimals).toNumber() : '0';\n  const collateralBalance = vault.collateral\n    ? toTokenUnitsBN(vault.collateral, collateralDecimals).toString()\n    : '0';\n\n  return (\n    <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset=\"Total Collateral\" balance={formatDigits(collateralBalance, 6)} />\n      </div>\n      <div style={{ width: '50%' }}>\n        <BalanceBlock asset={`${symbol} Issued`} balance={tokenInUnit.toString()} />\n      </div>\n      <div style={{ width: '20%' }}>\n        <>\n          <div style={{ fontSize: 14, padding: 3 }}>\n            Current Ratio\n            {' '}\n            {ratio > 0 ? <RatioTag isSafe={ratio >= minRatio} ratio={ratio} useCollateral={useCollateral} /> : <></>}\n          </div>\n          <div style={{ fontSize: 24, padding: 3 }}>\n            <span style={{ fontSize: 24 }}>{formatDigits(ratio, 5).split('.')[0]}</span>\n.\n            <span style={{ fontSize: 18 }}>\n              {formatDigits(ratio, 5).split('.')[1]}\n              {' '}\n            </span>\n            {minRatio > 0 ? (\n              <span style={{ fontSize: 16 }}>\n                {' '}\n/\n                {' '}\n                {minRatio}\n                {' '}\n              </span>\n            ) : ''}\n          </div>\n          <>\n            {' '}\n            {newRatio === ratio ? '' : <HelperText label=\"New Ratio\" amt={newRatio.toString()} />}\n            {' '}\n          </>\n        </>\n      </div>\n    </div>\n  );\n};\n\nHeaderDashboard.propTypes = {\n  ratio: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  symbol: PropTypes.string.isRequired,\n  vault: MyPTypes.vault.isRequired,\n  decimals: PropTypes.number.isRequired,\n  newRatio: PropTypes.number.isRequired,\n  collateralDecimals: PropTypes.number.isRequired,\n  useCollateral: PropTypes.bool.isRequired,\n};\n\nexport default HeaderDashboard;\n","import React, { useState, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport { getDecimals, getERC20Symbol } from '../../utils/infura';\nimport { addETHCollateral, addERC20Collateral, removeCollateral } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common';\n\nimport { formatDigits, toTokenUnitsBN, toBaseUnitBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation';\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport * as MyPTypes from '../types';\n\n/**\n *\n * @param {{isOwner: boolean, strikePrice:number, strikeValue:BigNumber, collateralAssetBalance: BigNumber }} param0\n */\nfunction CollateralManagement({\n  isOwner,\n  vault,\n  collateralAsset,\n  collateralAssetBalance, // Bignumber, / token unit\n  token,\n  owner,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  setNewRatio,\n}) {\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0); // in token unit\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0); // in token unit\n\n  const [collateralDecimals, setCollateralDecimals] = useState(18);\n  const [collateralSymbol, setCollateralSymbol] = useState(0);\n\n  const collateralIsETH = collateralAsset === ETH_ADDRESS;\n\n  useMemo(async () => {\n    if (collateralIsETH) return;\n    const decimals = await getDecimals(collateralAsset);\n    const symbol = await getERC20Symbol(collateralAsset);\n    setCollateralDecimals(decimals);\n    setCollateralSymbol(symbol);\n  }, [collateralAsset, collateralIsETH]);\n\n  /**\n   * @param {number} newCollateral in wei\n   */\n  // eslint-disable-next-line consistent-return\n  const updateNewRatio = (newCollateral) => {\n    if (!newCollateral || newCollateral <= 0) return 0;\n    const str = newCollateral.toString();\n    const newRatio = calculateRatio(str, vault.oTokensIssued, strikePrice, strikeValue);\n    setNewRatio(formatDigits(newRatio, 5));\n  };\n\n  return (\n    <Box heading=\"Collateral\">\n      <div style={{ display: 'flex' }}>\n        {/* balance */}\n        <div style={{ width: '30%' }}>\n          {BalanceBlock({\n            asset: collateralIsETH ? 'Your ETH Balance' : `Your ${collateralSymbol} Balance`,\n            balance: formatDigits(collateralAssetBalance.toString(), 6),\n          })}\n        </div>\n        {/* Add collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={addCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value;\n                    if (amt === '') {\n                      setAddCollateralAmt(0);\n                      return;\n                    }\n                    setAddCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateralDecimals);\n                    const newCollateralInWei = new BigNumber(vault.collateral).plus(amtRaw).toNumber();\n                    updateNewRatio(newCollateralInWei);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setAddCollateralAmt(collateralAssetBalance.toNumber());\n                    const collateralBalanceRaw = toBaseUnitBN(collateralAssetBalance, collateralDecimals);\n                    const newCollateral = new BigNumber(vault.collateral).plus(collateralBalanceRaw).toNumber();\n                    updateNewRatio(newCollateral);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Add\"\n                onClick={() => {\n                  if (collateralIsETH) {\n                    addETHCollateral(token, owner, addCollateralAmt);\n                  } else {\n                    addERC20Collateral(\n                      collateralAsset,\n                      token,\n                      owner,\n                      toBaseUnitBN(addCollateralAmt, collateralDecimals),\n                    );\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={removeCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value;\n                    if (amt === '') {\n                      setRemoveCollateralAmt(0);\n                      return;\n                    }\n                    setRemoveCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateralDecimals);\n                    const newCollateralWei = new BigNumber(vault.collateral).minus(amtRaw).toNumber();\n                    updateNewRatio(newCollateralWei);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikeValue.toNumber() <= 0) return;\n                    const strikePriceBN = new BigNumber(strikePrice);\n                    const tokenIssuedBN = new BigNumber(vault.oTokensIssued);\n                    const minRatioBN = new BigNumber(minRatio);\n                    const minCollateral = strikePriceBN.times(tokenIssuedBN).times(minRatioBN).times(strikeValue);\n                    // const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                    // const minCollateral = minValueInStrike * strikeValue;\n                    const maxToRemove = new BigNumber(vault.collateral).minus(minCollateral).toString();\n                    const maxToRemoveInTokenUnit = toTokenUnitsBN(maxToRemove, collateralDecimals).toNumber();\n                    setRemoveCollateralAmt(maxToRemoveInTokenUnit);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Remove\"\n                onClick={() => {\n                  removeCollateral(\n                    collateralAsset,\n                    token,\n                    toBaseUnitBN(removeCollateralAmt, collateralDecimals).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nCollateralManagement.propTypes = {\n  isOwner: PropTypes.bool.isRequired,\n  vault: MyPTypes.vault.isRequired,\n  collateralAsset: PropTypes.string.isRequired,\n  collateralAssetBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  token: PropTypes.string.isRequired,\n  owner: PropTypes.string.isRequired,\n  strikeValue: PropTypes.instanceOf(BigNumber).isRequired,\n  strikePrice: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  setNewRatio: PropTypes.func.isRequired,\n};\n\nexport default CollateralManagement;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport { burnOToken, issueOToken } from '../../utils/web3';\nimport { BalanceBlock, MaxButton } from '../common';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation';\nimport * as MyPTypes from '../types';\n/**\n *\n * @param {{\n * strikeValue: BigNumber,\n * tokenBalance: BigNumber,\n * strikePrice: Number,\n * decimals: Number\n * }} param0\n */\nfunction IssuedTokenManagement({\n  isOwner,\n  vault,\n  tokenBalance,\n  token,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  decimals,\n  symbol,\n  setNewRatio,\n}) {\n  const [issueAmt, setIssueAmt] = useState(new BigNumber(0));\n  const [burnAmt, setBurnAmt] = useState(new BigNumber(0));\n\n  /**\n   *\n   * @param {BigNumber} newAmt in raw amt\n   */\n  const updateNewRatio = (newAmt) => {\n    if (newAmt.lte(new BigNumber(0))) return;\n    const newRatio = calculateRatio(vault.collateral, newAmt, strikePrice, strikeValue);\n    setNewRatio(newRatio);\n  };\n\n  const onChangeIssueAmt = (intputAmt) => {\n    if (!intputAmt) {\n      setIssueAmt(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt);\n    setIssueAmt(amountBN);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).plus(toBaseUnitBN(amountBN, decimals)));\n  };\n\n  const onClickIssueToken = () => {\n    issueOToken(\n      token,\n      toBaseUnitBN(issueAmt, decimals).toString(),\n    );\n  };\n\n  const onChangeBurnAmt = (intputAmt) => {\n    if (!intputAmt) {\n      setBurnAmt(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).minus(toBaseUnitBN(amountBN, decimals)));\n    setBurnAmt(amountBN);\n  };\n\n  const onClickBurnToken = () => {\n    burnOToken(\n      token,\n      toBaseUnitBN(burnAmt, decimals).toString(),\n    );\n  };\n\n  return (\n    <Box heading=\"Total Issued\">\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock\n            asset={`Owner ${symbol} Balance `}\n            balance={tokenBalance.toString()}\n          />\n        </div>\n        {/* Issue More Token */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={issueAmt}\n                  onChange={(event) => onChangeIssueAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikePrice <= 0) return;\n                    // (vault.collateral) / (minRatio * strikePrice * strikeValue.toNumber());\n                    const maxTotal = new BigNumber(vault.collateral).div(\n                      new BigNumber(minRatio).times(new BigNumber(strikePrice)).times(strikeValue),\n                    );\n\n                    const maxToIssueRaw = maxTotal.minus(new BigNumber(vault.oTokensIssued));\n                    const maxToIssue = toTokenUnitsBN(maxToIssueRaw, decimals);\n                    setIssueAmt(maxToIssue);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Issue\"\n                onClick={onClickIssueToken}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={burnAmt}\n                  onChange={(event) => onChangeBurnAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    const issued = toTokenUnitsBN(vault.oTokensIssued, decimals);\n                    const maxToBurn = tokenBalance.lt(issued) ? tokenBalance : issued; // min (issued, tokenBalance)\n                    setBurnAmt(maxToBurn);\n                    updateNewRatio(issued.minus(maxToBurn));\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Burn\"\n                onClick={onClickBurnToken}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nIssuedTokenManagement.propTypes = {\n  isOwner: PropTypes.bool.isRequired,\n  vault: MyPTypes.vault.isRequired,\n  tokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  token: PropTypes.string.isRequired,\n  strikeValue: PropTypes.instanceOf(BigNumber).isRequired,\n  strikePrice: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  decimals: PropTypes.number.isRequired,\n  symbol: PropTypes.string.isRequired,\n  setNewRatio: PropTypes.func.isRequired,\n};\n\nexport default IssuedTokenManagement;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport {\n  Box, DataView, IdentityBadge, TransactionBadge, TextInput, Button,\n} from '@aragon/ui';\n\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { getLiquidationHistory } from '../../utils/graph';\nimport {\n  formatDigits, fromWei, toTokenUnitsBN, timeSince, toBaseUnitBN,\n} from '../../utils/number';\n\n/**\n *\n * @param {{userTokenBalance: BigNumber}} param0\n */\nfunction LiquidationHistory({\n  owner, token, isOwner, tokenDecimals, userTokenBalance,\n}) {\n  const [maxLiquidatable, setMaxLiquidatable] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  const [amountToLiquidate, setAmtToLiquidate] = useState(0);\n\n  useEffect(() => {\n    async function updateLiquidatable() {\n      const maxToLiquidate = await getMaxLiquidatable(token, owner);\n      setMaxLiquidatable(toTokenUnitsBN(maxToLiquidate, tokenDecimals).toNumber());\n    }\n\n    updateLiquidatable();\n  });\n\n  useMemo(async () => {\n    async function updateList() {\n      const actions = await getLiquidationHistory(owner);\n      const actionsForThisVault = actions.filter(\n        (entry) => entry.vault.optionsContract.address === token,\n      ).sort((actionA, actionB) => {\n        if (actionA.timestamp > actionB.timestamp) return -1;\n        return 1;\n      });\n      setEntries(actionsForThisVault);\n      setIsLoading(false);\n    }\n    updateList();\n  }, [owner, token]);\n\n  return (\n    <>\n      {isOwner ? (\n        <></>\n      ) : (\n        <Box heading=\"Liquidate\">\n          <>\n            <div style={{ display: 'flex' }}>\n              {/* balance */}\n              <div style={{ width: '30%' }}>\n                <BalanceBlock asset=\"Max To Liquidate\" balance={maxLiquidatable} />\n              </div>\n              <div style={{ width: '70%', paddingTop: '2%' }}>\n                <div style={{ display: 'flex' }}>\n                  <div style={{ width: '60%' }}>\n                    <>\n                      <TextInput\n                        type=\"number\"\n                        wide\n                        value={amountToLiquidate}\n                        onChange={(event) => {\n                          setAmtToLiquidate(event.target.value);\n                        }}\n                      />\n                      <MaxButton\n                        onClick={() => {\n                          const maximum = Math.min(userTokenBalance.toNumber(), maxLiquidatable);\n                          setAmtToLiquidate(maximum);\n                        }}\n                      />\n                    </>\n                  </div>\n                  <div style={{ width: '40%' }}>\n                    <Button\n                      disabled={maxLiquidatable <= 0}\n                      label=\"Liquidate\"\n                      onClick={() => {\n                        const amtToLiquidate = toBaseUnitBN(\n                          amountToLiquidate,\n                          tokenDecimals,\n                        ).toString();\n                        liquidate(token, owner, amtToLiquidate);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        </Box>\n      )}\n\n      {/* History Section */}\n      <Box heading=\"History\">\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Liquidator', 'Date']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            collateralToPay, liquidator, timestamp, transactionHash,\n          }) => [\n            <TransactionBadge transaction={transactionHash} />,\n            formatDigits(fromWei(collateralToPay), 5),\n            <IdentityBadge entity={liquidator} />,\n            timeSince(parseInt(timestamp, 10) * 1000),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nLiquidationHistory.propTypes = {\n  owner: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  isOwner: PropTypes.bool.isRequired,\n  tokenDecimals: PropTypes.number.isRequired,\n  userTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n};\nexport default LiquidationHistory;\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box, DataView, IdentityBadge, TransactionBadge,\n} from '@aragon/ui';\n\n\nimport { getExerciseHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\nfunction ExerciseHistory({\n  owner, token, collateralDecimals, tokenDecimals,\n}) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  useMemo(async () => {\n    const actions = await getExerciseHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n      {/* History Section */}\n      <Box heading=\"History\">\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Collateral', 'oToken', 'Exerciser', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            amtCollateralToPay, oTokensToExercise, exerciser, timestamp, transactionHash,\n          }) => [\n            <TransactionBadge transaction={transactionHash} />,\n            formatDigits(\n              toTokenUnitsBN(amtCollateralToPay, collateralDecimals).toNumber(),\n              5,\n            ),\n            formatDigits(\n              toTokenUnitsBN(oTokensToExercise, tokenDecimals).toNumber(),\n              5,\n            ),\n            <IdentityBadge entity={exerciser} />,\n            timeSince(parseInt(timestamp * 1000, 10)),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nExerciseHistory.propTypes = {\n  owner: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  collateralDecimals: PropTypes.number.isRequired,\n  tokenDecimals: PropTypes.number.isRequired,\n};\n\nexport default ExerciseHistory;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Header, Tabs, Box, Timer, Button,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport HeaderDashboard from './HeaderDashboard';\nimport CollateralManagement from './CollateralManagement';\nimport IssuedTokenManagement from './IssuedTokenManagement';\nimport LiquidationHistory from './Liquidation';\nimport ExerciseHistory from './Exercise';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getTokenBalance, getBalance, getDecimals } from '../../utils/infura';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { redeem } from '../../utils/web3';\n\nimport { allOptions, ETH_ADDRESS } from '../../constants/contracts';\n\nfunction ManageVault({ user }) {\n  const { token, owner } = useParams();\n\n  const option = allOptions.find((o) => o.addr === token);\n  const {\n    decimals, symbol, oracle, strike, strikePrice, minRatio, collateral, expiry,\n  } = option;\n\n  // Tab Navigation\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const [vault, setVault] = useState({});\n  const [strikeValueInCollateral, setStrikeValue] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(0);\n\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [userCollateralAssetBalance, setUserCollateralAssetBalance] = useState(new BigNumber(0));\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n  const [newRatio, setNewRatio] = useState(ratio);\n\n  const [collateralDecimals, setCollateralDecimals] = useState(18);\n  const collateralIsETH = collateral === ETH_ADDRESS;\n\n  const vaultUsesCollateral = collateral !== strike;\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateInfo() {\n      const vaultToManage = (await getAllVaultsForUser(owner)).find(\n        (v) => v.optionsContract.address === token,\n      );\n      setNoVault(false);\n      const [_ownerTokenBalance, _userTokenBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getTokenBalance(token, user),\n      ]);\n\n      // SetUserCollateralAmount\n      let collateralBalance = new BigNumber(0);\n      let colltDecimals = 18;\n\n      if (collateralIsETH) {\n        collateralBalance = new BigNumber(await getBalance(user));\n      } else {\n        const userColltBalance = await getTokenBalance(collateral, user);\n        colltDecimals = await getDecimals(collateral);\n        collateralBalance = toTokenUnitsBN(userColltBalance, colltDecimals);\n      }\n\n      const ownerTokenBalanceBN = toTokenUnitsBN(_ownerTokenBalance, decimals);\n      const userTokenBalanceBN = toTokenUnitsBN(_userTokenBalance, decimals);\n\n      const strikeValInCollt = await calculateStrikeValueInCollateral(\n        collateral,\n        strike,\n        oracle,\n      );\n      const currentRatio = calculateRatio(\n        vaultToManage.collateral,\n        vaultToManage.oTokensIssued,\n        strikePrice,\n        strikeValInCollt,\n      );\n\n      if (!isCancelled) {\n        setStrikeValue(strikeValueInCollateral);\n        setVault(vaultToManage);\n        setCollateralDecimals(colltDecimals);\n        setOwnerTokenBalance(ownerTokenBalanceBN);\n        setUserTokenBalance(userTokenBalanceBN);\n        setRatio(currentRatio);\n        setUserCollateralAssetBalance(collateralBalance);\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [\n    collateral,\n    collateralDecimals,\n    collateralIsETH,\n    decimals,\n    oracle,\n    owner,\n    strike,\n    strikePrice,\n    token,\n    user,\n    strikeValueInCollateral,\n  ]);\n\n  const isOwner = user === owner;\n\n  return noVault ? (\n    <div style={{ padding: 100, textAlign: 'center' }}> No Vault Found for this user </div>\n  ) : (\n    <>\n      <Header\n        primary={isOwner ? 'Manage My Vault' : 'Vault Detail'}\n        secondary={\n          expiry * 1000 > Date.now() ? (\n            <Timer end={new Date(expiry * 1000)} />\n          ) : (\n            <Button onClick={() => redeem(token)} label=\"Redeem\" />\n          )\n        }\n      />\n\n      <HeaderDashboard\n        owner={owner}\n        user={user}\n        ratio={ratio}\n        minRatio={minRatio}\n        vault={vault}\n        decimals={decimals}\n        symbol={symbol}\n        newRatio={newRatio}\n        useCollateral={vaultUsesCollateral}\n        collateralIsETH={collateralIsETH}\n        collateralDecimals={collateralDecimals}\n      />\n\n      <Tabs\n        items={['Collateral Management', 'Token Issuance', 'Liquidation', 'Exercise']}\n        selected={tabSelected}\n        onChange={setTabSelected}\n      />\n\n      {tabSelected === 0 ? (\n        <CollateralManagement\n          isOwner={isOwner}\n          vault={vault}\n          collateralAssetBalance={userCollateralAssetBalance}\n          collateralAsset={option.collateral}\n          token={token}\n          owner={owner}\n          strikeValue={strikeValueInCollateral}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 1 ? (\n        <IssuedTokenManagement\n          isOwner={isOwner}\n          vault={vault}\n          tokenBalance={ownerTokenBalance}\n          token={token}\n          strikeValue={strikeValueInCollateral}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          decimals={decimals}\n          symbol={symbol}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 2 ? (\n        vaultUsesCollateral ? (\n          <LiquidationHistory\n            userTokenBalance={userTokenBalance}\n            isOwner={isOwner}\n            owner={owner}\n            token={token}\n            tokenDecimals={decimals}\n          />\n        ) : (\n          <Box> This vault cannot be liquidated </Box>\n        )\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 3 ? (\n        <ExerciseHistory\n          owner={owner}\n          token={token}\n          tokenDecimals={decimals}\n          collateralDecimals={collateralDecimals}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nManageVault.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default ManageVault;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\n\nimport { BalanceBlock, AddressBlock } from '../common';\n\n/**\n *\n * @param {{ poolTokenBalance: BigNumber, poolETHBalance: BigNumber }}\n */\nconst HeaderDashboard = ({\n  symbol, poolETHBalance, poolTokenBalance, uniswapExchange,\n}) => (\n  <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n    <div style={{ width: '30%' }}>\n      <BalanceBlock asset=\"Total ETH Liquidity\" balance={poolETHBalance} />\n    </div>\n    <div style={{ width: '30%' }}>\n      <BalanceBlock asset={`${symbol} Liquidity`} balance={poolTokenBalance} />\n    </div>\n    <div style={{ width: '40%' }}>\n      <>\n        <AddressBlock label=\"Uniswap Contract\" address={uniswapExchange} />\n      </>\n    </div>\n  </div>\n);\n\nHeaderDashboard.propTypes = {\n  symbol: PropTypes.string.isRequired,\n  poolETHBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  poolTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n};\n\nexport default HeaderDashboard;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { buyOTokensFromExchange, sellOTokensFromExchange } from '../../utils/web3';\n\nimport { getPremiumToPay, getPremiumReceived } from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN, fromWei } from '../../utils/number';\n\n/**\n *\n * @param {{\n *  decimals: number\n *  tokenBalance: BigNumber\n * }} param0\n */\nfunction OptionExchange({\n  symbol, tokenBalance, token, exchange, decimals,\n}) {\n  const [buyAmt, setBuyAmt] = useState(new BigNumber(0));\n  const [sellAmt, setSellAmt] = useState(new BigNumber(0));\n  const [premiumToPay, setPremiumToPay] = useState(new BigNumber(0));\n  const [premiumReceived, setPremiumReceived] = useState(new BigNumber(0));\n\n  const updatePremiumToPay = async (amt) => {\n    const butAmountBN = new BigNumber(amt);\n    if (butAmountBN.lte(new BigNumber(0))) {\n      setPremiumToPay(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(butAmountBN, decimals).toString();\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(new BigNumber(fromWei(premium)));\n  };\n\n  const updatePremiumReceived = async (amt) => {\n    const sellAmountBN = new BigNumber(amt);\n    if (sellAmountBN.lte(new BigNumber(0))) {\n      setPremiumReceived(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(sellAmountBN, decimals).toString();\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(new BigNumber(premium));\n  };\n\n  return (\n    <Box heading=\"Exchange\">\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`${symbol} Balance`} balance={tokenBalance} />\n        </div>\n        {/* Buy Token from Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={buyAmt}\n                  onChange={(event) => {\n                    if (event.target.value) {\n                      setBuyAmt(event.target.value);\n                      updatePremiumToPay(event.target.value);\n                    } else {\n                      setBuyAmt(new BigNumber(0));\n                      updatePremiumToPay(new BigNumber(0));\n                    }\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Buy\"\n                onClick={() => {\n                  buyOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(buyAmt, decimals).toString(),\n                    toBaseUnitBN(premiumToPay, 18).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label=\"Cost:\" amt={premiumToPay} symbol=\"\" />\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={sellAmt}\n                  onChange={(event) => {\n                    if (event.target.value) {\n                      setSellAmt(event.target.value);\n                      updatePremiumReceived(event.target.value);\n                    } else {\n                      setSellAmt(new BigNumber(0));\n                      updatePremiumReceived(new BigNumber(0));\n                    }\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setSellAmt(tokenBalance);\n                    updatePremiumReceived(tokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Sell\"\n                onClick={() => {\n                  sellOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(sellAmt, decimals).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label=\"Premium\" amt={premiumReceived} />\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nOptionExchange.propTypes = {\n  symbol: PropTypes.string.isRequired,\n  tokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  token: PropTypes.string.isRequired,\n  exchange: PropTypes.string.isRequired,\n  decimals: PropTypes.number.isRequired,\n};\n\nexport default OptionExchange;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconEthereum,\n} from '@aragon/ui';\nimport { addLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\n\n/**\n *\n * @param {{\n * poolTokenBalance: BigNumber,\n * poolETHBalance:BigNumber,\n * liquidityTokenSupply: BigNumber,\n * userTokenBalance: BigNumber,\n * userETHBalance:BigNumber\n * uniswapExchange: string\n * }} param0\n */\nfunction AddLiquidity({\n  otoken,\n  otokenSymbol,\n  otokenDecimals,\n  userTokenBalance,\n  userETHBalance,\n  uniswapExchange,\n  poolTokenBalance,\n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply,\n}) {\n  const SLIPPAGE_RATE = 2;\n\n\n  const [amtETHToAdd, setAmtETHToAdd] = useState(new BigNumber(0));\n  const [amtTokenToAdd, setAmtTokenToAdd] = useState(new BigNumber(0));\n\n  const liquidityMinted = (liquidityTokenSupply.times(amtETHToAdd)).div(poolETHBalance);\n  const liquidityMintedMin = (liquidityMinted.times(new BigNumber(100 - SLIPPAGE_RATE))).div(new BigNumber(100));\n  const ethToTokenRatio = poolETHBalance.div(poolTokenBalance);\n  const tokenToEthRatio = poolTokenBalance.div(poolETHBalance);\n\n  const onChangeETHAmtToSend = (ethAmt) => {\n    if (!ethAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return;\n    }\n\n    const newTokenAmt = (new BigNumber(ethAmt).times(tokenToEthRatio));\n    setAmtETHToAdd(new BigNumber(ethAmt));\n    setAmtTokenToAdd(newTokenAmt);\n  };\n\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return;\n    }\n\n    const newEthAmt = new BigNumber(tokenAmt).times(ethToTokenRatio);\n    setAmtETHToAdd(newEthAmt);\n    setAmtTokenToAdd(new BigNumber(tokenAmt));\n  };\n\n  return (\n    <Box heading=\"Add Liquidity\">\n      <div style={{ display: 'flex' }}>\n        {/* Pool Status */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset=\"ETH Balance\" balance={userETHBalance} />\n        </div>\n        {/* Add Liquidity too pool */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <TextInput\n                  adornmentPosition=\"end\"\n                  adornment={otokenSymbol}\n                  type=\"number\"\n                  wide\n                  value={amtTokenToAdd.toNumber()}\n                  onChange={(event) => {\n                    onChangeTokenAmtToSend(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    onChangeTokenAmtToSend(userTokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment={<IconEthereum />}\n                type=\"number\"\n                wide\n                value={amtETHToAdd.toNumber()}\n                onChange={(event) => {\n                  onChangeETHAmtToSend(event.target.value);\n                }}\n              />\n              <PriceSection label=\"Mint\" amt={liquidityMinted} symbol=\"Pool Tokens\" />\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Add Liquidity\"\n                onClick={() => {\n                  const maxToken = toBaseUnitBN(amtTokenToAdd, otokenDecimals).toString();\n                  const minLiquidity = toBaseUnitBN(liquidityMintedMin, liquidityTokenDecimals).toString();\n                  const ethWei = toBaseUnitBN(amtETHToAdd, 18).toString();\n                  addLiquidity(\n                    otoken,\n                    uniswapExchange,\n                    maxToken,\n                    minLiquidity,\n                    ethWei,\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nAddLiquidity.propTypes = {\n  otoken: PropTypes.string.isRequired,\n  otokenSymbol: PropTypes.string.isRequired,\n  otokenDecimals: PropTypes.number.isRequired,\n  userTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  userETHBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n  poolTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  poolETHBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  liquidityTokenDecimals: PropTypes.number.isRequired,\n  liquidityTokenSupply: PropTypes.instanceOf(BigNumber).isRequired,\n};\n\nexport default AddLiquidity;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box, TextInput, Button, IconCircleMinus, IconFundraising,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { removeLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\n\n/**\n *\n * @param {{\n *  otokenDecimals: number,\n *  liquidityTokenDecimals: number,\n *  otokenSymbol: string,\n *  uniswapExchange: string\n *  userliquidityTokenBalance: BigNumber\n *  poolTokenBalance: BigNumber\n *  poolETHBalance: BigNumber\n *  liquidityTokenDecimals: BigNumber\n *  liquidityTokenSupply: BigNumber\n *\n * }} param0\n */\nfunction RemoveLiquidity({\n  otokenSymbol,\n  otokenDecimals,\n  userliquidityTokenBalance,\n  uniswapExchange,\n  poolTokenBalance,\n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply,\n}) {\n  const SLIPPAGE_RATE = 2;\n\n  const [amtLiquidityTokenToSell, setAmtLiquidityTokenToSell] = useState(new BigNumber(0));\n\n  const poolPortion = amtLiquidityTokenToSell.div(liquidityTokenSupply);\n  const estETHRecieved = poolETHBalance.times(poolPortion);\n  const estOTokenReceived = poolTokenBalance.times(poolPortion);\n\n  const minETHReceived = estETHRecieved.times(new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100));\n  const minTokenReceived = estOTokenReceived.times(new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100));\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtLiquidityTokenToSell(new BigNumber(0));\n      return;\n    }\n    const tokenAmtBN = new BigNumber(tokenAmt);\n    setAmtLiquidityTokenToSell(tokenAmtBN);\n  };\n\n  return (\n    <Box heading=\"Remove Liquidity\">\n      <div style={{ display: 'flex' }}>\n        {/* Pool Token in Hold */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset=\"Pool Token Balance\" balance={userliquidityTokenBalance} />\n        </div>\n        {/* Remove */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment={<IconFundraising />}\n                type=\"number\"\n                wide\n                value={amtLiquidityTokenToSell.toNumber()}\n                onChange={(event) => {\n                  onChangeTokenAmtToSend(event.target.value);\n                }}\n              />\n              <MaxButton\n                onClick={() => setAmtLiquidityTokenToSell(userliquidityTokenBalance)}\n              />\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <PriceSection label=\"You get\" amt={estETHRecieved} symbol=\"ETH\" />\n                <PriceSection label=\"+\" amt={estOTokenReceived} symbol={otokenSymbol} />\n              </>\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Remove Liquidity\"\n                onClick={() => {\n                  const amt = toBaseUnitBN(amtLiquidityTokenToSell, liquidityTokenDecimals).toString();\n                  const min_eth = toBaseUnitBN(minETHReceived, 18).toString();\n                  const min_token = toBaseUnitBN(minTokenReceived, otokenDecimals).toString();\n\n                  removeLiquidity(\n                    uniswapExchange,\n                    amt,\n                    min_eth,\n                    min_token,\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nRemoveLiquidity.propTypes = {\n  otokenSymbol: PropTypes.string.isRequired,\n  otokenDecimals: PropTypes.number.isRequired,\n  userliquidityTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n  poolTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  poolETHBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  liquidityTokenDecimals: PropTypes.number.isRequired,\n  liquidityTokenSupply: PropTypes.instanceOf(BigNumber).isRequired,\n};\n\nexport default RemoveLiquidity;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport { getTokenBalance, getBalance, getERC20Info } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\n\n\nimport { allOptions } from '../../constants/contracts';\n\nimport DashBoard from './Header';\nimport OptionExchange from './OptionExchange';\n\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity';\n\nfunction ManagePool({ user }) {\n  const { token } = useParams();\n\n  const option = allOptions.find((o) => o.addr === token);\n  const {\n    uniswapExchange, decimals, symbol, exchange,\n  } = option;\n\n  const [poolTokenBalance, setPoolTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [poolETHBalance, setPoolETHBalance] = useState(new BigNumber(0));\n  const [userETHBalance, setUserETHBalance] = useState(new BigNumber(0));\n\n  const [userliquidityTokenBalance, setUserLiquidityTokenBalance] = useState(new BigNumber(0));\n  const [liquidityTokenSupply, setLiquidityTokenSupply] = useState(new BigNumber(0));\n  const [liquidityTokenDecimals, setLiquidityTokenDecimals] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      const [exTokenBalance, exchagneETHBalance, liquidityTokenInfo] = await Promise.all([\n        getTokenBalance(token, uniswapExchange),\n        getBalance(uniswapExchange),\n        getERC20Info(uniswapExchange),\n      ]);\n      const { decimals: liqTokenDecimal, totalSupply: liqTokenTotalSupply } = liquidityTokenInfo;\n      const exchangeTokenBalance = toTokenUnitsBN(exTokenBalance, decimals);\n      if (!isCancelled) {\n        setLiquidityTokenDecimals(liqTokenDecimal);\n        setLiquidityTokenSupply(new BigNumber(liqTokenTotalSupply));\n        setPoolETHBalance(new BigNumber(exchagneETHBalance));\n        setPoolTokenBalance(exchangeTokenBalance);\n      }\n    }\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 15000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, token, uniswapExchange]);\n\n  useEffect(() => {\n    if (user === '') return;\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [tokenBalance, userEthBalance, liqTokenBalance] = await Promise.all([\n        getTokenBalance(token, user),\n        getBalance(user),\n        getTokenBalance(uniswapExchange, user),\n      ]);\n\n      const userOTknBalanceBN = toTokenUnitsBN(tokenBalance, decimals);\n      const userLiqTknBalanceBN = toTokenUnitsBN(liqTokenBalance, liquidityTokenDecimals);\n      if (!isCancelled) {\n        setUserLiquidityTokenBalance(userLiqTknBalanceBN);\n        setUserETHBalance(new BigNumber(userEthBalance));\n        setUserTokenBalance(userOTknBalanceBN);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, liquidityTokenDecimals, token, uniswapExchange, user]);\n\n  return (\n    <>\n      <Header primary=\"Exchange\" />\n\n      <DashBoard\n        user={user}\n        symbol={symbol}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        uniswapExchange={uniswapExchange}\n      />\n\n      <OptionExchange\n        symbol={symbol}\n        tokenBalance={userTokenBalance}\n        token={token}\n        exchange={exchange}\n        decimals={decimals}\n      />\n\n      <Header primary=\"Provide Liquidity\" />\n\n      <AddLiquidity\n        user={user}\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n\n      <RemoveLiquidity\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n    </>\n  );\n}\n\nManagePool.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default ManagePool;\n","import React from 'react';\n\nimport { Link } from '@aragon/ui';\nimport PropTypes from 'prop-types';\n\nfunction Footer({ theme }) {\n  const style = {\n    backgroundColor: theme === 'light' ? '#F8F8F8' : '#35425e',\n    textAlign: 'center',\n    padding: '17px',\n    position: 'fixed',\n    left: '0',\n    bottom: '0',\n    height: '50px',\n    width: '100%',\n    fontSize: '12px',\n  };\n\n  return (\n    <div style={style}>\n      Powered By\n      <Link external href=\"https://opyn.co/#/\">\n        Opyn\n      </Link>\n      {', '}\n      <Link external href=\"https://ui.aragon.org/\">\n        Aragon UI\n      </Link>\n      ,\n      {', '}\n      <Link external href=\"https://www.blocknative.com/\">\n        Blocknative\n      </Link>\n      {'. '}\n      <Link external href=\"https://www.kollateral.co/\">\n        Kollateral\n      </Link>\n      {'. '}\n      Hosted on\n      <Link external href=\"https://github.com/antoncoding/opyn-liquidator\">\n        GitHub\n      </Link>\n      .\n    </div>\n  );\n}\n\nFooter.propTypes = {\n  theme: PropTypes.string.isRequired,\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Main } from '@aragon/ui';\nimport { updateModalMode } from './utils/web3';\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport AllOptoins from './components/AllContracts';\nimport Trade from './components/Trade';\nimport MyVaults from './components/MyVaults';\nimport OptionPage from './components/OptionPage';\nimport ManageVault from './components/ManageVault';\nimport ManagePool from './components/ManagePool';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const storedTheme = window.localStorage.getItem('theme') || 'light';\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (newTheme) => {\n    setTheme(newTheme);\n    updateModalMode(newTheme);\n    window.localStorage.setItem('theme', newTheme);\n  };\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          {/* All Options */}\n          <Route path=\"/option/:token\">\n            <OptionPage user={user} />\n          </Route>\n          <Route path=\"/options/\">\n            <AllOptoins />\n          </Route>\n          {/* My Vaults */}\n          <Route path=\"/myvaults\">\n            <MyVaults user={user} />\n          </Route>\n          <Route path=\"/manage/:token/:owner\">\n            <ManageVault user={user} />\n          </Route>\n          {/* Trade */}\n          <Route path=\"/trade/:token/\"><ManagePool user={user} /></Route>\n          <Route path=\"/trade/\">\n            <Trade />\n          </Route>\n          {/* HomePage */}\n          <Route path=\"/\"><HomePage /></Route>\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}