{"version":3,"sources":["utils/blockNative.js","utils/infura.js","utils/storage.js","constants/contracts.js","utils/web3.js","components/NavBar/ConnectButton.js","components/NavBar/SettingsButton.js","components/NavBar/index.js","components/HomePage/index.js","constants/options/calls.js","constants/options/puts.js","constants/options/insurances.js","constants/options/index.js","components/common/AddressBlock.js","components/common/BalanceBlock.js","components/common/RatioTag.js","components/common/SectionTitle.js","components/common/MaxButton.js","components/common/HelpText.js","components/common/PriceSection.js","components/common/Comment.js","components/common/VaultButton.js","components/common/CheckBox.js","utils/tracker.js","components/AllContracts/index.js","components/Trade/index.js","utils/number.js","components/MyVaults/NoWallet.js","utils/graph.js","utils/calculation.js","components/MyVaults/index.js","components/types/index.js","components/OptionPage/ExerciseModal.js","components/OptionPage/VaultModal.js","components/OptionPage/VaultsList.js","components/OptionPage/OptionInfoBox.js","components/OptionPage/index.js","components/ManageVault/HeaderDashboard.js","components/ManageVault/CollateralManagement.js","components/ManageVault/IssuedTokenManagement.js","components/ManageVault/Liquidation.js","components/ManageVault/Exercise.js","components/ManageVault/UnderlyingManagement.js","components/ManageVault/index.js","components/UniswapTrade/Header.js","components/UniswapTrade/OptionExchange.js","components/UniswapTrade/AddLiquidity.js","components/UniswapTrade/RemoveLiquidity.js","components/UniswapTrade/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["notify","Notify","dappId","process","networkId","optionContractABI","require","optionExchangeABI","oracleABI","web3","Web3","ens","ENS","ETH_ADDR","resolveENS","ensName","a","console","log","resolver","addr","address","toLowerCase","getTokenBalance","erc20Token","user","oTokenContract","eth","Contract","methods","balanceOf","call","balance","getDecimals","decimals","parseInt","getERC20Symbol","symbol","getTotalSupply","erc20","token","totalSupply","getMaxLiquidatable","oToken","vaultOwner","maxOTokensLiquidatable","maxVaultLiquidatable","getUnderlyingRequiredToExercise","tokenToExercise","underlyingRequiredToExercise","underlyringRequired","getAllowance","contract","spender","allowance","getBalance","utils","fromWei","getPrice","oracleAddr","oracle","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","paymentToken","exchange","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","getPreference","key","defaultValue","localStorage","getItem","storePreference","value","setItem","checkAddressAndAddToStorage","watch_addrs","usedAddresses","JSON","parse","includes","push","stringify","ETH_ADDRESS","KETH","oTokenABI","exchangeABI","uniswapExchangeABI","invokerABI","UINT256_MAX","onboard","Onboard","darkMode","subscriptions","wallet","provider","walletSelect","description","wallets","walletName","infuraKey","apiKey","updateModalMode","theme","config","connect","walletCheck","getState","disconnect","walletReset","checkConnectedAndGetAddress","checked","liquidate","oTokenAddr","owner","liquidateAmt","account","send","from","on","hash","kollateralLiquidate","optionExchange","amountOTokens","BigNumber","lte","Error","kollateralInvoker","data","abi","encodeParameters","invoke","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmt","toWei","toString","addERC20Collateral","collateral","collateralAmt","collateralAmtBN","lt","collateralToken","approve","removeCollateral","redeem","redeemVaultBalance","removeUnderlying","amt","exercise","underlying","amountToExercise","vaults","underlyingRequired","underlyingIsETH","openVault","buyOTokensFromExchange","buyOTokens","sellOTokensFromExchange","sellOTokens","addLiquidity","uniswapAddr","maxToken","minLiquidity","ethInWei","uniswapExchange","deadline","Math","ceil","Date","now","removeLiquidity","pool_token_amount","min_eth_wei","min_tokens","ConnectButton","setUser","useState","isConnected","setIsConnected","connectWeb3","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","padding","entity","icon","label","ChangeMode","updateTheme","LinkButton","title","paddingLeft","opacity","fontSize","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","height","goBack","secondary","MainButton","iconUrl","width","alt","src","HomePage","display","alignItems","marginRight","marginLeft","eth_calls","eth_puts","name","collateralDecimals","strike","strikePrice","minRatio","expiry","insurances","eth_options","concat","allOptions","AddressBlock","shorten","BalanceBlock","asset","integer","digits","gt","str","split","length","RatioTag","isSafe","ratio","useCollateral","background","color","mode","defaultProps","SectionTitle","MaxButton","HelperText","parseFloat","toFixed","PriceSection","forceDisplay","amtBN","toNumber","Comment","text","ManageVaultButton","OpenVaultButton","goToMangePage","openAndGoToVault","MyCheckBox","onCheck","useTheme","CheckBoxWrapper","onChange","paddingBottom","styled","div","props","surfaceContentSecondary","ReactGA","initialize","AllContracts","tracker","pageview","storedOptionTab","storedShowExpired","tabSelected","setTabSelected","showExpired","setShowExpired","goToToken","CheckBox","items","selected","choice","fields","entries","filter","option","entriesPerPage","renderEntry","header","toDateString","TradeLanding","goToTrade","toBaseUnitBN","rawAmt","raw","base","decimalsBN","times","pow","integerValue","toTokenUnitsBN","tokenAmount","tokenDecimals","formatDigits","num","percision","timeSince","timeStamp","secondsPast","getTime","ts","day","getDate","month","match","replace","year","getFullYear","compareVaultRatio","vaultA","vaultB","rateA","rateB","comparison","compareVaultIssued","amountA","oTokensIssued","amountB","isAddress","PleaseLogin","setWatchAddress","toast","useToast","InAddress","setAddress","placeholder","e","target","wide","reverse","scale","radius","fontFamily","getAllVaultsForOption","optionAddress","query","postQuery","response","getAllVaultsForUser","actions","getVault","vault","getLiquidationHistory","liquidationActionsQuery","liquidateActions","getExerciseHistory","exerciseActions","getRemoveUnderlyingHistory","removeUnderlyingActions","options","method","headers","body","fetch","res","json","calculateStrikeValueInCollateral","strikeValueInWei","strikeValueInCollateral","collateralValueInWei","calculateRatio","tokenIssued","Infinity","colalteralBN","tokenIssuedBN","strikePriceBN","Promise","MyVaults","opendVaults","setOpenedVaults","tokensToOpen","setTokensToOpen","isLoading","setIsLoading","watchAddress","isWatchMode","hasAddressConnected","showEmpty","setShowEmpty","displayVaults","useMemo","userVaults","openedVaults","notOpenedTokens","map","entry","find","optionsContract","undefined","oTokenName","sort","NoWallet","PropTypes","shape","string","isRequired","number","ExerciseModal","underlyingDecimals","underlyingSymbol","userUnderlyingBalance","setUserUnderlyingBalance","userOTokenBalance","setUserOTokenBalance","opened","setOpened","exerciseAmount","setExerciseAmount","setUnderlyringRequired","nonEmptyVaults","selectedIndexes","setSelectedIndexes","selectedHasEnoughCollateral","setHasEnoughCollateral","userUnderlying","userOTkns","checkHasEnoughToken","sumIssued","reduce","accumulator","current","plus","gte","onChangeExerciseAmt","amount","exeAmtBN","underlyingRawAmt","index","visible","onClose","heading","type","adornment","adornmentPosition","event","renderSelectionCount","count","selection","onSelectEntries","indexes","disabled","vaultowners","VaultModal","collateralIsETH","addValue","setAddValue","setLiquidateAmt","isCancelled","maxLiquidatable","getData","catch","error","justifyContent","VaultOwnerList","vaultUsesCollateral","vaultsWithDetail","setVaultDetail","page","setPage","updateInfo","vaultDetail","id","setInterval","clearInterval","onPageChange","status","OptionOverview","tokenSymbol","totalCollateral","setTotalCollateral","setTotalSupply","totalCollt","rawCollateralBalance","supply","init","toFormat","OptionPage","useParams","o","setVaults","setUnderlyingDecimals","setUnderlyingSymbol","all","_decimals","_symbol","allVaults","OptionInfoBox","VaultsList","HeaderDashboard","newRatio","tokenInUnit","collateralBalance","CollateralManagement","isOwner","collateralAsset","collateralAssetBalance","strikeValue","setNewRatio","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","collateralSymbol","setCollateralSymbol","updateNewRatio","newCollateral","amtRaw","newCollateralInWei","collateralBalanceRaw","newCollateralWei","minus","minRatioBN","minCollateral","maxToRemove","maxToRemoveInTokenUnit","IssuedTokenManagement","tokenBalance","setIssueAmt","setBurnAmt","newAmt","intputAmt","amountBN","onChangeIssueAmt","maxToIssueRaw","maxToIssue","onChangeBurnAmt","issued","maxToBurn","LiquidationHistory","userTokenBalance","setMaxLiquidatable","setEntries","amountToLiquidate","setAmtToLiquidate","maxToLiquidate","updateLiquidatable","actionsForThisVault","actionA","actionB","timestamp","updateList","maximum","min","amtToLiquidate","collateralToPay","liquidator","transactionHash","transaction","ExerciseHistory","amtCollateralToPay","oTokensToExercise","exerciser","RemoveUnderlying","underlyingAmount","uDecimals","ManageVault","setVault","setStrikeValue","setRatio","ownerTokenBalance","setOwnerTokenBalance","setUserTokenBalance","userCollateralAssetBalance","setUserCollateralAssetBalance","noVault","setNoVault","vaultToManage","_ownerTokenBalance","_userTokenBalance","userColltBalance","ownerTokenBalanceBN","userTokenBalanceBN","strikeValInCollt","currentRatio","end","Liquidation","Exercise","UnderlyingManagement","poolETHBalance","poolTokenBalance","OptionExchange","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","updatePremiumToPay","butAmountBN","premium","updatePremiumReceived","sellAmountBN","AddLiquidity","otoken","otokenSymbol","otokenDecimals","userETHBalance","liquidityTokenDecimals","liquidityTokenSupply","amtETHToAdd","setAmtETHToAdd","amtTokenToAdd","setAmtTokenToAdd","liquidityMinted","liquidityMintedMin","ethToTokenRatio","tokenToEthRatio","onChangeTokenAmtToSend","tokenAmt","newEthAmt","newTokenAmt","onChangeETHAmtToSend","ethWei","RemoveLiquidity","userliquidityTokenBalance","amtLiquidityTokenToSell","setAmtLiquidityTokenToSell","poolPortion","estETHRecieved","estOTokenReceived","minETHReceived","minTokenReceived","tokenAmtBN","min_eth","min_token","UniswapPool","setPoolTokenBalance","setPoolETHBalance","setUserETHBalance","setUserLiquidityTokenBalance","setLiquidityTokenSupply","updatePoolInfo","exTokenBalance","exchagneETHBalance","liqTokenTotalSupply","exchangeTokenBalance","updateUserInfo","userEthBalance","liqTokenBalance","userOTknBalanceBN","userLiqTknBalanceBN","Footer","backgroundColor","textAlign","position","left","bottom","external","href","App","storedTheme","setTheme","assetsUrl","newTheme","path","Trade","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.4f471a8a.chunk.js","sourcesContent":["import Notify from 'bnc-notify';\n\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY;\n\n// eslint-disable-next-line import/prefer-default-export\nexport const notify = Notify({\n  dappId: BLOCKNATIVE_KEY,\n  networkId: 1,\n});\n","import Web3 from 'web3';\n\nimport ENS from 'ethereum-ens';\n\nconst optionContractABI = require('../constants/abi/OptionContract.json');\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json');\nconst oracleABI = require('../constants/abi/Oracle.json');\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\n\nconst web3 = new Web3(`https://mainnet.infura.io/v3/${INFURA_KEY}`);\nconst ens = new ENS(web3);\n\nconst ETH_ADDR = '0x0000000000000000000000000000000000000000';\n\n// ENS\nexport const resolveENS = async (ensName) => {\n  console.log('infura resolve ETNS');\n  const address = await ens.resolver(ensName).addr();\n  return address.toLowerCase();\n};\n\n/**\n *\n * @param {string} erc20Token address\n * @param {string} user address\n * @return {Promise<string>}\n */\nexport const getTokenBalance = async (erc20Token, user) => {\n  if (user === '') return '0';\n  console.log(`infura getTokenBalance ${erc20Token} for ${user}`);\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const balance = await oTokenContract.methods.balanceOf(user).call();\n  return balance;\n};\n\nexport const getDecimals = async (erc20Token) => {\n  console.log(`infura getDecimals ${erc20Token}`);\n  if (erc20Token === ETH_ADDR) return 18;\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const decimals = await oTokenContract.methods.decimals().call();\n  return parseInt(decimals, 10);\n};\n\nexport const getERC20Symbol = async (erc20Token) => {\n  console.log(`infura getERC20Symbol ${erc20Token}`);\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  return oTokenContract.methods.symbol().call();\n};\n\nexport const getTotalSupply = async (erc20) => {\n  console.log('get total supply');\n  const token = new web3.eth.Contract(optionContractABI, erc20);\n  const totalSupply = await token.methods.totalSupply().call();\n  return totalSupply;\n};\n\n// Option Contract\n\n/**\n * Max liquidatable for given vault\n * @param {string} oToken\n * @param {string} owner\n * @return {Promise<number>}\n */\nexport const getMaxLiquidatable = async (oToken, vaultOwner) => {\n  console.log(`infura getMaxLiquidatable ${oToken}`);\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable = await oTokenContract.methods\n    .maxOTokensLiquidatable(vaultOwner)\n    .call();\n  return maxVaultLiquidatable;\n};\n\n/**\n *\n * @param {string} oToken\n * @param {string} tokenToExercise\n * @return {Promise<string>}\n */\nexport const getUnderlyingRequiredToExercise = async (oToken, tokenToExercise) => {\n  console.log(`infura getUnderlyingRequiredToExercise ${oToken}`);\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const underlyringRequired = await oTokenContract.methods\n    .underlyingRequiredToExercise(tokenToExercise)\n    .call();\n  // console.log(`what `, underlyringRequired)\n  return underlyringRequired;\n};\n\n/**\n *\n * @param {string} contract\n * @param {string} user\n * @param {string} spender\n * @return {Promise<string>}\n */\nexport const getAllowance = async (contract, user, spender) => {\n  console.log('infura get Allowance');\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call();\n  return allowance;\n};\n\n/**\n * Get balance in eth for the account\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  if (address === '') return '0';\n  console.log(`infura getBalance ${address}`);\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\n/**\n * Get price of token in unit of wei\n * @param {string} oracleAddr\n * @param {string} token\n * @returns {Promise<string>}\n */\nexport const getPrice = async (oracleAddr, token) => {\n  console.log(`infura getPrice ${token}`);\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return price; // unit: wei/ per token\n};\n\n// Option Exchange\nexport const getPremiumToPay = async (\n  exchangeAddr,\n  tokenToBuy,\n  buyAmt,\n  paymentToken = ETH_ADDR,\n) => {\n  console.log('infura getPremiumToPay');\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call();\n  return premiumToPay;\n};\n\nexport const getPremiumReceived = async (exchangeAddr, tokenToSell, sellAmt) => {\n  console.log('infura getPremiumReceived');\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const payoutToken = ETH_ADDR;\n  const premiumReceived = await exchange.methods\n    .premiumReceived(tokenToSell, payoutToken, sellAmt)\n    .call();\n  return web3.utils.fromWei(premiumReceived);\n};\n\n// uniswapExchange\n","/**\n * Get value by key\n * @param {string} key\n * @param {string} defaultValue\n */\nexport function getPreference(key, defaultValue) {\n  return localStorage.getItem(key) || defaultValue;\n}\n\n/**\n * store value to storage\n * @param {string} key\n * @param {string} value\n */\nexport function storePreference(key, value) {\n  localStorage.setItem(key, value);\n}\n\nexport function checkAddressAndAddToStorage(address) {\n  const watch_addrs = getPreference('watch_addresses', '[]');\n  const usedAddresses = JSON.parse(watch_addrs);\n  if (!usedAddresses.includes(address.toLowerCase()) && !usedAddresses.includes(address)) {\n    usedAddresses.push(address);\n    storePreference('watch_addresses', JSON.stringify(usedAddresses));\n  }\n}\n","/* eslint-disable camelcase */\n\nexport const ETH_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const ERC20_Liquidator = '0xF8cE4E70F52FdDBc72547Ce9616ed3E7d4525e8A';\nexport const Kollateral_Liquidator = '0xfBaB30f79bbbC92C708E7e9b01E329e003d8Ce48';\n\nexport const AAVE_LENDING = '0x398eC7346DcD622eDc5ae82352F02bE94C62d119';\nexport const Kollateral_Invoker = '0x06d1f34fd7c055ae5ca39aa8c6a8e10100a45c01';\n\nexport const DAI = '0x6b175474e89094c44da98b954eedeac495271d0f';\nexport const USDC = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48';\nexport const KETH = '0x0000000000000000000000000000000000000001';\n","/* eslint-disable camelcase */\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport Onboard from 'bnc-onboard';\n\nimport { notify } from './blockNative';\nimport { getAllowance, getPremiumToPay } from './infura';\nimport { getPreference } from './storage';\nimport {\n  ETH_ADDRESS, Kollateral_Liquidator, Kollateral_Invoker, KETH,\n} from '../constants/contracts';\n\nconst oTokenABI = require('../constants/abi/OptionContract.json');\nconst exchangeABI = require('../constants/abi/OptionExchange.json');\nconst uniswapExchangeABI = require('../constants/abi/UniswapExchange.json');\nconst invokerABI = require('../constants/abi/KollateralInvoker.json');\n\nconst DEADLINE_FROM_NOW = 60 * 15;\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY;\nconst FORTMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY;\n\nlet web3;\n\nconst onboard = Onboard({\n  darkMode: getPreference('theme', 'light') === 'dark',\n  dappId: BLOCKNATIVE_KEY, // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  walletSelect: {\n    description: 'Please select a wallet to connect to Opyn Dashboard',\n    wallets: [\n      { walletName: 'metamask' },\n      {\n        walletName: 'walletConnect',\n        infuraKey: INFURA_KEY,\n      },\n      {\n        walletName: 'fortmatic',\n        apiKey: FORTMATIC_KEY,\n      },\n      { walletName: 'trust' },\n      { walletName: 'coinbase' },\n      { walletName: 'status' },\n    ],\n  },\n});\n\n\nexport const updateModalMode = async (theme) => {\n  const darkMode = theme === 'dark';\n  onboard.config({ darkMode });\n};\n\nexport const connect = async () => {\n  const selected = await onboard.walletSelect();\n  if (!selected) return false;\n  const checked = await onboard.walletCheck();\n  if (!checked) return false;\n  return onboard.getState().address;\n};\n\nexport const disconnect = async () => {\n  onboard.walletReset();\n};\n\n// eslint-disable-next-line consistent-return\nexport const checkConnectedAndGetAddress = async () => {\n  let checked = false;\n  try {\n    checked = await onboard.walletCheck();\n  } catch (error) {\n    await onboard.walletSelect();\n    checked = await onboard.walletCheck();\n  } finally {\n    // eslint-disable-next-line no-unsafe-finally\n    if (checked) return onboard.getState().address;\n  }\n};\n\nexport const liquidate = async (oTokenAddr, owner, liquidateAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .liquidate(owner, liquidateAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} oTokenAddr\n * @param {string} optionExchange\n * @param {string} owner\n * @param {string} paymentToken payment token address\n */\nexport const kollateralLiquidate = async (oTokenAddr, optionExchange, owner, paymentToken) => {\n  const account = await checkConnectedAndGetAddress();\n\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const amountOTokens = await oToken.methods.maxOTokensLiquidatable(owner).call();\n\n  if (new BigNumber(amountOTokens).lte(new BigNumber(0))) {\n    throw new Error('Nothing to liquidate');\n  }\n\n  const premiumToPay = await getPremiumToPay(\n    optionExchange, // exchange\n    oTokenAddr,\n    amountOTokens,\n    paymentToken === KETH ? ETH_ADDRESS : paymentToken,\n  );\n\n  const kollateralInvoker = new web3.eth.Contract(invokerABI, Kollateral_Invoker);\n\n  const data = web3.eth.abi.encodeParameters(['address', 'address'], [owner, oTokenAddr]);\n  await kollateralInvoker.methods\n    .invoke(\n      Kollateral_Liquidator, // invokeTo\n      data, // invokeData\n      paymentToken, // tokenAddress: Dai, ETH,\n      premiumToPay,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const burnOToken = async (oTokenAddr, burnAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .burnOTokens(burnAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const issueOToken = async (oTokenAddr, issueAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .issueOTokens(issueAmt, account)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .addETHCollateral(owner)\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collaral\n * @param {string} oTokenAddr\n * @param {string} owner\n * @param {number|string} collateralAmt in min unit\n */\nexport const addERC20Collateral = async (collateral, oTokenAddr, owner, collateralAmt) => {\n  const collateralAmtBN = new BigNumber(collateralAmt);\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const allowance = await getAllowance(collateral, account, oTokenAddr);\n  // Approve to move collateral\n  if (new BigNumber(allowance).lt(collateralAmtBN)) {\n    const collateralToken = new web3.eth.Contract(oTokenABI, collateral);\n    await collateralToken.methods\n      .approve(oTokenAddr, UINT256_MAX)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n  await oToken.methods\n    .addERC20Collateral(owner, collateralAmtBN.toString())\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collateral\n * @param {string} oTokenAddr\n * @param {string} collateralAmt in base unit\n */\nexport const removeCollateral = async (collateral, oTokenAddr, collateralAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if (collateral === ETH_ADDRESS) {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\nexport const redeem = async (token) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .redeemVaultBalance()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} token\n */\nexport const removeUnderlying = async (token) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .removeUnderlying()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const approve = async (oTokenAddr, spender, amt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * Exercise your oTokens\n * @param {string} oTokenAddr\n * @param {string} underlying asset type\n * @param {string} amountToExercise\n * @param {string[]} vaults vault owners\n */\nexport const exercise = async (oTokenAddr, underlying, amountToExercise, vaults) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const underlyingRequired = await oToken.methods\n    .underlyingRequiredToExercise(amountToExercise)\n    .call();\n\n  const underlyingIsETH = underlying === ETH_ADDRESS;\n\n  if (!underlyingIsETH) {\n    const allowance = await getAllowance(underlying, account, oTokenAddr);\n    if (new BigNumber(allowance).lt(new BigNumber(underlyingRequired))) {\n      await approve(underlying, oTokenAddr, UINT256_MAX);\n    }\n  }\n\n  await oToken.methods\n    .exercise(amountToExercise, vaults)\n    .send({ from: account, value: underlyingIsETH ? underlyingRequired : '0' })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVault = async (oTokenAddr) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .openVault()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Option Exchange\n\nexport const buyOTokensFromExchange = async (oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .buyOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      buyAmt,\n    )\n    .send({ from: account, value: ethAmt })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const sellOTokensFromExchange = async (oTokenAddr, exchangeAddr, sellAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oTokenAddr, account, exchangeAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(sellAmt))) {\n    await approve(oTokenAddr, exchangeAddr, UINT256_MAX);\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .sellOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      sellAmt,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Uniswap Exchange\n\n/**\n *\n */\nexport const addLiquidity = async (oToken, uniswapAddr, maxToken, minLiquidity, ethInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oToken, account, uniswapAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(maxToken))) {\n    await approve(oToken, uniswapAddr, UINT256_MAX);\n  }\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .addLiquidity(\n      minLiquidity, // min_liquidity\n      maxToken, // max_tokens\n      deadline, // deadline\n    )\n    .send({ from: account, value: ethInWei })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n */\nexport const removeLiquidity = async (uniswapAddr, pool_token_amount, min_eth_wei, min_tokens) => {\n  const account = await checkConnectedAndGetAddress();\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .removeLiquidity(pool_token_amount, min_eth_wei, min_tokens, deadline)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase,\n} from '@aragon/ui';\n\nimport { connect, disconnect } from '../../utils/web3';\nimport { checkAddressAndAddToStorage } from '../../utils/storage';\n\nfunction ConnectButton({ user, setUser }) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n    checkAddressAndAddToStorage(address);\n  };\n\n  const disconnectWeb3 = async () => {\n    await disconnect();\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{ paddingTop: 5, paddingRight: 5 }}>\n        <LinkBase onClick={disconnectWeb3} size=\"small\">\n          {' '}\n          <IconPower />\n          {' '}\n        </LinkBase>\n      </div>\n      <Box padding={6}>\n        <IdentityBadge entity={user} />\n      </Box>\n\n    </>\n  ) : (\n    <Button icon={<IconConnect />} label=\"Connect\" onClick={connectWeb3} />\n  );\n}\n\nConnectButton.propTypes = {\n  user: PropTypes.string.isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n\nexport default ConnectButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\nfunction ChangeMode({ theme, updateTheme }) {\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark');\n    else updateTheme('light');\n  };\n\n  return (\n    <Button\n      icon={theme === 'dark' ? <IconStar /> : <IconStarFilled />}\n      onClick={handleChangeTheme}\n      label=\"Theme\"\n    />\n  );\n}\n\nChangeMode.propTypes = {\n  theme: PropTypes.string.isRequired,\n  updateTheme: PropTypes.func.isRequired,\n};\n\nexport default ChangeMode;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, BackButton, LinkBase } from '@aragon/ui';\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SettingsButton';\n\nfunction NavBar({\n  theme, updateTheme, user, setUser,\n}) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n\n  return (\n    <Bar\n      primary={\n        isHome ? (\n          <></>\n        ) : (\n          <>\n            <div style={{ height: '100%' }}>\n              <BackButton\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n            <LinkButton\n              title=\"My Vaults\"\n              onClick={() => {\n                history.push('/myvaults/');\n              }}\n            />\n            <LinkButton\n              title=\"All Contracts\"\n              onClick={() => {\n                history.push('/options/');\n              }}\n            />\n            <LinkButton\n              title=\"Trade\"\n              onClick={() => {\n                history.push('/trade/');\n              }}\n            />\n          </>\n        )\n      }\n      secondary={(\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      )}\n    />\n  );\n}\n\n\nNavBar.propTypes = {\n  theme: PropTypes.string.isRequired,\n  updateTheme: PropTypes.func.isRequired,\n  user: PropTypes.string.isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n\nfunction LinkButton({ title, onClick }) {\n  return (\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}>\n        <div style={{ padding: '1%', opacity: 0.5, fontSize: 17 }}>{title}</div>\n      </LinkBase>\n    </div>\n  );\n}\n\nLinkButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Header, Box, LinkBase } from '@aragon/ui';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header primary=\"Welcome to Opyn Dashboard\" />\n      <div style={{ padding: 5, opacity: 0.5 }}> Tools for DeFi Risk Management. </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%', marginRight: '3%' }}>\n          <MainButton\n            title=\"My Vaults\"\n            description=\"Manage collateral, Mint/Burn oTokens\"\n            iconUrl=\"https://opyn.co/static/media/1.68813886.svg\"\n            onClick={() => {\n              history.push('/myvaults');\n            }}\n          />\n        </div>\n\n        <div style={{ width: '30%' }}>\n          <MainButton\n            title=\"All Contracts\"\n            description=\" Monitor and liquidate vaults.\"\n            iconUrl=\"https://opyn.co/static/media/2.18d22be0.svg\"\n            onClick={() => {\n              history.push('/options/');\n            }}\n          />\n        </div>\n\n        <div style={{ width: '30%', marginLeft: '3%' }}>\n          <MainButton\n            title=\"Trade\"\n            description=\"Buy, Sell or Provided Liquidity.\"\n            iconUrl=\"https://opyn.co/static/media/3.4da8b24d.svg\"\n            onClick={() => {\n              history.push('./trade');\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction MainButton({\n  title, description, iconUrl, onClick,\n}) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding: 10, fontSize: 18 }}>{title}</div>\n        <img alt=\"icon\" style={{ padding: 10, height: 64 }} src={iconUrl} />\n        <div style={{ paddingTop: 5, opacity: 0.5 }}>\n          {' '}\n          {description}\n          {' '}\n        </div>\n\n      </Box>\n    </LinkBase>\n  );\n}\n\nMainButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  iconUrl: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default HomePage;\n","/* eslint-disable import/prefer-default-export */\n\nexport const eth_calls = [];\n","/* eslint-disable import/prefer-default-export */\nexport const eth_puts = [\n  {\n    addr: '0x48ab8a7d3bf2eb942e153e4275ae1a8988238dc7',\n    title: 'ETH Put $100 04/03/20',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/03/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    collateralDecimals: 6,\n    underlying: '0x0000000000000000000000000000000000000000',\n    strike: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    strikePrice: 1e-6,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x30651Fc7F912f5E40AB22F3D34C2159431Fb1c4F',\n    expiry: 1585958340,\n  },\n  {\n    addr: '0x6c79f10543c7886c6946b8a996f824e474bac8f2',\n    title: 'ETH Put $100 04/24/20',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/24/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    collateralDecimals: 6,\n    underlying: '0x0000000000000000000000000000000000000000',\n    strike: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    strikePrice: 1e-6,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x5734a78b1985B47dF3fbf1736c278F57c2C30983',\n    expiry: 1587715200,\n  },\n  {\n    addr: '0xaefc7b368f7b536c9e5e3f342bf534931ce58584',\n    title: 'ETH Put $150 04/24/20',\n\n    // constants in contract\n    symbol: 'oETH $150 Put',\n    name: 'Opyn ETH Put $150 04/24/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    collateralDecimals: 6,\n    underlying: '0x0000000000000000000000000000000000000000',\n    strike: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    strikePrice: 1.5e-5,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xD2840757B0DeF8fBC2A7DC990CEF75975C2d3F0e',\n    expiry: 1587715200,\n  },\n  {\n    addr: '0x461cd647add2159e85ad57141cb5371566fceed3',\n    title: 'ETH Put $160 05/01/20',\n\n    // constants in contract\n    symbol: 'oETH $160 Put',\n    name: 'Opyn ETH Put $160 05/01/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    collateralDecimals: 6,\n    underlying: '0x0000000000000000000000000000000000000000',\n    strike: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    strikePrice: 1.6e-5,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xd03f7298aE74a8618711Ec43F45Ad2225F141aa4',\n    expiry: 1588320000,\n  },\n];\n","/* eslint-disable import/prefer-default-export */\nexport const insurances = [\n  {\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    title: 'cDai Insurance',\n\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    collateralDecimals: 18,\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xA6923533A6362008e9b536271C2Bdc0FF1467D3c',\n    expiry: 1612915200,\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    collateralDecimals: 18,\n    underlying: '0x39AA39c021dfbaE8faC545936693aC917d5E7563',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xE3A0a2431a093fed99037987eD0A88550e5E79AA',\n    expiry: 1612915200,\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n    // constants in contract\n    symbol: 'oCRV',\n    name: 'Opyn y.curve.fi Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    collateralDecimals: 18,\n    underlying: '0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 9.2e-16,\n    minRatio: 1.6,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x21f5E9D4Ec20571402A5396084B1634314A68c97',\n    expiry: 1585440000,\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance ',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    collateralDecimals: 18,\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 2e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x8a0976500EED661202810bAB030a057DF15c4CC9',\n    expiry: 1612915200,\n  },\n];\n","import { eth_calls } from './calls';\nimport { eth_puts } from './puts';\nimport { insurances } from './insurances';\n\nexport const eth_options = eth_calls.concat(eth_puts);\nexport const allOptions = insurances.concat(eth_calls).concat(eth_puts);\nexport { eth_calls, eth_puts, insurances };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IdentityBadge } from '@aragon/ui';\n\nfunction AddressBlock({ label, address }) {\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}>{label}</div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten />\n      </div>\n    </>\n  );\n}\n\nAddressBlock.propTypes = {\n  label: PropTypes.string.isRequired,\n  address: PropTypes.string.isRequired,\n};\n\nexport default AddressBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BigNumber from 'bignumber.js';\n\nfunction BalanceBlock({ asset, balance }) {\n  let integer = '0';\n  let digits = '0';\n  if (new BigNumber(balance).gt(new BigNumber(0))) {\n    const str = new BigNumber(balance).toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}>{asset}</div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>\n        .\n        <span style={{ fontSize: 18 }}>\n          {' '}\n          {digits}\n          {' '}\n        </span>\n      </div>\n    </>\n  );\n}\n\nBalanceBlock.propTypes = {\n  asset: PropTypes.string.isRequired,\n  balance: PropTypes.oneOfType([\n    PropTypes.instanceOf(BigNumber),\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n};\n\nexport default BalanceBlock;\n","import React from 'react';\nimport { Tag } from '@aragon/ui';\nimport Proptypes from 'prop-types';\n\nfunction RatioTag({ isSafe, ratio, useCollateral = true }) {\n  return !useCollateral ? (\n    <Tag color=\"#78827a\" background=\"#c0c2c0\">\n      Cool\n    </Tag>\n  ) : isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background=\"#FFEBAD\" color=\"#FEC100\">\n        {' '}\n        Danger\n        {' '}\n      </Tag>\n    ) : (\n      <Tag mode=\"new\"> safe </Tag>\n    )\n  ) : (\n    <Tag color=\"#E34343\" background=\"#FFC6C6\">\n      Unsafe!\n    </Tag>\n  );\n}\n\nRatioTag.propTypes = {\n  isSafe: Proptypes.bool.isRequired,\n  ratio: Proptypes.number.isRequired,\n  useCollateral: Proptypes.bool,\n};\n\nRatioTag.defaultProps = {\n  useCollateral: true,\n};\n\nexport default RatioTag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SectionTitle({ title }) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SectionTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nMaxButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default MaxButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction HelperText({ label, amt }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>\n          {label}\n        </span>\n        <span style={{ fontSize: 13 }}>\n          {parseFloat(amt).toFixed(5)}\n        </span>\n      </div>\n    );\n  } return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\nHelperText.propTypes = {\n  label: PropTypes.string.isRequired,\n  amt: PropTypes.string.isRequired,\n};\n\nexport default HelperText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\n\nfunction PriceSection({\n  label, amt, symbol = '', forceDisplay = false,\n}) {\n  const amtBN = new BigNumber(amt);\n  if (amtBN.gt(new BigNumber(0)) || forceDisplay) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>{label}</span>\n        <span style={{ fontSize: 13 }}>{amtBN.toNumber().toFixed(5)}</span>\n        <span style={{ fontSize: 13 }}>{symbol}</span>\n      </div>\n    );\n  }\n  return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\nPriceSection.propTypes = {\n  label: PropTypes.string.isRequired,\n  symbol: PropTypes.string,\n  amt: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.instanceOf(BigNumber),\n  ]).isRequired,\n  forceDisplay: PropTypes.bool,\n};\n\nPriceSection.defaultProps = {\n  symbol: '',\n  forceDisplay: false,\n};\n\nexport default PriceSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Comment({ text }) {\n  return (\n    <div style={{ padding: 5, opacity: 0.5 }}>\n      {text}\n    </div>\n  );\n}\n\nComment.propTypes = {\n  text: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n  ]).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport { Button } from '@aragon/ui';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { openVault } from '../../utils/web3';\n\n\nfunction ManageVaultButton({ oToken, owner }) {\n  const history = useHistory();\n\n  const goToManagePage = () => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n\n  return <Button onClick={() => goToManagePage(oToken, owner)} label=\"Manage\" />;\n}\n\nManageVaultButton.propTypes = {\n  oToken: PropTypes.string.isRequired,\n  owner: PropTypes.string.isRequired,\n};\n\n\nfunction OpenVaultButton({ oToken, user, goToMangePage = true }) {\n  const history = useHistory();\n\n  const openAndGoToVault = async () => {\n    await openVault(oToken);\n    if (goToMangePage) history.push(`/manage/${oToken}/${user}`);\n  };\n\n  return (\n    <Button\n      onClick={() => openAndGoToVault(oToken)}\n      label=\"Open Vault\"\n    />\n  );\n}\n\nOpenVaultButton.propTypes = {\n  oToken: PropTypes.string.isRequired,\n  user: PropTypes.string.isRequired,\n  goToMangePage: PropTypes.bool,\n};\n\nOpenVaultButton.defaultProps = {\n  goToMangePage: true,\n};\n\nexport { ManageVaultButton, OpenVaultButton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, useTheme } from '@aragon/ui';\nimport styled from 'styled-components';\n\nfunction MyCheckBox({ text, checked, onCheck }) {\n  const theme = useTheme();\n  return (\n    <CheckBoxWrapper theme={theme}>\n      <Checkbox\n        checked={checked}\n        onChange={onCheck}\n      />\n      <span style={{ paddingBottom: '5px' }}>\n        {text}\n      </span>\n      <br />\n    </CheckBoxWrapper>\n  );\n}\n\nMyCheckBox.propTypes = {\n  text: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onCheck: PropTypes.func.isRequired,\n};\n\nexport default MyCheckBox;\n\nconst CheckBoxWrapper = styled.div`{\n  padding: 5px;\n  font-size: 14px;\n  color: ${(props) => props.theme.surfaceContentSecondary}\n}`;\n","import ReactGA from 'react-ga';\n\nReactGA.initialize(process.env.REACT_APP_GA_PROJECT_ID);\n\nexport default ReactGA;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, DataView, IdentityBadge, Button, Tabs,\n} from '@aragon/ui';\n\nimport { insurances, eth_options } from '../../constants/options';\nimport { Comment, CheckBox } from '../common';\nimport { getPreference, storePreference } from '../../utils/storage';\n\nimport tracker from '../../utils/tracker';\n\nfunction AllContracts() {\n  tracker.pageview('/options/');\n  const storedOptionTab = getPreference('optionTab', '0');\n  const storedShowExpired = getPreference('showExpired', '0');\n\n  const [tabSelected, setTabSelected] = useState(parseInt(storedOptionTab, 10));\n  const [showExpired, setShowExpired] = useState(storedShowExpired === '1'); // whether to show expired options\n\n  const history = useHistory();\n  const goToToken = (addr) => {\n    history.push(`/option/${addr}`);\n  };\n  return (\n    <>\n      <Header primary=\"All Contracts\" />\n      <div style={{ display: 'flex' }}>\n        <Comment text=\"Choose an option contract to proceed.\" />\n        <div style={{ marginLeft: 'auto' }}>\n          <CheckBox\n            text=\"Expired\"\n            onCheck={(checked) => {\n              storePreference('showExpired', checked ? '1' : '0');\n              setShowExpired(checked);\n            }}\n            checked={showExpired}\n          />\n        </div>\n      </div>\n      <Tabs\n        items={['DeFi Insurance', 'ETH Options']}\n        selected={tabSelected}\n        onChange={(choice) => {\n          setTabSelected(choice);\n          storePreference('optionTab', choice.toString());\n        }}\n      />\n\n      {tabSelected === 0 ? (\n        <DataView\n          fields={['Name', 'Contract', '']}\n          entries={insurances.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n          entriesPerPage={6}\n          renderEntry={({ addr, title }) => [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ]}\n        />\n      ) : (\n        <DataView\n          header=\"Options\"\n          fields={['Name', 'Contract', 'Expiry', '']}\n          entries={eth_options.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n          entriesPerPage={6}\n          renderEntry={({ addr, title, expiry }) => [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            new Date(parseInt(expiry * 1000, 10)).toDateString(),\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ]}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, DataView, IdentityBadge, Button,\n} from '@aragon/ui';\nimport { insurances, eth_options } from '../../constants/options';\n\nimport { Comment, CheckBox } from '../common';\nimport { storePreference, getPreference } from '../../utils/storage';\nimport tracker from '../../utils/tracker';\n\nfunction TradeLanding() {\n  const history = useHistory();\n  tracker.pageview('/trade/');\n  const goToTrade = (addr) => {\n    history.push(`/trade/${addr}`);\n  };\n\n  const [showExpired, setShowExpired] = useState(getPreference('showExpired', '0') === '1');\n\n  return (\n    <>\n      <Header primary=\"Trade\" />\n      <div style={{ display: 'flex' }}>\n        <Comment text=\"Buy or Sell DeFi Insurance\" />\n        <div style={{ marginLeft: 'auto' }}>\n          <CheckBox\n            text=\"Expired\"\n            checked={showExpired}\n            onCheck={(checked) => {\n              storePreference('showExpired', checked ? '1' : '0');\n              setShowExpired(checked);\n            }}\n          />\n        </div>\n      </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={insurances.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => [\n          <>{title}</>,\n          <IdentityBadge entity={addr} shorten={false} />,\n          <Button onClick={() => goToTrade(addr)}> Start Trading </Button>,\n        ]}\n      />\n      <br />\n      <Comment text=\"Trade Options\" />\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={eth_options.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => [\n          <>{title}</>,\n          <IdentityBadge entity={addr} shorten={false} />,\n          <Button onClick={() => goToTrade(addr)}> Start Trading </Button>,\n        ]}\n      />\n    </>\n  );\n}\n\nexport default TradeLanding;\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\nconst web3 = new Web3();\n\n/**\n * Convert 10.999 to 10999000\n * @param {number|string|BigNumber} rawAmt\n * @param {number} decimals\n * @returns {BigNumber}\n */\nexport function toBaseUnitBN(rawAmt, decimals) {\n  const raw = new BigNumber(rawAmt);\n  const base = new BigNumber(10);\n  const decimalsBN = new BigNumber(decimals);\n  return raw.times(base.pow(decimalsBN)).integerValue();\n}\n\n/**\n * Convert 10999000 to 10.999\n * @param {string | number | BigNumber} tokenAmount in base unit\n * @param {number} tokenDecimals\n * @return {BigNumber}\n */\nexport const toTokenUnitsBN = (tokenAmount, tokenDecimals) => {\n  const amt = new BigNumber(tokenAmount);\n  const digits = new BigNumber(10).pow(new BigNumber(tokenDecimals));\n  return amt.div(digits);\n};\n\nexport function formatDigits(num, percision) {\n  return parseFloat(num).toFixed(percision);\n}\n\nexport const fromWei = web3.utils.fromWei;\nexport const toWei = web3.utils.toWei;\n\nexport function timeSince(timeStamp) {\n  const now = new Date();\n  const secondsPast = (now.getTime() - timeStamp) / 1000;\n  if (secondsPast < 60) {\n    return `${parseInt(secondsPast, 10)}s ago`;\n  }\n  if (secondsPast < 3600) {\n    return `${parseInt(secondsPast / 60, 10)}m ago`;\n  }\n  if (secondsPast <= 86400) {\n    return `${parseInt(secondsPast / 3600, 10)}h ago`;\n  }\n  if (secondsPast > 86400) {\n    const ts = new Date(timeStamp);\n    const day = ts.getDate();\n    const month = ts\n      .toDateString()\n      .match(/ [a-zA-Z]*/)[0]\n      .replace(' ', '');\n    const year = ts.getFullYear() === now.getFullYear() ? '' : ` ${ts.getFullYear()}`;\n    return `${day} ${month}${year}`;\n  }\n\n  return timeStamp;\n}\n\nexport function compareVaultRatio(vaultA, vaultB) {\n  const rateA = vaultA.ratio;\n  const rateB = vaultB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n\nexport function compareVaultIssued(vaultA, vaultB) {\n  const amountA = vaultA.oTokensIssued;\n  const amountB = vaultB.oTokensIssued;\n\n  let comparison = 0;\n  if (parseInt(amountA, 10) > parseInt(amountB, 10)) {\n    comparison = -1;\n  } else if (parseInt(amountA, 10) < parseInt(amountB, 10)) {\n    comparison = 1;\n  }\n  return comparison;\n}\n\nexport const isAddress = web3.utils.isAddress;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TextInput, DataView, Button, LinkBase, EthIdenticon, useToast,\n} from '@aragon/ui';\nimport { getPreference, checkAddressAndAddToStorage } from '../../utils/storage';\n\nimport { Comment } from '../common';\nimport { isAddress } from '../../utils/number';\nimport { resolveENS } from '../../utils/infura';\n\nfunction PleaseLogin({ setWatchAddress }) {\n  const toast = useToast();\n  const [InAddress, setAddress] = useState('');\n  const watch_addrs = getPreference('watch_addresses', '[]');\n  const usedAddresses = JSON.parse(watch_addrs);\n\n  return (\n    <>\n      {/* <Header></Header> */}\n      <Comment text=\"Please connect wallet to proceed or enter an address to use Watch Mode.\" />\n      <br />\n      <br />\n      <p style={{ fontSize: 20 }}> Watch Mode </p>\n      <Comment text=\"You won't be able to interact with any smart contract under Watch Mode.\" />\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '50%' }}>\n          <TextInput\n            placeholder=\"Ethereum address or ENS\"\n            value={InAddress}\n            onChange={(e) => { setAddress(e.target.value.toLowerCase()); }}\n            wide\n          />\n\n          {usedAddresses.length > 0 ? (\n            <div style={{ paddingTop: '3%' }}>\n              <DataView\n                entries={usedAddresses.reverse()}\n                fields={['used']}\n                entriesPerPage={5}\n                renderEntry={(address) => [\n                  <LinkBase onClick={() => {\n                    setWatchAddress(address);\n                    checkAddressAndAddToStorage(address);\n                  }}\n                  >\n                    {/* <IdentityBadge entity={address} /> */}\n                    <EthIdenticon\n                      address={address}\n                      scale={1.3}\n                      radius={5}\n                    />\n                    <span style={{ paddingLeft: 8, fontSize: 15, fontFamily: 'aragon-ui-monospace' }}>{address}</span>\n                  </LinkBase>,\n                ]}\n              />\n            </div>\n          ) : <></>}\n        </div>\n        <div style={{ width: '8%', paddingLeft: '1%', paddingRight: '1%' }}>\n          <Button\n            label=\"Watch Address\"\n            onClick={async () => {\n              if (isAddress(InAddress)) {\n                setWatchAddress(InAddress);\n                checkAddressAndAddToStorage(InAddress);\n              } else {\n                try {\n                  const address = await resolveENS(InAddress);\n                  setWatchAddress(address);\n                  checkAddressAndAddToStorage(address);\n                } catch (error) {\n                  toast('Invalid Address');\n                }\n              }\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nPleaseLogin.propTypes = {\n  // watchAddres: PropTypes.string.isRequired,\n  setWatchAddress: PropTypes.func.isRequired,\n};\n\nexport default PleaseLogin;\n","// const prefix = 'https://cors-anywhere-anton.herokuapp.com/';\nconst opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn';\n\n/**\n * @return {Promise<Array<{colalteral: string, oTokensIssued: string, owner: string}>>}\n */\nexport async function getAllVaultsForOption(optionAddress) {\n  const query = `\n  {\n    vaults(where: {\n      optionsContract: \"${optionAddress}\"\n    }) {\n      owner\n      oTokensIssued,\n      collateral,\n    }\n  }`;\n  const response = await postQuery(query);\n  const vaults = response.data.vaults;\n  return vaults;\n}\n\nexport async function getAllVaultsForUser(owner) {\n  const query = `{\n    vaults (where: {owner: \"${owner}\"}) {\n      optionsContract {\n        address\n      }\n      oTokensIssued,\n      collateral,\n      underlying\n    }\n  }`;\n  const response = await postQuery(query);\n  const actions = response.data.vaults;\n  return actions;\n}\n\n/**\n * Return target vault or null\n * @param {string} owner\n * @param {string} option\n * @return {Promise<{underlying:string, colalteral:string, oTokensIssued:string}>}\n */\nexport async function getVault(owner, option) {\n  const query = `{\n    vault(\n     id: \"${option.toLowerCase()}-${owner.toLowerCase()}\"\n    ) {\n      underlying\n      collateral\n      oTokensIssued\n    }\n  }`;\n  const response = await postQuery(query);\n  return response.data.vault;\n}\n\nexport async function getLiquidationHistory(owner) {\n  const query = liquidationActionsQuery(owner);\n  const response = await postQuery(query);\n  return response.data.liquidateActions;\n}\n\nconst liquidationActionsQuery = (owner) => `{\n  liquidateActions(where: {\n    vault_contains: \"${owner}\"\n  }) {\n    vault {\n      owner,\n      optionsContract {\n        address\n      }\n    },\n    liquidator,\n    collateralToPay,\n    timestamp\n    transactionHash\n  }\n}\n\n`;\n\n/**\n * Get all exercise history for one user\n * @param {string} owner vault owner\n * @param {string} option contract address\n * @return {Promise<{\n * amtCollateralToPay: string,\n * exerciser:string,\n * oTokensToExercise:string,\n * timestamp:string,\n * transactionHash: string}[]>}\n */\nexport async function getExerciseHistory(owner, option) {\n  const query = `{\n    exerciseActions (where: {\n      vault_contains: \"${owner}\"\n      optionsContract_contains: \"${option}\"\n    }) {\n      exerciser\n      oTokensToExercise\n      amtCollateralToPay\n      transactionHash\n      timestamp\n    }\n  }`;\n\n  const response = await postQuery(query);\n  return response.data.exerciseActions;\n}\n\n/**\n * get RemoveUnderlying Event history\n * @param {string} owner\n * @param {string} option\n * @return {Promise<{\n * amount:string, timestamp:string, transactionHash:string\n * }[]>}\n */\nexport async function getRemoveUnderlyingHistory(owner, option) {\n  const query = `{\n    removeUnderlyingActions(\n      where: {\n        vault_contains: \"${option}\"\n        owner: \"${owner}\"   \n      }\n    ) {\n      timestamp\n      transactionHash\n      amount\n    }\n  }`;\n  const response = await postQuery(query);\n  return response.data.removeUnderlyingActions;\n}\n\n\nconst postQuery = async (query) => {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  };\n  const res = await fetch(opynGraphEndpoint, options);\n  return res.json();\n};\n","import BigNumber from 'bignumber.js';\nimport { getPrice } from './infura';\nimport { toBaseUnitBN } from './number';\n\n/**\n * Get strike value in collateral for ratio calculation.\n * @param {string} collateral address\n * @param {string} strike address\n * @param {string} oracle address\n * @param {number} collateralDecimals\n * @return {Promise<BigNumber>}\n */\nexport const calculateStrikeValueInCollateral = async (\n  collateral,\n  strike,\n  oracle,\n  collateralDecimals,\n) => {\n  const ETH_Address = '0x0000000000000000000000000000000000000000';\n  let strikeValueInCollateral;\n  if (collateral === ETH_Address) {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    strikeValueInCollateral = new BigNumber(strikeValueInWei);\n  } else if (collateral === strike) {\n    // No collateral, like ETH option\n    strikeValueInCollateral = new BigNumber(10).pow(new BigNumber(collateralDecimals));\n  } else {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    const collateralValueInWei = await getPrice(oracle, collateral);\n    strikeValueInCollateral = toBaseUnitBN(\n      parseInt(strikeValueInWei, 10) / parseInt(collateralValueInWei, 10),\n      collateralDecimals,\n    );\n  }\n  return strikeValueInCollateral;\n};\n\n/**\n *\n * @param {string|number|BigNumber} collateral number of collateral in base unit\n * @param {string|number|BigNumber} tokenIssued number of token in base unit\n * @param {string|number|BigNumber} strikePrice\n * @param {BigNumber} strikeValueInCollateral\n * @return {number}\n */\nexport const calculateRatio = (collateral, tokenIssued, strikePrice, strikeValueInCollateral) => {\n  if (tokenIssued === '0') return Infinity;\n  const colalteralBN = new BigNumber(collateral);\n  const tokenIssuedBN = new BigNumber(tokenIssued);\n  const strikePriceBN = new BigNumber(strikePrice);\n  // const strikeValueInCollateralBN = new BigNumber(strikeValueInCollateral.toString())\n  const result = colalteralBN\n    .div(tokenIssuedBN)\n    .div(strikePriceBN)\n    .div(strikeValueInCollateral);\n  return result.toNumber();\n};\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\nimport {\n  Header, DataView, IdentityBadge,\n} from '@aragon/ui';\nimport NoWalletView from './NoWallet';\n\nimport { allOptions } from '../../constants/options';\nimport {\n  SectionTitle, ManageVaultButton, OpenVaultButton, Comment, CheckBox,\n} from '../common';\nimport {\n  formatDigits, compareVaultRatio, toTokenUnitsBN,\n} from '../../utils/number';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { getPreference, storePreference } from '../../utils/storage';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport tracker from '../../utils/tracker';\n\nconst Promise = require('bluebird');\n\nfunction MyVaults({ user }) {\n  tracker.pageview('/myvaults');\n  const [opendVaults, setOpenedVaults] = useState([]);\n  const [tokensToOpen, setTokensToOpen] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n  // enable not logged in user to use this feature\n  const [watchAddress, setWatchAddress] = useState('');\n  const isWatchMode = user === '' && watchAddress !== '';\n  const hasAddressConnected = user !== '' || watchAddress !== '';\n\n  // checkbox\n  const [showExpired, setShowExpired] = useState(getPreference('showExpired', '0') === '1');\n  const [showEmpty, setShowEmpty] = useState(getPreference('showEmpty', '1') === '1');\n\n  const displayVaults = opendVaults\n    .filter((vault) => showExpired || vault.expiry * 1000 > Date.now())\n    .filter((vault) => showEmpty || new BigNumber(vault.collateral).gt(new BigNumber(0)));\n\n  // Only request all vaults once\n  useMemo(async () => {\n    if (!hasAddressConnected) return;\n    const userVaults = await getAllVaultsForUser(isWatchMode ? watchAddress : user);\n    const openedVaults = [];\n    const notOpenedTokens = [];\n    await Promise.map(allOptions, async (option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      const isOpened = entry !== undefined;\n      if (isOpened) {\n        const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n          option.collateral,\n          option.strike,\n          option.oracle,\n          option.collateralDecimals,\n        );\n        const ratio = calculateRatio(\n          entry.collateral,\n          entry.oTokensIssued,\n          option.strikePrice,\n          strikeValueInCollateral,\n        );\n        openedVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          collateralDecimals: option.collateralDecimals,\n          expiry: option.expiry,\n          ratio,\n        });\n      } else if (option.expiry > (Date.now() / 1000)) {\n        // only put non-expired token to \"can open\" list\n        notOpenedTokens.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n        });\n      }\n    });\n    setIsLoading(false);\n    setOpenedVaults(openedVaults.sort(compareVaultRatio));\n    setTokensToOpen(notOpenedTokens);\n  }, [user, watchAddress, hasAddressConnected, isWatchMode]);\n\n  return (\n    <>\n      <Header primary=\"My Vaults\" />\n      {hasAddressConnected ? (\n        <>\n          {opendVaults.length > 0 ? (\n            <div style={{ paddingBottom: '3%' }}>\n\n              <div style={{ display: 'flex' }}>\n                <SectionTitle title=\"Existing Vaults\" />\n                <div style={{ marginLeft: 'auto' }}>\n                  <div style={{ display: 'flex' }}>\n                    <CheckBox\n                      text=\"Expired\"\n                      checked={showExpired}\n                      onCheck={(checked) => {\n                        storePreference('showExpired', checked ? '1' : '0');\n                        setShowExpired(checked);\n                      }}\n                    />\n                    <CheckBox\n                      text=\"Empty\"\n                      checked={showEmpty}\n                      onCheck={(checked) => {\n                        storePreference('showEmpty', checked ? '1' : '0');\n                        setShowEmpty(checked);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <DataView\n                fields={['Token', 'contract', 'collateral', 'Ratio', '']}\n                entries={displayVaults}\n                entriesPerPage={6}\n                renderEntry={({\n                  oToken, oTokenName, collateral, collateralDecimals, ratio,\n                }) => [\n                  oTokenName,\n                  <IdentityBadge entity={oToken} />,\n                  formatDigits(toTokenUnitsBN(collateral, collateralDecimals).toNumber(), 5),\n                  formatDigits(ratio, 4),\n                  <ManageVaultButton oToken={oToken} owner={isWatchMode ? watchAddress : user} />,\n                ]}\n              />\n            </div>\n          ) : isLoading ? (\n            <Comment text=\"Loading\" />\n          ) : (\n            <Comment text=\"No Opened Vaults\" />\n          )}\n          {tokensToOpen.length > 0 && !isWatchMode ? (\n            <div>\n              <SectionTitle title=\"Open new vaults\" />\n              <DataView\n                fields={['Token', 'contract', 'manage']}\n                entries={tokensToOpen}\n                renderEntry={({ oToken, oTokenName }) => [\n                  oTokenName,\n                  <IdentityBadge entity={oToken} shorten={false} />,\n                  <OpenVaultButton oToken={oToken} user={user} />,\n                ]}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </>\n      ) : (\n        // Not connected to wallet\n        <NoWalletView\n          watchAddress={watchAddress}\n          setWatchAddress={setWatchAddress}\n        />\n      )}\n    </>\n  );\n}\n\nMyVaults.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default MyVaults;\n","import PropTypes from 'prop-types';\n\nexport const vault = PropTypes.shape({\n  owner: PropTypes.string,\n  oTokensIssued: PropTypes.string,\n  collateral: PropTypes.string,\n});\n\n// export const detailVault = PropTypes.shape({\n//   oTokensIssued: PropTypes.string,\n//   collateral: PropTypes.string,\n// });\n\nexport const option = PropTypes.shape({\n  addr: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  symbol: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  decimals: PropTypes.number.isRequired,\n  oracle: PropTypes.string.isRequired,\n  collateral: PropTypes.string.isRequired,\n  collateralDecimals: PropTypes.number.isRequired,\n  underlying: PropTypes.string.isRequired,\n  strike: PropTypes.string.isRequired,\n  strikePrice: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  exchange: PropTypes.string.isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n  expiry: PropTypes.number.isRequired,\n});\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  DataView,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\nimport * as myType from '../types';\nimport { exercise } from '../../utils/web3';\nimport { PriceSection } from '../common';\nimport { getUnderlyingRequiredToExercise, getBalance, getTokenBalance } from '../../utils/infura';\nimport {\n  toTokenUnitsBN, toBaseUnitBN, formatDigits, compareVaultIssued,\n} from '../../utils/number';\n\n\n/**\n *\n * @param {{\n * oToken: string,\n * option: { decimals: number, underlying:string, collateralDecimals: Number }\n * underlyingDecimals: Number\n * underlyingSymbol: string\n * vaults: { collateral:string, oTokensIssued: string, owner:string, symbol:string }[]\n * underlyingIsETH: boolean\n * }} param0\n */\nfunction ExerciseModal({\n  user,\n  oToken,\n  option,\n  vaults,\n  underlyingDecimals,\n  underlyingSymbol,\n  underlyingIsETH,\n}) {\n  const [userUnderlyingBalance, setUserUnderlyingBalance] = useState(new BigNumber(0));\n  const [userOTokenBalance, setUserOTokenBalance] = useState(new BigNumber(0));\n\n  const [opened, setOpened] = useState(false);\n\n  const [exerciseAmount, setExerciseAmount] = useState(new BigNumber(0));\n  const [underlyringRequired, setUnderlyringRequired] = useState(new BigNumber(0));\n\n  const nonEmptyVaults = vaults\n    .filter((vault) => parseInt(vault.collateral, 10) > 0)\n    .sort(compareVaultIssued);\n\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\n  const [selectedHasEnoughCollateral, setHasEnoughCollateral] = useState(false);\n\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  // Update user balance\n  useMemo(async () => {\n    if (!user) return;\n    if (!opened) return;\n    let userUnderlying;\n    if (underlyingIsETH) {\n      userUnderlying = new BigNumber(await getBalance(user));\n    } else {\n      userUnderlying = toTokenUnitsBN(\n        await getTokenBalance(option.underlying, user),\n        underlyingDecimals,\n      );\n    }\n    const userOTkns = toTokenUnitsBN(await getTokenBalance(oToken, user), option.decimals);\n\n    setUserUnderlyingBalance(userUnderlying);\n    setUserOTokenBalance(userOTkns);\n  }, [oToken, option.decimals, option.underlying, underlyingDecimals, underlyingIsETH, user, opened]);\n\n  const onSelectEntries = (entries, indexes) => {\n    setSelectedIndexes(indexes);\n    checkHasEnoughToken(entries);\n  };\n\n  /**\n   * Set selectedHasEnoughCollateral according to selected entries\n   * @param {{oTokenIssued: string}[]} entries\n   */\n  const checkHasEnoughToken = (entries) => {\n    const sumIssued = entries.reduce(\n      (accumulator, current) => accumulator.plus(new BigNumber(current.oTokensIssued)), new BigNumber(0),\n    );\n    if (sumIssued.gt(new BigNumber(0)) && sumIssued.gte(toBaseUnitBN(exerciseAmount, option.decimals))) {\n      setHasEnoughCollateral(true);\n    } else {\n      setHasEnoughCollateral(false);\n    }\n  };\n\n  const onChangeExerciseAmt = async (amount) => {\n    if (!amount) {\n      setExerciseAmount(new BigNumber(0));\n      setUnderlyringRequired(new BigNumber(0));\n      return;\n    }\n    const exeAmtBN = new BigNumber(amount);\n    setExerciseAmount(exeAmtBN);\n    const underlyingRawAmt = await getUnderlyingRequiredToExercise(\n      oToken,\n      toBaseUnitBN(exeAmtBN, option.decimals).toString(),\n    );\n    const underlyingRequired = toTokenUnitsBN(underlyingRawAmt, underlyingDecimals);\n    setUnderlyringRequired(underlyingRequired);\n\n    // check current selection has enought tokens\n    const entries = selectedIndexes.map((index) => nonEmptyVaults[index]);\n    checkHasEnoughToken(entries);\n  };\n\n  return (\n    <>\n      {/* Button */}\n      <Button onClick={open} label=\"Claim\" />\n\n      {/* Modal */}\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header\n          primary=\"Exercise Option\"\n          secondary={(\n            <div style={{ display: 'flex' }}>\n              <PriceSection\n                label=\"Balance:\"\n                amt={userOTokenBalance.toNumber()}\n                symbol={option.symbol}\n                forceDisplay\n              />\n              <PriceSection label=\" +\" amt={userUnderlyingBalance.toNumber()} symbol={underlyingSymbol} />\n            </div>\n          )}\n        />\n        <Box heading=\"Amount to Exercise\">\n          <Split\n            primary={(\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  adornment={option.symbol}\n                  adornmentPosition=\"end\"\n                  value={exerciseAmount.toNumber()}\n                  onChange={(event) => onChangeExerciseAmt(event.target.value)}\n                />\n              </>\n            )}\n            secondary={(\n              <div style={{ paddingTop: 5 }}>\n                <PriceSection\n                  label=\"+ Underlyring\"\n                  amt={underlyringRequired.toNumber()}\n                  symbol={underlyingSymbol}\n                />\n              </div>\n            )}\n          />\n        </Box>\n        <DataView\n          mode=\"table\"\n          renderSelectionCount={(count) => `${count} vaults selected`}\n          fields={['Owner', 'Issued', 'collateral']}\n          entries={nonEmptyVaults}\n          entriesPerPage={5}\n          selection={selectedIndexes}\n          onSelectEntries={onSelectEntries}\n          renderEntry={({ owner, collateral, oTokensIssued }) => [\n            <IdentityBadge entity={owner} />,\n            formatDigits(toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(), 5),\n            formatDigits(toTokenUnitsBN(collateral, option.collateralDecimals).toNumber(), 5),\n          ]}\n        />\n        <br />\n        <Button\n          label=\"Exercise\"\n          disabled={!selectedHasEnoughCollateral}\n          wide\n          onClick={async () => {\n            const vaultowners = selectedIndexes.map((index) => vaults[index].owner);\n            exercise(\n              oToken,\n              option.underlying,\n              toBaseUnitBN(exerciseAmount, option.decimals).toString(),\n              vaultowners,\n            );\n          }}\n        />\n      </Modal>\n    </>\n  );\n}\n\nExerciseModal.propTypes = {\n  user: PropTypes.string.isRequired,\n  oToken: PropTypes.string.isRequired,\n  option: myType.option.isRequired,\n  vaults: PropTypes.arrayOf(myType.vault).isRequired,\n  underlyingDecimals: PropTypes.number.isRequired,\n  underlyingSymbol: PropTypes.string.isRequired,\n  underlyingIsETH: PropTypes.bool.isRequired,\n};\n\nexport default ExerciseModal;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconConnect,\n  DataView,\n  useToast,\n  Tag,\n} from '@aragon/ui';\n\nimport * as MyPTypes from '../types';\nimport { RatioTag, Comment } from '../common';\n\nimport {\n  liquidate,\n  addERC20Collateral,\n  addETHCollateral,\n  kollateralLiquidate,\n} from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { toTokenUnitsBN, toBaseUnitBN, formatDigits } from '../../utils/number';\nimport { KETH, DAI, USDC } from '../../constants/contracts';\n\n/**\n *\n * @param {{ option:{\n * decimals:number,\n * exchange:string, collateral:string, symbol:string, collateralDecimals:Number}\n * oTokensIssued: string\n * , exchange:string}} param0\n */\nfunction VaultModal({\n  option,\n  useCollateral,\n  oToken,\n  owner,\n  collateral, // amount of collateral of this vault\n  isSafe,\n  oTokensIssued,\n  ratio,\n  collateralIsETH,\n}) {\n  const toast = useToast();\n  const [opened, setOpened] = useState(false);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function getData() {\n      if (!opened) return;\n      const maxLiquidatable = await getMaxLiquidatable(oToken, owner);\n      if (!isCancelled) {\n        setLiquidateAmt(toTokenUnitsBN(maxLiquidatable, option.decimals).toNumber());\n      }\n    }\n    getData();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [option.decimals, oToken, opened, owner]);\n\n  return (\n    <>\n      <Button onClick={open} label=\"More\" />\n      <Modal width={900} padding={50} visible={opened} onClose={close}>\n        <Header primary=\"Access Position\" />\n\n        <DataView\n          fields={['Owner', 'Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[{\n            collateral, isSafe, oTokensIssued, ratio, owner,\n          }]}\n          entriesPerPage={1}\n          renderEntry={(vault) => [\n            <IdentityBadge entity={vault.owner} shorten />,\n            formatDigits(toTokenUnitsBN(vault.collateral, option.collateralDecimals), 5),\n            formatDigits(toTokenUnitsBN(vault.oTokensIssued, option.decimals), 5),\n            formatDigits(vault.ratio, 4),\n            RatioTag({ isSafe: vault.isSafe, ratio, useCollateral }),\n          ]}\n        />\n\n        <br />\n        <Box heading=\"Add Collateral\">\n          <Split\n            primary={(\n              <TextInput\n                type=\"number\"\n                wide\n                adornment={<IconEthereum />}\n                adornmentPosition=\"end\"\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            )}\n            secondary={(\n              <Button\n                label=\"Add Collateral\"\n                wide\n                onClick={() => {\n                  if (collateralIsETH) {\n                    addETHCollateral(oToken, owner, addValue);\n                  } else {\n                    addERC20Collateral(\n                      option.collateral,\n                      oToken,\n                      owner,\n                      toBaseUnitBN(addValue, option.collateralDecimals).toString(),\n                    );\n                  }\n                }}\n              />\n            )}\n          />\n        </Box>\n\n        {useCollateral ? (\n          <Box heading=\"Liquidate\">\n            <Comment text={`Liquidate with your ${option.symbol}`} />\n            <Split\n              primary={(\n                <>\n                  <TextInput\n                    wide\n                    type=\"number\"\n                    value={liquidateAmt}\n                    onChange={(event) => {\n                      setLiquidateAmt(event.target.value);\n                    }}\n                  />\n                </>\n              )}\n              secondary={(\n                <>\n                  <Button\n                    wide\n                    disabled={isSafe}\n                    label=\"Liquidate\"\n                    onClick={() => {\n                      liquidate(oToken, owner, toBaseUnitBN(liquidateAmt, option.decimals)).catch(\n                        (error) => {\n                          toast(error.toString());\n                        },\n                      );\n                    }}\n                  />\n                </>\n              )}\n            />\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n              <Comment text=\" Or \" />\n            </div>\n            <Comment text={(\n              <>\n                <Tag> beta </Tag>\n                Liquidate with Kollateral Flashloan\n              </>\n              )}\n            />\n\n            <div style={{ display: 'flex' }}>\n              <Button\n                icon={<IconConnect />}\n                label=\"DAI\"\n                disabled={isSafe}\n                onClick={() => {\n                  kollateralLiquidate(oToken, option.exchange, owner, DAI).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n                selected\n              />\n              <Button\n                icon={<IconConnect />}\n                label=\"USDC\"\n                disabled={isSafe}\n                onClick={() => {\n                  kollateralLiquidate(oToken, option.exchange, owner, USDC).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n              />\n              <Button\n                icon={<IconConnect />}\n                label=\"ETH\"\n                disabled={isSafe}\n                onClick={() => {\n                  kollateralLiquidate(oToken, option.exchange, owner, KETH).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n              />\n            </div>\n          </Box>\n        ) : (\n          <></>\n        )}\n      </Modal>\n    </>\n  );\n}\n\nVaultModal.propTypes = {\n  option: MyPTypes.option.isRequired,\n  useCollateral: PropTypes.bool.isRequired,\n  oToken: PropTypes.string.isRequired,\n  owner: PropTypes.string.isRequired,\n  collateral: PropTypes.string.isRequired,\n  isSafe: PropTypes.bool.isRequired,\n  oTokensIssued: PropTypes.string.isRequired,\n  ratio: PropTypes.number.isRequired,\n  collateralIsETH: PropTypes.bool.isRequired,\n};\n\nexport default VaultModal;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { DataView, IdentityBadge } from '@aragon/ui';\nimport VaultModal from './VaultModal';\nimport { SectionTitle, RatioTag } from '../common';\nimport * as MyPTypes from '../types';\nimport {\n  formatDigits, compareVaultRatio, compareVaultIssued, toTokenUnitsBN,\n} from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\n\n\nfunction VaultOwnerList({\n  oToken, user, vaults, option, collateralIsETH,\n}) {\n  const vaultUsesCollateral = option.collateral !== option.strike;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [vaultsWithDetail, setVaultDetail] = useState([]);\n\n  const [page, setPage] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      if (vaults.length === 0) return;\n      const {\n        strike, minRatio, strikePrice, oracle, collateral, collateralDecimals,\n      } = option;\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral,\n        strike,\n        oracle,\n        collateralDecimals,\n      );\n      const vaultDetail = vaults\n        .map((vault) => {\n          if (vault.oTokensIssued === '0') {\n            return {\n              owner: vault.owner,\n              oTokensIssued: vault.oTokensIssued,\n              collateral: vault.collateral,\n              ratio: Infinity,\n              useCollateral: vaultUsesCollateral,\n              isSafe: true,\n            };\n          }\n          const ratio = calculateRatio(\n            vault.collateral,\n            vault.oTokensIssued,\n            strikePrice,\n            strikeValueInCollateral,\n          );\n          return {\n            owner: vault.owner,\n            oTokensIssued: vault.oTokensIssued,\n            collateral: vault.collateral,\n            ratio,\n            useCollateral: vaultUsesCollateral,\n            isSafe: ratio > minRatio,\n            oToken,\n          };\n        })\n        .sort(vaultUsesCollateral ? compareVaultRatio : compareVaultIssued);\n\n      if (!isCancelled) {\n        setVaultDetail(vaultDetail);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 20000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [collateralIsETH, oToken, option, user, vaultUsesCollateral, vaults]);\n\n  return (\n    <>\n      <SectionTitle title=\"All Vaults\" />\n      <DataView\n        page={page}\n        onPageChange={setPage}\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaultsWithDetail}\n        entriesPerPage={5}\n        renderEntry={({\n          owner, collateral, oTokensIssued, ratio, isSafe, useCollateral,\n        }) => [\n          <IdentityBadge entity={owner} shorten />,\n          formatDigits(\n            toTokenUnitsBN(collateral, option.collateralDecimals).toNumber(),\n            6,\n          ),\n          formatDigits(\n            toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(),\n            6,\n          ),\n          formatDigits(ratio, 5),\n          RatioTag({ isSafe, ratio, useCollateral }),\n          <VaultModal\n            option={option}\n            oToken={oToken}\n            owner={owner}\n            collateral={collateral}\n            isSafe={isSafe}\n            useCollateral={useCollateral}\n            collateralIsETH={collateralIsETH}\n            oTokensIssued={oTokensIssued}\n            ratio={ratio}\n          />,\n        ]}\n      />\n    </>\n  );\n}\n\nVaultOwnerList.propTypes = {\n  oToken: PropTypes.string.isRequired,\n  user: PropTypes.string.isRequired,\n  vaults: PropTypes.arrayOf(MyPTypes.vault).isRequired,\n  option: MyPTypes.option.isRequired,\n  collateralIsETH: PropTypes.bool.isRequired,\n};\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Split, IdentityBadge } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport * as MyPTypes from '../types';\n\nimport { getTotalSupply, getBalance, getTokenBalance } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\n\nfunction OptionOverview({\n  oToken, tokenSymbol, option, collateralIsETH,\n}) {\n  const [totalCollateral, setTotalCollateral] = useState(new BigNumber(0));\n  const [totalSupply, setTotalSupply] = useState(new BigNumber(0));\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      let totalCollt;\n      if (collateralIsETH) {\n        totalCollt = new BigNumber(await getBalance(oToken));\n      } else {\n        const rawCollateralBalance = await getTokenBalance(option.collateral, oToken);\n        totalCollt = toTokenUnitsBN(rawCollateralBalance, option.collateralDecimals);\n      }\n      const supply = await getTotalSupply(oToken);\n      if (!isCancelled) {\n        setTotalCollateral(totalCollt);\n        setTotalSupply(toTokenUnitsBN(supply, option.decimals));\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [option.collateralDecimals, collateralIsETH, oToken, option.collateral, option.decimals]);\n\n  return (\n    <>\n      <Split\n        primary={(\n          <Split\n            primary={(\n              <Box heading=\"contract\" padding={15}>\n                <IdentityBadge entity={oToken} shorten={false} />\n              </Box>\n            )}\n            secondary={(\n              <Box heading=\"Total Collateral\" padding={15}>\n                {totalCollateral.toFormat(4)}\n              </Box>\n            )}\n          />\n        )}\n        secondary={(\n          <Box heading=\"total supply\" padding={15}>\n            {totalSupply.toFormat(4)}\n            {' '}\n            {tokenSymbol}\n          </Box>\n        )}\n      />\n    </>\n  );\n}\n\nOptionOverview.propTypes = {\n  oToken: PropTypes.string.isRequired,\n  tokenSymbol: PropTypes.string.isRequired,\n  option: MyPTypes.option.isRequired,\n  collateralIsETH: PropTypes.bool.isRequired,\n};\n\nexport default OptionOverview;\n","import React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport ExerciseModal from './ExerciseModal';\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nimport { getDecimals, getERC20Symbol } from '../../utils/infura';\nimport { getAllVaultsForOption } from '../../utils/graph';\nimport tracker from '../../utils/tracker';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport { allOptions } from '../../constants/options';\n\nfunction OptionPage({ user }) {\n  const { token } = useParams();\n  tracker.pageview(`/option/${token}`);\n  const option = allOptions.find((o) => o.addr === token);\n\n  const [vaults, setVaults] = useState([]);\n\n  const [underlyingDecimals, setUnderlyingDecimals] = useState(18);\n  const [underlyingSymbol, setUnderlyingSymbol] = useState('ETH');\n\n  const collateralIsETH = option.collateral === ETH_ADDRESS;\n  const underlyingIsETH = option.underlying === ETH_ADDRESS;\n\n  useMemo(async () => {\n    if (!underlyingIsETH) {\n      const [_decimals, _symbol] = await Promise.all([\n        getDecimals(option.underlying),\n        getERC20Symbol(option.underlying),\n      ]);\n      setUnderlyingDecimals(_decimals);\n      setUnderlyingSymbol(_symbol);\n    }\n\n    // Get All vaults once\n    const allVaults = await getAllVaultsForOption(token);\n    setVaults(allVaults);\n  }, [option.underlying, token, underlyingIsETH]);\n\n  return (\n    <>\n      <Header\n        primary={option.name}\n        secondary={(\n          <ExerciseModal\n            user={user}\n            oToken={token}\n            option={option}\n            underlyingDecimals={underlyingDecimals}\n            underlyingSymbol={underlyingSymbol}\n            underlyingIsETH={underlyingIsETH}\n            vaults={vaults}\n          />\n        )}\n      />\n      {/* Basic Info Header */}\n      <OptionInfoBox\n        tokenSymbol={option.symbol}\n        oToken={token}\n        user={user}\n        vaults={vaults}\n        option={option}\n        collateralIsETH={collateralIsETH}\n      />\n      {/* List of Vaults */}\n      <VaultsList\n        oToken={token}\n        user={user}\n        vaults={vaults}\n        collateralIsETH={collateralIsETH}\n        option={option}\n      />\n    </>\n  );\n}\n\nOptionPage.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default OptionPage;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { BalanceBlock, RatioTag, HelperText } from '../common';\nimport { formatDigits, toTokenUnitsBN } from '../../utils/number';\nimport * as MyPTypes from '../types';\n\nconst HeaderDashboard = ({\n  ratio,\n  minRatio,\n  symbol,\n  vault,\n  decimals,\n  newRatio,\n  collateralDecimals,\n  useCollateral,\n}) => {\n  const tokenInUnit = vault.oTokensIssued\n    ? toTokenUnitsBN(vault.oTokensIssued, decimals).toNumber()\n    : '0';\n  const collateralBalance = vault.collateral\n    ? toTokenUnitsBN(vault.collateral, collateralDecimals).toString()\n    : '0';\n\n  return (\n    <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset=\"Total Collateral\" balance={formatDigits(collateralBalance, 6)} />\n      </div>\n      <div style={{ width: '50%' }}>\n        <BalanceBlock asset={`${symbol} Issued`} balance={tokenInUnit.toString()} />\n      </div>\n      <div style={{ width: '20%' }}>\n        <>\n          <div style={{ fontSize: 14, padding: 3 }}>\n            Current Ratio\n            {' '}\n            {ratio > 0 ? (\n              <RatioTag isSafe={ratio >= minRatio} ratio={ratio} useCollateral={useCollateral} />\n            ) : (\n              <></>\n            )}\n          </div>\n          <div style={{ fontSize: 24, padding: 3 }}>\n            <span style={{ fontSize: 24 }}>{formatDigits(ratio, 5).split('.')[0]}</span>\n            .\n            <span style={{ fontSize: 18 }}>\n              {formatDigits(ratio, 5).split('.')[1]}\n              {' '}\n            </span>\n            {minRatio > 0 ? (\n              <span style={{ fontSize: 16 }}>\n                {' '}\n                /\n                {' '}\n                {minRatio}\n                {' '}\n              </span>\n            ) : ''}\n          </div>\n          <>\n            {' '}\n            {newRatio === ratio ? (\n              ''\n            ) : (\n              <HelperText label=\"New Ratio\" amt={newRatio.toString()} />\n            )}\n            {' '}\n          </>\n        </>\n      </div>\n    </div>\n  );\n};\n\nHeaderDashboard.propTypes = {\n  ratio: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  symbol: PropTypes.string.isRequired,\n  vault: MyPTypes.vault.isRequired,\n  decimals: PropTypes.number.isRequired,\n  newRatio: PropTypes.number.isRequired,\n  collateralDecimals: PropTypes.number.isRequired,\n  useCollateral: PropTypes.bool.isRequired,\n};\n\nexport default HeaderDashboard;\n","import React, { useState, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport { getERC20Symbol } from '../../utils/infura';\nimport { addETHCollateral, addERC20Collateral, removeCollateral } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common';\n\nimport { formatDigits, toTokenUnitsBN, toBaseUnitBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation';\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport * as MyPTypes from '../types';\n\n/**\n *\n * @param {{isOwner: boolean, strikePrice:number, strikeValue:BigNumber, collateralAssetBalance: BigNumber }} param0\n */\nfunction CollateralManagement({\n  isOwner,\n  vault,\n  collateralAsset,\n  collateralAssetBalance, // Bignumber, / token unit\n  collateralDecimals,\n  token,\n  owner,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  setNewRatio,\n}) {\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0); // in token unit\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0); // in token unit\n\n  const [collateralSymbol, setCollateralSymbol] = useState('ETH');\n\n  const collateralIsETH = collateralAsset === ETH_ADDRESS;\n\n  useMemo(async () => {\n    if (collateralIsETH) return;\n    const symbol = await getERC20Symbol(collateralAsset);\n    setCollateralSymbol(symbol);\n  }, [collateralAsset, collateralIsETH]);\n\n  /**\n   * @param {number} newCollateral in wei\n   */\n  // eslint-disable-next-line consistent-return\n  const updateNewRatio = (newCollateral) => {\n    if (!newCollateral || newCollateral <= 0) return 0;\n    const str = newCollateral.toString();\n    const newRatio = calculateRatio(str, vault.oTokensIssued, strikePrice, strikeValue);\n    setNewRatio(formatDigits(newRatio, 5));\n  };\n\n  return (\n    <Box heading=\"Collateral\">\n      <div style={{ display: 'flex' }}>\n        {/* balance */}\n        <div style={{ width: '30%' }}>\n          {BalanceBlock({\n            asset: `Your ${collateralSymbol} Balance`,\n            balance: formatDigits(collateralAssetBalance.toString(), 6),\n          })}\n        </div>\n        {/* Add collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={addCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value;\n                    if (amt === '') {\n                      setAddCollateralAmt(0);\n                      return;\n                    }\n                    setAddCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateralDecimals);\n                    const newCollateralInWei = new BigNumber(vault.collateral).plus(amtRaw).toNumber();\n                    updateNewRatio(newCollateralInWei);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setAddCollateralAmt(collateralAssetBalance.toNumber());\n                    const collateralBalanceRaw = toBaseUnitBN(collateralAssetBalance, collateralDecimals);\n                    const newCollateral = new BigNumber(vault.collateral).plus(collateralBalanceRaw).toNumber();\n                    updateNewRatio(newCollateral);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Add\"\n                onClick={() => {\n                  if (collateralIsETH) {\n                    addETHCollateral(token, owner, addCollateralAmt);\n                  } else {\n                    addERC20Collateral(\n                      collateralAsset,\n                      token,\n                      owner,\n                      toBaseUnitBN(addCollateralAmt, collateralDecimals),\n                    );\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={removeCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value;\n                    if (amt === '') {\n                      setRemoveCollateralAmt(0);\n                      return;\n                    }\n                    setRemoveCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateralDecimals);\n                    const newCollateralWei = new BigNumber(vault.collateral).minus(amtRaw).toNumber();\n                    updateNewRatio(newCollateralWei);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikeValue.toNumber() <= 0) return;\n                    const strikePriceBN = new BigNumber(strikePrice);\n                    const tokenIssuedBN = new BigNumber(vault.oTokensIssued);\n                    const minRatioBN = new BigNumber(minRatio);\n                    const minCollateral = strikePriceBN.times(tokenIssuedBN).times(minRatioBN).times(strikeValue);\n                    // const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                    // const minCollateral = minValueInStrike * strikeValue;\n                    const maxToRemove = new BigNumber(vault.collateral).minus(minCollateral).toString();\n                    const maxToRemoveInTokenUnit = toTokenUnitsBN(maxToRemove, collateralDecimals).toNumber();\n                    setRemoveCollateralAmt(maxToRemoveInTokenUnit);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Remove\"\n                onClick={() => {\n                  removeCollateral(\n                    collateralAsset,\n                    token,\n                    toBaseUnitBN(removeCollateralAmt, collateralDecimals).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nCollateralManagement.propTypes = {\n  isOwner: PropTypes.bool.isRequired,\n  vault: MyPTypes.vault.isRequired,\n  collateralAsset: PropTypes.string.isRequired,\n  collateralAssetBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  collateralDecimals: PropTypes.number.isRequired,\n  token: PropTypes.string.isRequired,\n  owner: PropTypes.string.isRequired,\n  strikeValue: PropTypes.instanceOf(BigNumber).isRequired,\n  strikePrice: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  setNewRatio: PropTypes.func.isRequired,\n};\n\nexport default CollateralManagement;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport { burnOToken, issueOToken } from '../../utils/web3';\nimport { BalanceBlock, MaxButton } from '../common';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation';\nimport * as MyPTypes from '../types';\n/**\n *\n * @param {{\n * strikeValue: BigNumber,\n * tokenBalance: BigNumber,\n * strikePrice: Number,\n * decimals: Number\n * }} param0\n */\nfunction IssuedTokenManagement({\n  isOwner,\n  vault,\n  tokenBalance,\n  token,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  decimals,\n  symbol,\n  setNewRatio,\n}) {\n  const [issueAmt, setIssueAmt] = useState(new BigNumber(0));\n  const [burnAmt, setBurnAmt] = useState(new BigNumber(0));\n\n  /**\n   *\n   * @param {BigNumber} newAmt in raw amt\n   */\n  const updateNewRatio = (newAmt) => {\n    if (newAmt.lte(new BigNumber(0))) return;\n    const newRatio = calculateRatio(vault.collateral, newAmt, strikePrice, strikeValue);\n    setNewRatio(newRatio);\n  };\n\n  const onChangeIssueAmt = (intputAmt) => {\n    if (!intputAmt) {\n      setIssueAmt(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt);\n    setIssueAmt(amountBN);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).plus(toBaseUnitBN(amountBN, decimals)));\n  };\n\n  const onClickIssueToken = () => {\n    issueOToken(\n      token,\n      toBaseUnitBN(issueAmt, decimals).toString(),\n    );\n  };\n\n  const onChangeBurnAmt = (intputAmt) => {\n    if (!intputAmt) {\n      setBurnAmt(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).minus(toBaseUnitBN(amountBN, decimals)));\n    setBurnAmt(amountBN);\n  };\n\n  const onClickBurnToken = () => {\n    burnOToken(\n      token,\n      toBaseUnitBN(burnAmt, decimals).toString(),\n    );\n  };\n\n  return (\n    <Box heading=\"Total Issued\">\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock\n            asset={`Owner ${symbol} Balance `}\n            balance={tokenBalance.toString()}\n          />\n        </div>\n        {/* Issue More Token */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={issueAmt}\n                  onChange={(event) => onChangeIssueAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikePrice <= 0) return;\n                    const maxTotal = new BigNumber(vault.collateral).div(\n                      new BigNumber(minRatio).times(new BigNumber(strikePrice)).times(strikeValue),\n                    );\n                    const maxToIssueRaw = maxTotal.minus(new BigNumber(vault.oTokensIssued));\n                    const maxToIssue = toTokenUnitsBN(maxToIssueRaw, decimals);\n                    setIssueAmt(maxToIssue);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Issue\"\n                onClick={onClickIssueToken}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={burnAmt}\n                  onChange={(event) => onChangeBurnAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    const issued = toTokenUnitsBN(vault.oTokensIssued, decimals);\n                    const maxToBurn = tokenBalance.lt(issued) ? tokenBalance : issued; // min (issued, tokenBalance)\n                    setBurnAmt(maxToBurn);\n                    updateNewRatio(issued.minus(maxToBurn));\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Burn\"\n                onClick={onClickBurnToken}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nIssuedTokenManagement.propTypes = {\n  isOwner: PropTypes.bool.isRequired,\n  vault: MyPTypes.vault.isRequired,\n  tokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  token: PropTypes.string.isRequired,\n  strikeValue: PropTypes.instanceOf(BigNumber).isRequired,\n  strikePrice: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  decimals: PropTypes.number.isRequired,\n  symbol: PropTypes.string.isRequired,\n  setNewRatio: PropTypes.func.isRequired,\n};\n\nexport default IssuedTokenManagement;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport {\n  Box, DataView, IdentityBadge, TransactionBadge, TextInput, Button,\n} from '@aragon/ui';\n\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { getLiquidationHistory } from '../../utils/graph';\nimport {\n  formatDigits, fromWei, toTokenUnitsBN, timeSince, toBaseUnitBN,\n} from '../../utils/number';\n\n/**\n *\n * @param {{userTokenBalance: BigNumber}} param0\n */\nfunction LiquidationHistory({\n  owner, token, isOwner, tokenDecimals, userTokenBalance,\n}) {\n  const [maxLiquidatable, setMaxLiquidatable] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  const [amountToLiquidate, setAmtToLiquidate] = useState(0);\n\n  useEffect(() => {\n    async function updateLiquidatable() {\n      const maxToLiquidate = await getMaxLiquidatable(token, owner);\n      setMaxLiquidatable(toTokenUnitsBN(maxToLiquidate, tokenDecimals).toNumber());\n    }\n    updateLiquidatable();\n  }, [owner, token, tokenDecimals]);\n\n  useMemo(async () => {\n    async function updateList() {\n      const actions = await getLiquidationHistory(owner);\n      const actionsForThisVault = actions.filter(\n        (entry) => entry.vault.optionsContract.address === token,\n      ).sort((actionA, actionB) => {\n        if (actionA.timestamp > actionB.timestamp) return -1;\n        return 1;\n      });\n      setEntries(actionsForThisVault);\n      setIsLoading(false);\n    }\n    updateList();\n  }, [owner, token]);\n\n  return (\n    <>\n      {isOwner ? (\n        <></>\n      ) : (\n        <Box heading=\"Liquidate\">\n          <>\n            <div style={{ display: 'flex' }}>\n              {/* balance */}\n              <div style={{ width: '30%' }}>\n                <BalanceBlock asset=\"Max To Liquidate\" balance={maxLiquidatable} />\n              </div>\n              <div style={{ width: '70%', paddingTop: '2%' }}>\n                <div style={{ display: 'flex' }}>\n                  <div style={{ width: '60%' }}>\n                    <>\n                      <TextInput\n                        type=\"number\"\n                        wide\n                        value={amountToLiquidate}\n                        onChange={(event) => {\n                          setAmtToLiquidate(event.target.value);\n                        }}\n                      />\n                      <MaxButton\n                        onClick={() => {\n                          const maximum = Math.min(userTokenBalance.toNumber(), maxLiquidatable);\n                          setAmtToLiquidate(maximum);\n                        }}\n                      />\n                    </>\n                  </div>\n                  <div style={{ width: '40%' }}>\n                    <Button\n                      disabled={maxLiquidatable <= 0}\n                      label=\"Liquidate\"\n                      onClick={() => {\n                        const amtToLiquidate = toBaseUnitBN(\n                          amountToLiquidate,\n                          tokenDecimals,\n                        ).toString();\n                        liquidate(token, owner, amtToLiquidate);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        </Box>\n      )}\n\n      {/* History Section */}\n      <Box heading=\"History\">\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Liquidator', 'Date']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            collateralToPay, liquidator, timestamp, transactionHash,\n          }) => [\n            <TransactionBadge transaction={transactionHash} />,\n            formatDigits(fromWei(collateralToPay), 5),\n            <IdentityBadge entity={liquidator} />,\n            timeSince(parseInt(timestamp, 10) * 1000),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nLiquidationHistory.propTypes = {\n  owner: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  isOwner: PropTypes.bool.isRequired,\n  tokenDecimals: PropTypes.number.isRequired,\n  userTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n};\nexport default LiquidationHistory;\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box, DataView, IdentityBadge, TransactionBadge,\n} from '@aragon/ui';\n\n\nimport { getExerciseHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\nfunction ExerciseHistory({\n  owner, token, collateralDecimals, tokenDecimals,\n}) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  useMemo(async () => {\n    const actions = await getExerciseHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n      {/* History Section */}\n      <Box heading=\"History\">\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Collateral', 'oToken', 'Exerciser', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            amtCollateralToPay, oTokensToExercise, exerciser, timestamp, transactionHash,\n          }) => [\n            <TransactionBadge transaction={transactionHash} />,\n            formatDigits(\n              toTokenUnitsBN(amtCollateralToPay, collateralDecimals).toNumber(),\n              5,\n            ),\n            formatDigits(\n              toTokenUnitsBN(oTokensToExercise, tokenDecimals).toNumber(),\n              5,\n            ),\n            <IdentityBadge entity={exerciser} />,\n            timeSince(parseInt(timestamp * 1000, 10)),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nExerciseHistory.propTypes = {\n  owner: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  collateralDecimals: PropTypes.number.isRequired,\n  tokenDecimals: PropTypes.number.isRequired,\n};\n\nexport default ExerciseHistory;\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box, DataView, Button, TransactionBadge,\n} from '@aragon/ui';\nimport { BalanceBlock } from '../common';\nimport { getDecimals } from '../../utils/infura';\nimport { removeUnderlying } from '../../utils/web3';\nimport { getRemoveUnderlyingHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\nfunction RemoveUnderlying({\n  owner, token, underlying, underlyingAmount,\n}) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n  const [underlyingDecimals, setUnderlyingDecimals] = useState(18);\n\n  useMemo(async () => {\n    const [actions, uDecimals] = await Promise.all([\n      getRemoveUnderlyingHistory(owner, token),\n      getDecimals(underlying),\n    ]);\n    setEntries(actions);\n    setIsLoading(false);\n    setUnderlyingDecimals(uDecimals);\n  }, [owner, token, underlying]);\n\n  return (\n    <>\n\n      <Box heading=\"Underlying\">\n        <div style={{ display: 'flex' }}>\n          {/* balance */}\n          <div style={{ width: '30%' }}>\n            {BalanceBlock({\n              asset: 'Redeemable',\n              balance: formatDigits(toTokenUnitsBN(underlyingAmount, underlyingDecimals), 6),\n            })}\n          </div>\n          <div style={{ width: '70%', padding: '2%' }}>\n            <Button\n              label=\"Redeem Underlying\"\n              onClick={() => { removeUnderlying(token); }}\n            />\n          </div>\n        </div>\n        <br />\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Timestamp']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            transactionHash, amount, timestamp,\n          }) => [\n            <TransactionBadge shorten={false} transaction={transactionHash} />,\n            formatDigits(\n              toTokenUnitsBN(amount, underlyingDecimals).toNumber(),\n              5,\n            ),\n            timeSince(parseInt(timestamp * 1000, 10)),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nRemoveUnderlying.propTypes = {\n  owner: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  underlying: PropTypes.string.isRequired,\n  underlyingAmount: PropTypes.string.isRequired,\n};\n\nexport default RemoveUnderlying;\n","import React, { useState, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Header, Tabs, Box, Timer, Button,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport HeaderDashboard from './HeaderDashboard';\nimport CollateralManagement from './CollateralManagement';\nimport IssuedTokenManagement from './IssuedTokenManagement';\nimport LiquidationHistory from './Liquidation';\nimport ExerciseHistory from './Exercise';\nimport UnderlyingManagement from './UnderlyingManagement';\n\nimport { Comment } from '../common';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getTokenBalance, getBalance } from '../../utils/infura';\nimport { getVault } from '../../utils/graph';\nimport { redeem } from '../../utils/web3';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport { allOptions } from '../../constants/options';\nimport tracker from '../../utils/tracker';\n\nfunction ManageVault({ user }) {\n  const { token, owner } = useParams();\n  tracker.pageview(`/manage/${token}`);\n  const option = allOptions.find((o) => o.addr === token);\n  const {\n    decimals, symbol, oracle, strike, strikePrice, minRatio,\n    collateral, expiry, underlying, collateralDecimals,\n  } = option;\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Tab Navigation\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const [vault, setVault] = useState({});\n  const [strikeValueInCollateral, setStrikeValue] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(0);\n\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [userCollateralAssetBalance, setUserCollateralAssetBalance] = useState(new BigNumber(0));\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n  const [newRatio, setNewRatio] = useState(ratio);\n\n  const collateralIsETH = collateral === ETH_ADDRESS;\n\n  const vaultUsesCollateral = collateral !== strike;\n\n  useMemo(() => {\n    let isCancelled = false;\n    async function updateInfo() {\n      const vaultToManage = await getVault(owner, token);\n      if (vaultToManage === null) {\n        setIsLoading(false);\n        return;\n      }\n\n      setNoVault(false);\n      const [_ownerTokenBalance, _userTokenBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getTokenBalance(token, user),\n      ]);\n\n      // SetUserCollateralAmount\n      let collateralBalance = new BigNumber(0);\n      // let colltDecimals = 18;\n\n      if (collateralIsETH) {\n        collateralBalance = new BigNumber(await getBalance(user));\n      } else {\n        const userColltBalance = await getTokenBalance(collateral, user);\n        collateralBalance = toTokenUnitsBN(userColltBalance, collateralDecimals);\n      }\n\n      const ownerTokenBalanceBN = toTokenUnitsBN(_ownerTokenBalance, decimals);\n      const userTokenBalanceBN = toTokenUnitsBN(_userTokenBalance, decimals);\n\n      const strikeValInCollt = await calculateStrikeValueInCollateral(\n        collateral,\n        strike,\n        oracle,\n        collateralDecimals,\n      );\n      const currentRatio = calculateRatio(\n        vaultToManage.collateral,\n        vaultToManage.oTokensIssued,\n        strikePrice,\n        strikeValInCollt,\n      );\n\n      if (!isCancelled) {\n        setStrikeValue(strikeValInCollt);\n        setVault(vaultToManage);\n        setOwnerTokenBalance(ownerTokenBalanceBN);\n        setUserTokenBalance(userTokenBalanceBN);\n        setRatio(currentRatio);\n        setUserCollateralAssetBalance(collateralBalance);\n        setIsLoading(false);\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 15000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [\n    collateral,\n    collateralIsETH,\n    collateralDecimals,\n    decimals,\n    oracle,\n    owner,\n    strike,\n    strikePrice,\n    token,\n    user,\n  ]);\n\n  const isOwner = user === owner;\n\n  return noVault\n    ? isLoading ? (\n      <Comment text=\"Loading...\" />\n    )\n      : (\n        <Comment text=\"No Vault Found for this user under this contract\" />\n      ) : (\n        <>\n          <Header\n            primary={isOwner ? 'Manage My Vault' : 'Vault Detail'}\n            secondary={\n          expiry * 1000 > Date.now() ? (\n            <Timer end={new Date(expiry * 1000)} />\n          ) : (\n            <Button onClick={() => redeem(token)} label=\"Redeem\" />\n          )\n        }\n          />\n\n          <HeaderDashboard\n            owner={owner}\n            user={user}\n            ratio={ratio}\n            minRatio={minRatio}\n            vault={vault}\n            decimals={decimals}\n            symbol={symbol}\n            newRatio={newRatio}\n            useCollateral={vaultUsesCollateral}\n            collateralIsETH={collateralIsETH}\n            collateralDecimals={collateralDecimals}\n          />\n\n          <Tabs\n            items={['Collateral Management', 'Token Issuance', 'Liquidation', 'Exercise', 'Underlying Redemption']}\n            selected={tabSelected}\n            onChange={setTabSelected}\n          />\n\n          {tabSelected === 0 ? (\n            <CollateralManagement\n              isOwner={isOwner}\n              vault={vault}\n              collateralAssetBalance={userCollateralAssetBalance}\n              collateralAsset={option.collateral}\n              collateralDecimals={collateralDecimals}\n              token={token}\n              owner={owner}\n              strikeValue={strikeValueInCollateral}\n              strikePrice={strikePrice}\n              minRatio={minRatio}\n              setNewRatio={setNewRatio}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 1 ? (\n            <IssuedTokenManagement\n              isOwner={isOwner}\n              vault={vault}\n              tokenBalance={ownerTokenBalance}\n              token={token}\n              strikeValue={strikeValueInCollateral}\n              strikePrice={strikePrice}\n              minRatio={minRatio}\n              decimals={decimals}\n              symbol={symbol}\n              setNewRatio={setNewRatio}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 2 ? (\n            vaultUsesCollateral ? (\n              <LiquidationHistory\n                userTokenBalance={userTokenBalance}\n                isOwner={isOwner}\n                owner={owner}\n                token={token}\n                tokenDecimals={decimals}\n              />\n            ) : (\n              <Box> This vault cannot be liquidated </Box>\n            )\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 3 ? (\n            <ExerciseHistory\n              owner={owner}\n              token={token}\n              tokenDecimals={decimals}\n              collateralDecimals={collateralDecimals}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 4 ? (\n            <UnderlyingManagement\n              owner={owner}\n              token={token}\n              underlying={underlying}\n              underlyingAmount={vault.underlying}\n            />\n          ) : <> </>}\n        </>\n    );\n}\n\nManageVault.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default ManageVault;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\n\nimport { BalanceBlock, AddressBlock } from '../common';\n\n/**\n *\n * @param {{ poolTokenBalance: BigNumber, poolETHBalance: BigNumber }}\n */\nconst HeaderDashboard = ({\n  symbol, poolETHBalance, poolTokenBalance, uniswapExchange,\n}) => (\n  <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n    <div style={{ width: '30%' }}>\n      <BalanceBlock asset=\"Total ETH Liquidity\" balance={poolETHBalance} />\n    </div>\n    <div style={{ width: '30%' }}>\n      <BalanceBlock asset={`${symbol} Liquidity`} balance={poolTokenBalance} />\n    </div>\n    <div style={{ width: '40%' }}>\n      <>\n        <AddressBlock label=\"Uniswap Contract\" address={uniswapExchange} />\n      </>\n    </div>\n  </div>\n);\n\nHeaderDashboard.propTypes = {\n  symbol: PropTypes.string.isRequired,\n  poolETHBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  poolTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n};\n\nexport default HeaderDashboard;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { buyOTokensFromExchange, sellOTokensFromExchange } from '../../utils/web3';\n\nimport { getPremiumToPay, getPremiumReceived } from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN, fromWei } from '../../utils/number';\n\n/**\n *\n * @param {{\n *  decimals: number\n *  tokenBalance: BigNumber\n * }} param0\n */\nfunction OptionExchange({\n  symbol, tokenBalance, token, exchange, decimals,\n}) {\n  const [buyAmt, setBuyAmt] = useState(new BigNumber(0));\n  const [sellAmt, setSellAmt] = useState(new BigNumber(0));\n  const [premiumToPay, setPremiumToPay] = useState(new BigNumber(0));\n  const [premiumReceived, setPremiumReceived] = useState(new BigNumber(0));\n\n  const updatePremiumToPay = async (amt) => {\n    const butAmountBN = new BigNumber(amt);\n    if (butAmountBN.lte(new BigNumber(0))) {\n      setPremiumToPay(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(butAmountBN, decimals).toString();\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(new BigNumber(fromWei(premium)));\n  };\n\n  const updatePremiumReceived = async (amt) => {\n    const sellAmountBN = new BigNumber(amt);\n    if (sellAmountBN.lte(new BigNumber(0))) {\n      setPremiumReceived(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(sellAmountBN, decimals).toString();\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(new BigNumber(premium));\n  };\n\n  return (\n    <Box heading=\"Exchange\">\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`${symbol} Balance`} balance={tokenBalance} />\n        </div>\n        {/* Buy Token from Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={buyAmt}\n                  onChange={(event) => {\n                    if (event.target.value) {\n                      setBuyAmt(event.target.value);\n                      updatePremiumToPay(event.target.value);\n                    } else {\n                      setBuyAmt(new BigNumber(0));\n                      updatePremiumToPay(new BigNumber(0));\n                    }\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Buy\"\n                onClick={() => {\n                  buyOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(buyAmt, decimals).toString(),\n                    toBaseUnitBN(premiumToPay, 18).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label=\"Cost:\" amt={premiumToPay} symbol=\"\" />\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={sellAmt}\n                  onChange={(event) => {\n                    if (event.target.value) {\n                      setSellAmt(event.target.value);\n                      updatePremiumReceived(event.target.value);\n                    } else {\n                      setSellAmt(new BigNumber(0));\n                      updatePremiumReceived(new BigNumber(0));\n                    }\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setSellAmt(tokenBalance);\n                    updatePremiumReceived(tokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Sell\"\n                onClick={() => {\n                  sellOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(sellAmt, decimals).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label=\"Premium\" amt={premiumReceived} />\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nOptionExchange.propTypes = {\n  symbol: PropTypes.string.isRequired,\n  tokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  token: PropTypes.string.isRequired,\n  exchange: PropTypes.string.isRequired,\n  decimals: PropTypes.number.isRequired,\n};\n\nexport default OptionExchange;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconEthereum,\n} from '@aragon/ui';\nimport { addLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\n\n/**\n *\n * @param {{\n * poolTokenBalance: BigNumber,\n * poolETHBalance:BigNumber,\n * liquidityTokenSupply: BigNumber,\n * userTokenBalance: BigNumber,\n * userETHBalance:BigNumber\n * uniswapExchange: string\n * }} param0\n */\nfunction AddLiquidity({\n  otoken,\n  otokenSymbol,\n  otokenDecimals,\n  userTokenBalance,\n  userETHBalance,\n  uniswapExchange,\n  poolTokenBalance,\n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply,\n}) {\n  const SLIPPAGE_RATE = 2;\n\n\n  const [amtETHToAdd, setAmtETHToAdd] = useState(new BigNumber(0));\n  const [amtTokenToAdd, setAmtTokenToAdd] = useState(new BigNumber(0));\n\n  const liquidityMinted = (liquidityTokenSupply.times(amtETHToAdd)).div(poolETHBalance);\n  const liquidityMintedMin = (liquidityMinted.times(new BigNumber(100 - SLIPPAGE_RATE))).div(new BigNumber(100));\n  const ethToTokenRatio = poolETHBalance.div(poolTokenBalance);\n  const tokenToEthRatio = poolTokenBalance.div(poolETHBalance);\n\n  const onChangeETHAmtToSend = (ethAmt) => {\n    if (!ethAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return;\n    }\n\n    const newTokenAmt = (new BigNumber(ethAmt).times(tokenToEthRatio));\n    setAmtETHToAdd(new BigNumber(ethAmt));\n    setAmtTokenToAdd(newTokenAmt);\n  };\n\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return;\n    }\n\n    const newEthAmt = new BigNumber(tokenAmt).times(ethToTokenRatio);\n    setAmtETHToAdd(newEthAmt);\n    setAmtTokenToAdd(new BigNumber(tokenAmt));\n  };\n\n  return (\n    <Box heading=\"Add Liquidity\">\n      <div style={{ display: 'flex' }}>\n        {/* Pool Status */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset=\"ETH Balance\" balance={userETHBalance} />\n        </div>\n        {/* Add Liquidity too pool */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <TextInput\n                  adornmentPosition=\"end\"\n                  adornment={otokenSymbol}\n                  type=\"number\"\n                  wide\n                  value={amtTokenToAdd.toNumber()}\n                  onChange={(event) => {\n                    onChangeTokenAmtToSend(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    onChangeTokenAmtToSend(userTokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment={<IconEthereum />}\n                type=\"number\"\n                wide\n                value={amtETHToAdd.toNumber()}\n                onChange={(event) => {\n                  onChangeETHAmtToSend(event.target.value);\n                }}\n              />\n              <PriceSection label=\"Mint\" amt={liquidityMinted} symbol=\"Pool Tokens\" />\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Add Liquidity\"\n                onClick={() => {\n                  const maxToken = toBaseUnitBN(amtTokenToAdd, otokenDecimals).toString();\n                  const minLiquidity = toBaseUnitBN(liquidityMintedMin, liquidityTokenDecimals).toString();\n                  const ethWei = toBaseUnitBN(amtETHToAdd, 18).toString();\n                  addLiquidity(\n                    otoken,\n                    uniswapExchange,\n                    maxToken,\n                    minLiquidity,\n                    ethWei,\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nAddLiquidity.propTypes = {\n  otoken: PropTypes.string.isRequired,\n  otokenSymbol: PropTypes.string.isRequired,\n  otokenDecimals: PropTypes.number.isRequired,\n  userTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  userETHBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n  poolTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  poolETHBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  liquidityTokenDecimals: PropTypes.number.isRequired,\n  liquidityTokenSupply: PropTypes.instanceOf(BigNumber).isRequired,\n};\n\nexport default AddLiquidity;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box, TextInput, Button, IconCircleMinus, IconFundraising,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { removeLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\n\n/**\n *\n * @param {{\n *  otokenDecimals: number,\n *  liquidityTokenDecimals: number,\n *  otokenSymbol: string,\n *  uniswapExchange: string\n *  userliquidityTokenBalance: BigNumber\n *  poolTokenBalance: BigNumber\n *  poolETHBalance: BigNumber\n *  liquidityTokenDecimals: BigNumber\n *  liquidityTokenSupply: BigNumber\n *\n * }} param0\n */\nfunction RemoveLiquidity({\n  otokenSymbol,\n  otokenDecimals,\n  userliquidityTokenBalance,\n  uniswapExchange,\n  poolTokenBalance,\n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply,\n}) {\n  const SLIPPAGE_RATE = 2;\n\n  const [amtLiquidityTokenToSell, setAmtLiquidityTokenToSell] = useState(new BigNumber(0));\n\n  const poolPortion = amtLiquidityTokenToSell.div(liquidityTokenSupply);\n  const estETHRecieved = poolETHBalance.times(poolPortion);\n  const estOTokenReceived = poolTokenBalance.times(poolPortion);\n\n  const minETHReceived = estETHRecieved.times(new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100));\n  const minTokenReceived = estOTokenReceived.times(new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100));\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtLiquidityTokenToSell(new BigNumber(0));\n      return;\n    }\n    const tokenAmtBN = new BigNumber(tokenAmt);\n    setAmtLiquidityTokenToSell(tokenAmtBN);\n  };\n\n  return (\n    <Box heading=\"Remove Liquidity\">\n      <div style={{ display: 'flex' }}>\n        {/* Pool Token in Hold */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset=\"Pool Token Balance\" balance={userliquidityTokenBalance} />\n        </div>\n        {/* Remove */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment={<IconFundraising />}\n                type=\"number\"\n                wide\n                value={amtLiquidityTokenToSell.toNumber()}\n                onChange={(event) => {\n                  onChangeTokenAmtToSend(event.target.value);\n                }}\n              />\n              <MaxButton\n                onClick={() => setAmtLiquidityTokenToSell(userliquidityTokenBalance)}\n              />\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <PriceSection label=\"You get\" amt={estETHRecieved} symbol=\"ETH\" />\n                <PriceSection label=\"+\" amt={estOTokenReceived} symbol={otokenSymbol} />\n              </>\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Remove Liquidity\"\n                onClick={() => {\n                  const amt = toBaseUnitBN(amtLiquidityTokenToSell, liquidityTokenDecimals).toString();\n                  const min_eth = toBaseUnitBN(minETHReceived, 18).toString();\n                  const min_token = toBaseUnitBN(minTokenReceived, otokenDecimals).toString();\n\n                  removeLiquidity(\n                    uniswapExchange,\n                    amt,\n                    min_eth,\n                    min_token,\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nRemoveLiquidity.propTypes = {\n  otokenSymbol: PropTypes.string.isRequired,\n  otokenDecimals: PropTypes.number.isRequired,\n  userliquidityTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n  poolTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  poolETHBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  liquidityTokenDecimals: PropTypes.number.isRequired,\n  liquidityTokenSupply: PropTypes.instanceOf(BigNumber).isRequired,\n};\n\nexport default RemoveLiquidity;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  getTokenBalance, getBalance, getTotalSupply,\n} from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\n\nimport { allOptions } from '../../constants/options';\n\nimport DashBoard from './Header';\nimport OptionExchange from './OptionExchange';\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity';\n\nimport tracker from '../../utils/tracker';\n\nfunction UniswapPool({ user }) {\n  const liquidityTokenDecimals = 18;\n\n  const { token } = useParams();\n  tracker.pageview(`trade/${token}`);\n  const option = allOptions.find((o) => o.addr === token);\n  const {\n    uniswapExchange, decimals, symbol, exchange,\n  } = option;\n\n  const [poolTokenBalance, setPoolTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [poolETHBalance, setPoolETHBalance] = useState(new BigNumber(0));\n  const [userETHBalance, setUserETHBalance] = useState(new BigNumber(0));\n\n  const [userliquidityTokenBalance, setUserLiquidityTokenBalance] = useState(new BigNumber(0));\n  const [liquidityTokenSupply, setLiquidityTokenSupply] = useState(new BigNumber(0));\n\n  // Update Uniswap Pool Info\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      const [exTokenBalance, exchagneETHBalance, liqTokenTotalSupply] = await Promise.all([\n        getTokenBalance(token, uniswapExchange),\n        getBalance(uniswapExchange),\n        getTotalSupply(uniswapExchange),\n      ]);\n      // const { decimals: liqTokenDecimal, totalSupply: liqTokenTotalSupply } = liquidityTokenInfo;\n      const exchangeTokenBalance = toTokenUnitsBN(exTokenBalance, decimals);\n      if (!isCancelled) {\n        setLiquidityTokenSupply(toTokenUnitsBN(liqTokenTotalSupply, liquidityTokenDecimals));\n        setPoolETHBalance(new BigNumber(exchagneETHBalance));\n        setPoolTokenBalance(exchangeTokenBalance);\n      }\n    }\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 15000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, token, uniswapExchange]);\n\n  // Update User balances\n  useEffect(() => {\n    if (user === '') return;\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [tokenBalance, userEthBalance, liqTokenBalance] = await Promise.all([\n        getTokenBalance(token, user),\n        getBalance(user),\n        getTokenBalance(uniswapExchange, user),\n      ]);\n\n      const userOTknBalanceBN = toTokenUnitsBN(tokenBalance, decimals);\n      const userLiqTknBalanceBN = toTokenUnitsBN(liqTokenBalance, liquidityTokenDecimals);\n      if (!isCancelled) {\n        setUserLiquidityTokenBalance(userLiqTknBalanceBN);\n        setUserETHBalance(new BigNumber(userEthBalance));\n        setUserTokenBalance(userOTknBalanceBN);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, liquidityTokenDecimals, token, uniswapExchange, user]);\n\n  return (\n    <>\n      <Header primary=\"Exchange\" />\n\n      <DashBoard\n        user={user}\n        symbol={symbol}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        uniswapExchange={uniswapExchange}\n      />\n\n      <OptionExchange\n        symbol={symbol}\n        tokenBalance={userTokenBalance}\n        token={token}\n        exchange={exchange}\n        decimals={decimals}\n      />\n\n      <Header primary=\"Provide Liquidity\" />\n\n      <AddLiquidity\n        user={user}\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply} // in base unit\n      />\n\n      <RemoveLiquidity\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply} // in base unit\n      />\n    </>\n  );\n}\n\nUniswapPool.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default UniswapPool;\n","import React from 'react';\n\nimport { Link } from '@aragon/ui';\nimport PropTypes from 'prop-types';\n\nfunction Footer({ theme }) {\n  const style = {\n    backgroundColor: theme === 'light' ? '#F8F8F8' : '#35425e',\n    textAlign: 'center',\n    padding: '17px',\n    position: 'fixed',\n    left: '0',\n    bottom: '0',\n    height: '50px',\n    width: '100%',\n    fontSize: '12px',\n  };\n\n  return (\n    <div style={style}>\n      Powered By\n      <Link external href=\"https://opyn.co/#/\">\n        Opyn\n      </Link>\n      {', '}\n      <Link external href=\"https://ui.aragon.org/\">\n        Aragon UI\n      </Link>\n      ,\n      {', '}\n      <Link external href=\"https://www.blocknative.com/\">\n        Blocknative\n      </Link>\n      {'. '}\n      <Link external href=\"https://www.kollateral.co/\">\n        Kollateral\n      </Link>\n      {'. '}\n      Hosted on\n      <Link external href=\"https://github.com/antoncoding/opyn-liquidator\">\n        GitHub\n      </Link>\n      .\n    </div>\n  );\n}\n\nFooter.propTypes = {\n  theme: PropTypes.string.isRequired,\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Main } from '@aragon/ui';\nimport { updateModalMode } from './utils/web3';\nimport { storePreference, getPreference } from './utils/storage';\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport AllOptoins from './components/AllContracts';\nimport Trade from './components/Trade';\nimport MyVaults from './components/MyVaults';\nimport OptionPage from './components/OptionPage';\nimport ManageVault from './components/ManageVault';\nimport Uniswap from './components/UniswapTrade';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const storedTheme = getPreference('theme', 'light');\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (newTheme) => {\n    setTheme(newTheme);\n    updateModalMode(newTheme);\n    storePreference('theme', newTheme);\n  };\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          {/* All Options */}\n          <Route path=\"/option/:token\">\n            <OptionPage user={user} />\n          </Route>\n          <Route path=\"/options/\">\n            <AllOptoins />\n          </Route>\n          {/* My Vaults */}\n          <Route path=\"/myvaults\">\n            <MyVaults user={user} />\n          </Route>\n          <Route path=\"/manage/:token/:owner\">\n            <ManageVault user={user} />\n          </Route>\n          {/* Trade */}\n          <Route path=\"/trade/:token/\"><Uniswap user={user} /></Route>\n          <Route path=\"/trade/\">\n            <Trade />\n          </Route>\n          {/* HomePage */}\n          <Route path=\"/\"><HomePage /></Route>\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}