{"version":3,"sources":["components/NavBar/ConnectButton.js","components/NavBar/SettingsButton.js","components/NavBar/index.js","constants/addresses.js","components/Dashboard/index.js","utils/blockNative.js","utils/web3.js","utils/common.js","utils/infura.js","components/TokenView/ManageModal.js","utils/graph.js","components/TokenView/VaultOwnerList.js","components/TokenView/VaultInfoBox.js","components/TokenView/index.js","App.js","serviceWorker.js","index.js"],"names":["ConnectButton","props","connectWeb3","a","window","ethereum","enable","accounts","setState","isConnected","account","state","this","entity","connectedAccount","icon","label","onClick","Component","ChangeMode","theme","updateTheme","NavBar","history","useHistory","useState","isHome","updateIsHome","useEffect","home","location","pathname","primary","addr","push","secondary","supportedList","name","DashBoard","fields","entries","entriesPerPage","renderEntry","shorten","goToToken","notify","Notify","dappId","networkId","oTokenABI","require","getAccounts","liquidate","oTokenAddr","owner","liquidateAmt","web3","Web3","oToken","eth","Contract","methods","send","from","on","hash","addETHCollateral","ethAmount","value","utils","toWei","formatDigits","num","percision","parseFloat","toFixed","optionContractABI","oracleABI","Promise","getOptionContractDetail","all","getERC20Info","getBalance","getAssetsAndOracle","tokenInfo","balance","optionInfo","decimals","totalSupply","oracle","underlying","strike","strikePrice","minRatio","getVaults","owners","oTokenContract","map","getVault","call","res","collateral","fromWei","oTokensIssued","owned","filter","vault","vaults","getVaultsWithLiquidatable","maxLiquidatable","isUnsafe","maxOTokensLiquidatable","NewVaults","sort","compare","getMaxLiquidatable","liquidator","maxVaultLiquidatable","balanceOf","userbalance","Math","min","parseInt","toString","getDecimals","address","token","totalSupplyDecimals","COMPOUND_ORACLE","minCollateralizationRatio","minRatioObj","strikePriceObj","getPrice","oracleAddr","price","ownerA","ownerB","rateA","ratio","rateB","comparison","PositionModal","tokenAddress","vaultOwner","isSafe","opened","setOpened","setTokenDecimals","addValue","setAddValue","setLiquidateAmt","_decimals","width","innerWidth","padding","visible","onClose","heading","type","adornment","adornmentPosition","onChange","event","target","disabled","opynGraphEndpoint","getAllVaultOwners","options","method","headers","body","JSON","stringify","query","fetch","json","actions","data","vaultOpenedActions","action","Set","VaultOwnerList","isLoading","componentDidMount","setInterval","updateInfo","ethValueInStrike","vaultDetail","valueProtectingInEth","vaultWithLiquidatable","status","background","color","mode","VaultBox","supply","tokenName","TokenView","useParams","App","setTheme","path","children","Dashboard","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.50a022ee.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, IdentityBadge, IconConnect } from '@aragon/ui';\n\nclass ConnectButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConnected: false,\n      account: '',\n    };\n  }\n\n  connectWeb3 = async () => {\n    const accounts = await window.ethereum.enable();\n    this.setState({\n      isConnected: true,\n      account: accounts[0],\n    });\n    return true;\n  };\n\n  render() {\n    return this.state.isConnected ? (\n      <Button>\n        <IdentityBadge entity={this.state.account} connectedAccount />\n      </Button>\n    ) : (\n      <Button \n        icon={<IconConnect/>} \n        label={'Connect'} \n        onClick={this.connectWeb3}/> \n    );\n  }\n}\n\nexport default ConnectButton;\n","import React from 'react';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\nfunction ChangeMode({theme, updateTheme}) {\n\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark')\n    else updateTheme('light')\n  }\n\n    return (\n      <Button \n      icon={ theme === 'dark' ? <IconStar/> : <IconStarFilled/>} \n      onClick={handleChangeTheme}\n      label={ 'Theme' }\n      />\n    );\n  \n}\n\nexport default ChangeMode;\n","import React, {useEffect, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SettingsButton'\nimport { Bar, BackButton } from '@aragon/ui';\n\nfunction NavBar({theme, updateTheme}) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true)\n  \n  useEffect(()=>{\n    const home = history.location.pathname === '/';\n    updateIsHome(home)\n  }, [history.location.pathname]);\n  \n  const handleBack = (addr) => {\n    history.push(`/`);\n  };\n\n  return (\n    \n    <Bar \n      primary={\n        isHome ?\n        <></> :\n        <BackButton onClick={handleBack}/>\n      }\n      secondary={\n        <>\n        {/* <Switch\n          checked={theme==='dark'}\n          onChange={handleChangeTheme}\n        ></Switch> */}\n        <ConnectButton/>\n        <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      }\n    >\n      \n    </Bar>\n  );\n}\n\nexport default NavBar;\n","export const supportedList = [\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    name: 'cDai Insurance',\n  },\n  {\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    name: 'cDai Insurance',\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    name: 'cUSDC Insurance'\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    name: 'y.curve.fi Insurance'\n  },\n]","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { supportedList } from '../../constants/addresses';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\n\nfunction DashBoard() {\n  const history = useHistory();\n  const goToToken = (addr) => {\n    history.push(`/token/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='All Insurances' />\n      <DataView\n        fields={['Name', 'Contract', 'Detail']}\n        entries={supportedList}\n        entriesPerPage={6}\n        renderEntry={({ addr, name }) => {\n          return [\n            <>{name}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> Manage </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default DashBoard;\n","import Notify from \"bnc-notify\"\n\nexport const notify = Notify({\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06',\n  networkId: 1\n});\n\n","import Web3 from 'web3'\nimport { notify } from './blockNative'\nconst oTokenABI = require('../constants/abi/OptionContract.json')\n\nexport const getAccounts = async() => {\n  const accounts = await window.ethereum.enable();\n  return accounts\n}\n\nexport const liquidate = async(oTokenAddr, owner, liquidateAmt) => {\n  \n  const accounts = await window.ethereum.enable();\n  const web3 = new Web3(window.ethereum);\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr)\n  \n  await oToken.methods.liquidate(owner, liquidateAmt).send({from: accounts[0]})\n    .on('transactionHash', (hash)=>{\n      notify.hash(hash)\n    })\n}\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmount) => {\n  const accounts = await window.ethereum.enable();\n  const web3 = new Web3(window.ethereum);\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr)\n  await oToken.methods.addETHCollateral(owner).send({from: accounts[0], value: web3.utils.toWei(ethAmount)})\n    .on('transactionHash', (hash)=>{\n      notify.hash(hash)\n    })\n}","export function formatDigits(num, percision) {\n  return parseFloat(num).toFixed(percision)\n}","import Web3 from 'web3';\nimport { formatDigits } from './common'\n\nconst optionContractABI = require('../constants/abi/OptionContract.json')\nconst oracleABI = require('../constants/abi/Oracle.json')\n\nconst Promise = require('bluebird');\nconst web3 = new Web3('https://mainnet.infura.io/v3/44fd23cda65746a699a5d3c0e2fa45d5');\n\n/**\n * Call only once\n * @param {*} oToken\n */\nexport const getOptionContractDetail = async (oToken) => {\n  const [tokenInfo, balance, optionInfo] = await Promise.all([\n    getERC20Info(oToken),\n    getBalance(oToken), \n    getAssetsAndOracle(oToken)]\n  );\n  return {\n    name: tokenInfo.name,\n    decimals: tokenInfo.decimals,\n    totalSupply: tokenInfo.totalSupply,\n    oracle: optionInfo.oracle,\n    underlying: optionInfo.underlying,\n    strike: optionInfo.strike,\n    strikePrice: optionInfo.strikePrice,\n    minRatio: optionInfo.minRatio,\n    balance,\n  };\n};\n\n/**\n *\n * @param {Array<string>} owners\n * @param {string} oToken\n */\nexport const getVaults = async (owners, oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n\n  const vaults = await Promise.map(owners, async (owner) => {\n    const res = await oTokenContract.methods.getVault(owner).call();\n    const collateral = formatDigits(web3.utils.fromWei(res[0]), 6);\n    const oTokensIssued = res[1];\n    const underlying = res[2];\n    const owned = res[3];\n    return { collateral, oTokensIssued, underlying, owned, owner };\n  }).filter((vault) => vault.owned && parseFloat(vault.collateral) > 0)\n  \n    return vaults \n};\n\nexport const getVaultsWithLiquidatable = async(vaults, oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const NewVaults = await Promise.map(vaults, async(vault) => {\n    let maxLiquidatable = 0\n    if(vault.isUnsafe) {\n      maxLiquidatable = await oTokenContract.methods\n        .maxOTokensLiquidatable(vault.owner)\n        .call();\n    }\n    vault.maxLiquidatable = maxLiquidatable\n    return vault\n  })\n  return NewVaults.sort(compare);\n}\n\nexport const getMaxLiquidatable = async(oToken, owner, liquidator) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable =  await oTokenContract.methods\n    .maxOTokensLiquidatable(owner)\n    .call();\n      \n  const userbalance = liquidator \n    ? await oTokenContract.methods.balanceOf(liquidator).call()\n    : 0\n  \n  const maxLiquidatable = Math.min(\n      parseInt(userbalance, 10), \n      parseInt(maxVaultLiquidatable, 10)\n  ).toString();\n  \n  return  parseInt(maxLiquidatable)\n  \n}\n\nexport const getDecimals = async(oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const decimals = await oTokenContract.methods.decimals().call()\n  return parseInt(decimals)\n}\n\nexport const getERC20Info = async(address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const name = await token.methods.name().call();\n  const totalSupplyDecimals = await token.methods.totalSupply().call();\n  const decimals = await token.methods.decimals().call();\n  const totalSupply = parseInt(totalSupplyDecimals) / 10 ** parseInt(decimals);\n  return { name, decimals, totalSupply }\n}\n\nexport const getAssetsAndOracle = async(address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const [\n    oracle, \n    underlying, \n    strike, \n    minRatioObj, \n    strikePriceObj\n  ] = await Promise.all([\n    token.methods.COMPOUND_ORACLE().call(),\n    token.methods.underlying().call(),\n    token.methods.strike().call(),\n    token.methods.minCollateralizationRatio().call(),\n    token.methods.strikePrice().call()\n  ]) \n  const strikePrice = strikePriceObj[0] * (10 ** strikePriceObj[1])\n  const minRatio =  minRatioObj[0] * (10 ** minRatioObj[1])\n  return {  underlying, strike, minRatio, strikePrice, oracle }\n}\n\n/**\n * Get balance of accounts\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\nexport const getPrice = async (oracleAddr, token) => {\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return web3.utils.fromWei(price); // price base eth/ per token\n};\n\n\nfunction compare(ownerA, ownerB) {\n  const rateA = ownerA.ratio;\n  const rateB = ownerB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n","import React, { useState, useEffect } from 'react';\n\nimport { addETHCollateral, liquidate, getAccounts } from '../../utils/web3';\nimport { getMaxLiquidatable, getDecimals } from '../../utils/infura';\n\nimport {\n  Button,\n  Modal,\n  Box,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconFundraising,\n} from '@aragon/ui';\n\nfunction PositionModal({ tokenAddress, vaultOwner, collateral, isSafe, oTokensIssued, ratio }) {\n  const [opened, setOpened] = useState(false);\n  const [decimals, setTokenDecimals] = useState(0)\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(\n    () =>\n      async function() {\n        const accounts = await getAccounts();\n        const maxLiquidatable = await getMaxLiquidatable(tokenAddress, vaultOwner, accounts[0]);\n        const _decimals = await getDecimals(tokenAddress)\n        setTokenDecimals(_decimals)\n        setLiquidateAmt(maxLiquidatable / 10 ** _decimals );\n      }\n  );\n\n  return (\n    <>\n      <Button onClick={open} label='Manage'></Button>\n      <Modal \n        width={Math.min(window.innerWidth - 48, 750)}\n      padding={50} visible={opened} onClose={close}>\n        <Box heading={'Owner'}>\n          <IdentityBadge entity={vaultOwner} shorten={false} />\n        </Box>\n        <br></br>\n        <Box heading={'Add Collateral'}>\n          <TextInput\n            type='number'\n            adornment={<IconEthereum />}\n            adornmentPosition='end'\n            value={addValue}\n            onChange={(event) => {\n              setAddValue(event.target.value);\n            }}\n          />\n          <Button\n            label='Add Collateral'\n            onClick={() => {\n              addETHCollateral(tokenAddress, vaultOwner, addValue);\n            }}\n          />\n        </Box>\n\n        <br></br>\n        <Box heading={'Liquidate'}>\n          <TextInput\n            type='number'\n            adornment={<IconFundraising />}\n            adornmentPosition='end'\n            value={ liquidateAmt }\n            onChange={(event) => {\n              setLiquidateAmt(event.target.value);\n            }}\n          />\n          <Button\n            disabled={isSafe}\n            label='Liquidate'\n            onClick={() => {\n              liquidate(tokenAddress, vaultOwner, liquidateAmt * (10 ** decimals) );\n            }}\n          />\n        </Box>\n      </Modal>\n    </>\n  );\n}\n\nexport default PositionModal;\n","// const prefix = 'https://cors-anywhere-anton.herokuapp.com/';\nconst opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn'\n\n/**\n * @return {Promise<Array<string>>}\n */\nexport async function getAllVaultOwners(){\n  const query = `{\n    vaultOpenedActions(first: 100, ) {\n      owner\n    }\n  }`\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  }\n  const res = await fetch(opynGraphEndpoint,  options)\n  const actions = (await res.json()).data.vaultOpenedActions\n  const owners = actions.map(action => action.owner)\n  return [...new Set(owners)]\n\n  // return [\"0xfb338c5fe584c026270e5ded1c2e0aca786a22fe\" ,\"0x7e5ce10826ee167de897d262fcc9976f609ecd2b\" ,\"0xabc04058e20c9cba4f360244648fedf30cebc3b4\" ,\"0x97c7c0c55a4ae424e9164bbc5cf8aa139cae5eec\" ,\"0x78353498a7c2741d52de5ef45e58bd17148a6297\" ,\"0x81bb32e4a7e4d0500d11a52f3a5f60c9a6ef126c\" ,\"0xd4c80637f45a55b5e1afa9cd0c935395063d4523\" ,\"0x855328ee5e94924cb83b267f25a513c2a2fc3e5e\"]\n}","import React, { Component } from 'react';\nimport {\n  Tag,\n  DataView,\n  IdentityBadge,\n  // LinkBase\n} from '@aragon/ui';\nimport PositsionModal from './ManageModal';\nimport { getAllVaultOwners } from '../../utils/graph';\nimport {\n  getOptionContractDetail,\n  getVaults,\n  getPrice,\n  getVaultsWithLiquidatable,\n} from '../../utils/infura';\n// import { liquidate } from '../../utils/web3';\nimport { formatDigits } from '../../utils/common';\n\nclass VaultOwnerList extends Component {\n  state = {\n    isLoading: true,\n    strikePrice: '0',\n    vaults: [], // { account, maxLiquidatable, collateral, oTokensIssued, ratio } []\n  };\n\n  componentDidMount = async () => {\n    setInterval(this.updateInfo, 3000)\n  };\n\n  updateInfo = async() => {\n    const owners = await getAllVaultOwners();\n    const { strike, decimals, minRatio, strikePrice, oracle } = await getOptionContractDetail(\n      this.props.oToken\n    );\n    const vaults = await getVaults(owners, this.props.oToken);\n\n    const ethValueInStrike = 1 / (await getPrice(oracle, strike));\n    const vaultDetail = vaults.map((vault) => {\n      const valueProtectingInEth = parseFloat(strikePrice) * vault.oTokensIssued;\n      const ratio = formatDigits(\n        (parseFloat(vault.collateral) * ethValueInStrike) / valueProtectingInEth,\n        4\n      );\n\n      const oTokensIssued = formatDigits(parseInt(vault.oTokensIssued) / 10 ** decimals, 4);\n      vault.oTokensIssued = oTokensIssued;\n      vault.ratio = ratio;\n      vault.isSafe = ratio > minRatio;\n      return vault;\n    });\n\n    const vaultWithLiquidatable = await getVaultsWithLiquidatable(vaultDetail);\n    this.setState({\n      vaults: vaultWithLiquidatable,\n      isLoading: false,\n      strikePrice,\n    });\n  }\n\n  render() {\n    return (\n      <DataView\n        heading={<h3> All Vaults </h3>}\n        status={this.state.isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', 'Manage']}\n        entries={this.state.vaults}\n        entriesPerPage={6}\n        renderEntry={({ owner, collateral, oTokensIssued, ratio, isSafe }) => {\n          return [\n            <IdentityBadge entity={owner} shorten={true} />,\n            collateral,\n            oTokensIssued,\n            ratio,\n            isSafe ? (\n              ratio < 1.7 ? (\n                <Tag background='#FFEBAD' color='#FEC100'>\n                  {' '}\n                  Danger{' '}\n                </Tag>\n              ) : (\n                <Tag mode='new'> safe </Tag>\n              )\n            ) : (\n              <Tag color='#E34343' background='#FFC6C6'>\n                Unsafe!\n              </Tag>\n            ),\n            <PositsionModal\n              tokenAddress={this.props.oToken}\n              vaultOwner={owner}\n              collateral={collateral}\n              isSafe={isSafe}\n              oTokensIssued={oTokensIssued}\n              ratio={ratio}\n            />,\n          ];\n        }}\n      />\n    );\n  }\n}\n\nexport default VaultOwnerList;\n","import React, { Component } from 'react';\nimport { Box, Split, Header, IdentityBadge } from '@aragon/ui';\nimport { getOptionContractDetail } from '../../utils/infura';\n\nclass VaultBox extends Component {\n  state = {\n    name: 'oToken',\n    balance: '0',\n    supply: '0',\n  };\n\n  async componentDidMount() {\n    const { balance, totalSupply, name } = await getOptionContractDetail(this.props.oToken);\n    this.setState({ balance, supply: totalSupply, name });\n  }\n\n  render() {\n    return (\n      <>\n        <Header\n          primary={this.state.name}\n        />\n        <Split\n          primary={\n            <Split\n              primary={\n                <Box heading={'contract'} padding={30}>\n                  <IdentityBadge entity={this.props.oToken} shorten={false} />\n                </Box>\n              }\n              secondary={\n                <Box heading={'balance'} padding={30}>\n                  {this.state.balance}\n                </Box>\n              }\n            />\n          }\n          secondary={\n            <Box heading={'supply'} padding={30}>\n              {this.state.supply} {this.props.tokenName}\n            </Box>\n          }\n        />\n      </>\n    );\n  }\n}\n\nexport default VaultBox;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport VaultOwnerList from './VaultOwnerList';\nimport Overview from './VaultInfoBox';\n\nfunction TokenView() {\n  let { addr } = useParams();\n  return (\n    <>\n      <Overview oToken={addr} />\n      <VaultOwnerList oToken={addr} />\n    </>\n  );\n}\n\nexport default TokenView;\n","import React, {useState} from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Dashboard from './components/Dashboard';\nimport TokenView from './components/TokenView';\nimport { Main } from '@aragon/ui';\nimport './App.css';\n\nfunction App() {\n  const [theme, setTheme] = useState('light')\n  return (\n    <Router>\n      <Main theme={theme}>\n        <NavBar theme={theme} updateTheme={setTheme}/>\n\n        <Switch>\n          <Route path='/token/:addr' children={<TokenView />} />\n          <Route path='/' children={<Dashboard />} />\n        </Switch>\n      </Main>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}