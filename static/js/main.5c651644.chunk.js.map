{"version":3,"sources":["utils/web3.js","utils/blockNative.js","utils/infura.js","constants/contracts.js","components/NavBar/ConnectButton.js","components/NavBar/SettingsButton.js","components/NavBar/index.js","components/HomePage/index.js","components/common/AddressBlock.js","components/common/BalanceBlock.js","components/common/RatioTag.js","components/common/SectionTitle.js","components/common/MaxButton.js","components/common/HelpText.js","components/common/PriceSection.js","components/common/Comment.js","components/common/VaultButton.js","components/AllContracts/index.js","components/Trade/index.js","utils/graph.js","utils/number.js","utils/calculation.js","components/MyVaults/index.js","components/OptionPage/ExerciseModal.js","components/OptionPage/VaultModal.js","components/OptionPage/VaultsList.js","components/OptionPage/OptionInfoBox.js","components/OptionPage/index.js","components/ManageVault/HeaderDashboard.js","components/ManageVault/CollateralManagement.js","components/ManageVault/IssuedTokenManagement.js","components/ManageVault/Liquidation.js","components/ManageVault/Exercise.js","components/ManageVault/index.js","components/ManagePool/Header.js","components/ManagePool/OptionExchange.js","components/ManagePool/AddLiquidity.js","components/ManagePool/RemoveLiquidity.js","components/ManagePool/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["web3","notify","Notify","dappId","networkId","optionContractABI","require","optionExchangeABI","oracleABI","Web3","process","ETH_ADDR","getTokenBalance","erc20Token","user","a","oTokenContract","eth","Contract","methods","balanceOf","call","balance","getDecimals","decimals","parseInt","getERC20Symbol","symbol","getERC20Info","address","token","totalSupply","totalSupplyDecimals","getMaxLiquidatable","oToken","vaultOwner","maxOTokensLiquidatable","maxVaultLiquidatable","getUnderlyingRequiredToExercise","tokenToExercise","underlyingRequiredToExercise","underlyringRequired","getAllowance","contract","spender","allowance","getBalance","utils","fromWei","getPrice","oracleAddr","oracle","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","paymentToken","exchange","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","options","addr","title","name","collateral","underlying","strike","strikePrice","minRatio","uniswapExchange","expiry","ETH_ADDRESS","oTokenABI","exchangeABI","uniswapExchangeABI","UINT256_MAX","storedTheme","window","localStorage","getItem","onboard","Onboard","darkMode","subscriptions","wallet","provider","walletSelect","description","wallets","walletName","infuraKey","apiKey","updateModalMode","theme","config","connect","walletCheck","getState","disconnect","walletReset","checkConnectedAndGetAddress","checked","liquidate","oTokenAddr","owner","liquidateAmt","account","send","from","on","hash","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmt","value","toWei","toString","addERC20Collateral","collateralAmt","collateralAmtBN","BigNumber","lt","collateralToken","approve","removeCollateral","redeem","redeemVaultBalance","exercise","amountToExercise","vaults","underlyingRequired","underlyingIsETH","amt","openVault","buyOTokensFromExchange","buyOTokens","sellOTokensFromExchange","sellOTokens","addLiquidity","uniswapAddr","maxToken","minLiquidity","ethInWei","deadline","Math","ceil","Date","now","removeLiquidity","pool_token_amount","min_eth_wei","min_tokens","ConnectButton","setUser","useState","isConnected","setIsConnected","connectWeb3","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","padding","entity","icon","label","ChangeMode","updateTheme","LinkButton","paddingLeft","opacity","fontSize","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","height","goBack","push","secondary","MainButton","iconUrl","width","alt","src","HomePage","display","alignItems","marginRight","marginLeft","AddressBlock","shorten","BalanceBlock","asset","integer","digits","str","split","length","RatioTag","isSafe","ratio","useCollateral","background","color","mode","SectionTitle","MaxButton","HelperText","parseFloat","toFixed","PriceSection","forceDisplay","Comment","text","ManageVaultButton","goToManagePage","OpenVaultButton","AllContracts","fields","entries","entriesPerPage","renderEntry","goToToken","goToTrade","getAllVaultsForOption","optionAddress","query","postQuery","response","data","getAllVaultsForUser","actions","getLiquidationHistory","liquidationActionsQuery","liquidateActions","getExerciseHistory","option","exerciseActions","method","headers","body","JSON","stringify","fetch","res","json","toBaseUnitBN","rawAmt","raw","base","decimalsBN","times","pow","integerValue","toTokenUnitsBN","tokenAmount","tokenDecimals","_amt","_digits","div","formatDigits","num","percision","timeSince","timeStamp","secondsPast","getTime","ts","getDate","toDateString","match","replace","getFullYear","compareVaultRatio","vaultA","vaultB","rateA","rateB","comparison","compareVaultIssued","amountA","oTokensIssued","amountB","calculateStrikeValueInCollateral","collateralDecimals","undefined","strikeValueInWei","strikeValueInCollateral","collateralValueInWei","calculateRatio","tokenIssued","Infinity","colalteralBN","tokenIssuedBN","strikePriceBN","toNumber","Promise","MyVaults","opendVaults","setOpenedVaults","tokensToOpen","setTokensToOpen","useMemo","userVaults","openedVaults","notOpenedTokens","map","entry","find","vault","optionsContract","isOpened","collatearlIsETH","oTokenName","sort","paddingBottom","ExerciseModal","underlyingDecimals","underlyingSymbol","userUnderlyingBalance","setUserUnderlyingBalance","userOTokenBalance","setUserOTokenBalance","opened","setOpened","exerciseAmount","setExerciseAmount","setUnderlyringRequired","nonEmptyVaults","filter","selectedIndexes","setSelectedIndexes","selectedHasEnoughCollateral","setHasEnoughCollateral","userUnderlying","checkHasEnoughToken","sumIssued","reduce","accumulator","current","plus","gt","gte","onChangeExerciseAmt","amount","underlyingRawAmt","index","visible","onClose","heading","type","wide","adornment","adornmentPosition","onChange","event","target","renderSelectionCount","count","selection","onSelectEntries","indexes","disabled","vaultowners","VaultModal","collateralIsETH","toast","useToast","addValue","setAddValue","setLiquidateAmt","isCancelled","maxLiquidatable","getData","catch","error","VaultOwnerList","vaultUsesCollateral","isLoading","setIsLoading","vaultsWithDetail","setVaultDetail","page","setPage","updateInfo","vaultDetail","id","setInterval","clearInterval","onPageChange","status","OptionOverview","tokenName","totalCollateral","setTotalCollateral","setTotalSupply","_totalCollateral","rawCollateralBalance","init","OptionPage","useParams","setVaults","setCollateralDecimals","setUnderlyingDecimals","setUnderlyingSymbol","_decimals","all","_symbol","OptionInfoBox","VaultsList","HeaderDashboard","newRatio","tokenInUnit","collateralBalance","CollateralManagement","isOwner","collateralAsset","collateralAssetBalance","strikeValue","setNewRatio","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","collateralSymbol","setCollateralSymbol","updateNewRatio","newCollateral","amtRaw","newCollateralInWei","collateralBalanceRaw","newCollateralWei","minus","minRatioBN","minCollateral","maxToRemove","maxToRemoveInTokenUnit","IssuedTokenManagement","tokenBalance","setIssueAmt","setBurnAmt","newAmt","lte","intputAmt","amountBN","onChangeIssueAmt","maxToIssueRaw","maxToIssue","onChangeBurnAmt","issued","maxToBurn","LiquidationHistory","userTokenBalance","setMaxLiquidatable","setEntries","amountToLiquidate","setAmtToLiquidate","maxToLiquidate","updateLiquidatable","actionsForThisVault","actionA","actionB","timestamp","updateList","maximum","min","amtToLiquidate","collateralToPay","liquidator","transactionHash","transaction","ExerciseHistory","amtCollateralToPay","oTokensToExercise","exerciser","ManageVault","tabSelected","setTabSelected","setVault","setStrikeValue","setRatio","ownerTokenBalance","setOwnerTokenBalance","setUserTokenBalance","userCollateralAssetBalance","setUserCollateralAssetBalance","noVault","setNoVault","_ownerTokenBalance","_userTokenBalance","_collateralDecimals","_tokenBalance","_ownerTokenBalanceBN","_userTokenBalanceBN","textAlign","end","items","selected","Liquidation","Exercise","poolETHBalance","poolTokenBalance","OptionExchange","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","updatePremiumToPay","butAmountBN","premium","updatePremiumReceived","sellAmountBN","AddLiquidity","otoken","otokenSymbol","otokenDecimals","userETHBalance","liquidityTokenDecimals","liquidityTokenSupply","amtETHToAdd","setAmtETHToAdd","amtTokenToAdd","setAmtTokenToAdd","liquidityMinted","liquidityMintedMin","ethToTokenRatio","tokenToEthRatio","onChangeTokenAmtToSend","tokenAmt","newEthAmt","newTokenAmt","onChangeETHAmtToSend","ethWei","RemoveLiquidity","userliquidityTokenBalance","amtLiquidityTokenToSell","setAmtLiquidityTokenToSell","poolPortion","estETHRecieved","estOTokenReceived","minETHReceived","minTokenReceived","tokenAmtBN","min_eth","min_token","ManagePool","setPoolTokenBalance","setPoolETHBalance","setUserETHBalance","setUserLiquidityTokenBalance","setLiquidityTokenSupply","setLiquidityTokenDecimals","updatePoolInfo","exTokenBalance","exchagneETHBalance","liquidityTokenInfo","liqTokenDecimal","liqTokenTotalSupply","exchangeTokenBalance","updateUserInfo","liqTokenBalance","userLiqTokenBalance","Footer","backgroundColor","position","left","bottom","external","href","App","setTheme","assetsUrl","setItem","path","children","Trade","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.5c651644.chunk.js","sourcesContent":["import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport Onboard from 'bnc-onboard';\n\nimport { notify } from './blockNative';\nimport { getAllowance, getPremiumToPay } from './infura';\nimport { ETH_ADDRESS, DAI, ERC20_Liquidator, AAVE_LENDING, Kollateral_Liquidator, Kollateral_Invoker, KETH } from '../constants/contracts';\n\nconst oTokenABI = require('../constants/abi/OptionContract.json');\nconst exchangeABI = require('../constants/abi/OptionExchange.json');\nconst uniswapExchangeABI = require('../constants/abi/UniswapExchange.json');\nconst aaveABI = require('../constants/abi/LendingPool.json');\nconst invokerABI = require('../constants/abi/KollateralInvoker.json');\n\nconst DEADLINE_FROM_NOW = 60 * 15;\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY\nconst FORTMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY\n\nconst storedTheme = window.localStorage.getItem('theme');\n\nconst onboard = Onboard({\n  darkMode: storedTheme === 'dark',\n  dappId: BLOCKNATIVE_KEY, // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  walletSelect: {\n    description: 'Please select a wallet to connect to Opyn Dashboard',\n    wallets: [\n      { walletName: 'metamask' },\n      {\n        walletName: 'walletConnect',\n        infuraKey: INFURA_KEY,\n      },\n      {\n        walletName: 'fortmatic',\n        apiKey: FORTMATIC_KEY,\n      },\n      { walletName: 'trust' },\n      { walletName: 'coinbase' },\n      { walletName: 'status' },\n    ],\n  },\n});\n\nlet web3;\n\nexport const updateModalMode = async (theme) => {\n  const darkMode = theme === 'dark';\n  onboard.config({ darkMode });\n};\n\nexport const connect = async () => {\n  const selected = await onboard.walletSelect();\n  if (!selected) return false;\n  const checked = await onboard.walletCheck();\n  if (!checked) return false;\n  return onboard.getState().address;\n};\n\nexport const disconnect = async () => {\n  onboard.walletReset();\n};\n\nexport const checkConnectedAndGetAddress = async () => {\n  let checked = false;\n  try {\n    checked = await onboard.walletCheck();\n  } catch (error) {\n    await onboard.walletSelect();\n    checked = await onboard.walletCheck();\n  } finally {\n    if (checked) return onboard.getState().address;\n  }\n};\n\nexport const liquidate = async (oTokenAddr, owner, liquidateAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .liquidate(owner, parseInt(liquidateAmt))\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const aaveLiquidate = async (oTokenAddr, optionExchange, owner) => {\n  const account = await checkConnectedAndGetAddress();\n  const oTokenAddressBytes = web3.utils.hexToBytes(web3.utils.toHex(oTokenAddr));\n  const vaultAddressBytes = web3.utils.hexToBytes(web3.utils.toHex(owner));\n  const data = oTokenAddressBytes.concat(vaultAddressBytes);\n\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const amountOTokens = await oToken.methods.maxOTokensLiquidatable(owner).call();\n\n  const premiumToPay = await getPremiumToPay(\n    optionExchange, // exchange\n    oTokenAddr,\n    amountOTokens,\n    DAI\n  );\n\n  const lendingPool = new web3.eth.Contract(aaveABI, AAVE_LENDING);\n\n  // Use liquidator to liquidate our own position\n  await lendingPool.methods\n    .flashLoan(\n      ERC20_Liquidator,\n      DAI, // _reserve\n      premiumToPay, // amount\n      data\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * \n * @param {string} oTokenAddr \n * @param {string} optionExchange \n * @param {string} owner \n * @param {string} paymentToken payment token address\n */\nexport const kollateralLiquidate = async (oTokenAddr ,optionExchange, owner, paymentToken) => {\n  const account = await checkConnectedAndGetAddress();\n\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const amountOTokens = await oToken.methods.maxOTokensLiquidatable(owner).call();\n\n  if(new BigNumber(amountOTokens).lte(new BigNumber(0))) {\n    throw new Error(`Nothing to liquidate`)\n  }\n\n  const premiumToPay = await getPremiumToPay(\n    optionExchange, // exchange\n    oTokenAddr,\n    amountOTokens,\n    paymentToken === KETH ? ETH_ADDRESS : paymentToken\n  );\n\n  const kollateralInvoker = new web3.eth.Contract(invokerABI, Kollateral_Invoker);\n\n  const data = web3.eth.abi.encodeParameters([\"address\", \"address\"], [owner, oTokenAddr]) \n  await kollateralInvoker.methods\n    .invoke(\n      Kollateral_Liquidator, // invokeTo\n      data, // invokeData\n      paymentToken, // tokenAddress: Dai, ETH, \n      premiumToPay\n    )\n    .send({from: account})\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n}\n\nexport const burnOToken = async (oTokenAddr, burnAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .burnOTokens(burnAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const issueOToken = async (oTokenAddr, issueAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .issueOTokens(issueAmt, account)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .addETHCollateral(owner)\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collaral\n * @param {string} oTokenAddr\n * @param {string} owner\n * @param {number|string} collateralAmt in min unit\n */\nexport const addERC20Collateral = async (collateral, oTokenAddr, owner, collateralAmt) => {\n  const collateralAmtBN = new BigNumber(collateralAmt);\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const allowance = await getAllowance(collateral, account, oTokenAddr);\n  // Approve to move collateral\n  if (new BigNumber(allowance).lt(collateralAmtBN)) {\n    const collateralToken = new web3.eth.Contract(oTokenABI, collateral);\n    await collateralToken.methods\n      .approve(oTokenAddr, UINT256_MAX)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n  await oToken.methods\n    .addERC20Collateral(owner, collateralAmtBN.toString())\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collateral\n * @param {string} oTokenAddr\n * @param {string} collateralAmt in base unit\n */\nexport const removeCollateral = async (collateral, oTokenAddr, collateralAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if (collateral === ETH_ADDRESS) {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\nexport const redeem = async (token) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .redeemVaultBalance()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * Exercise your oTokens\n * @param {string} oTokenAddr\n * @param {string} underlying asset type\n * @param {string} amountToExercise\n * @param {string[]} vaults vault owners\n */\nexport const exercise = async (oTokenAddr, underlying, amountToExercise, vaults) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const underlyingRequired = await oToken.methods\n    .underlyingRequiredToExercise(amountToExercise)\n    .call();\n\n  const underlyingIsETH = underlying === ETH_ADDRESS;\n\n  if (!underlyingIsETH) {\n    const allowance = await getAllowance(underlying, account, oTokenAddr);\n    if (new BigNumber(allowance).lt(new BigNumber(underlyingRequired)))\n      await approve(underlying, oTokenAddr, UINT256_MAX);\n  }\n\n  await oToken.methods\n    .exercise(amountToExercise, vaults)\n    .send({ from: account, value: underlyingIsETH ? underlyingRequired : '0' })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const approve = async (oTokenAddr, spender, amt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVault = async (oTokenAddr) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .openVault()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Option Exchange\n\nexport const buyOTokensFromExchange = async (oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .buyOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      buyAmt\n    )\n    .send({ from: account, value: ethAmt })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const sellOTokensFromExchange = async (oTokenAddr, exchangeAddr, sellAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oTokenAddr, account, exchangeAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(sellAmt))) {\n    await approve(oTokenAddr, exchangeAddr, UINT256_MAX);\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .sellOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      sellAmt\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Uniswap Exchange\n\n/**\n *\n */\nexport const addLiquidity = async (oToken, uniswapAddr, maxToken, minLiquidity, ethInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oToken, account, uniswapAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(maxToken))) {\n    await approve(oToken, uniswapAddr, UINT256_MAX);\n  }\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .addLiquidity(\n      minLiquidity, // min_liquidity\n      maxToken, // max_tokens\n      deadline // deadline\n    )\n    .send({ from: account, value: ethInWei })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n */\nexport const removeLiquidity = async (uniswapAddr, pool_token_amount, min_eth_wei, min_tokens) => {\n  const account = await checkConnectedAndGetAddress();\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .removeLiquidity(pool_token_amount, min_eth_wei, min_tokens, deadline)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","import Notify from 'bnc-notify';\n\nexport const notify = Notify({\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06',\n  networkId: 1,\n});\n","import Web3 from 'web3';\n\nconst optionContractABI = require('../constants/abi/OptionContract.json');\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json');\nconst oracleABI = require('../constants/abi/Oracle.json');\n\nconst Promise = require('bluebird');\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY\n\nconst web3 = new Web3(`https://mainnet.infura.io/v3/${INFURA_KEY}`);\n\nconst ETH_ADDR = '0x0000000000000000000000000000000000000000';\n\n// ERC20 Info\n\n/**\n *\n * @param {string} erc20Token address\n * @param {string} user address\n * @return {Promise<string>}\n */\nexport const getTokenBalance = async (erc20Token, user) => {\n  if (user === '') return '0';\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const balance = await oTokenContract.methods.balanceOf(user).call();\n  return balance;\n};\n\nexport const getDecimals = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const decimals = await oTokenContract.methods.decimals().call();\n  return parseInt(decimals);\n};\n\nexport const getERC20Symbol = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  return await oTokenContract.methods.symbol().call();\n};\n\nexport const getERC20Info = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const totalSupplyDecimals = await token.methods.totalSupply().call();\n  const decimals = await token.methods.decimals().call();\n  const totalSupply = parseInt(totalSupplyDecimals) / 10 ** parseInt(decimals);\n  return { decimals, totalSupply };\n};\n\n// Option Contract\n\n/**\n * todo: use graph ql\n * @param {Array<string>} owners\n * @param {string} oToken\n */\nexport const getVaults = async (owners, oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n\n  const vaults = await Promise.map(owners, async (owner) => {\n    const res = await oTokenContract.methods.getVault(owner).call();\n    const collateral = web3.utils.fromWei(res[0]);\n    const oTokensIssued = res[1];\n    const underlying = res[2];\n    return { collateral, oTokensIssued, underlying, owner, oToken };\n  });\n  return vaults;\n};\n\n/**\n * Compare user balance with max liquidatable and decide max liquidatable\n * @param {string} oToken\n * @param {string} owner\n * @param {string} liquidator\n */\nexport const getMaxToLiquidate = async (oToken, owner, liquidator) => {\n  const maxVaultLiquidatable = await getMaxLiquidatable(oToken, owner);\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const userbalance = liquidator ? await oTokenContract.methods.balanceOf(liquidator).call() : 0;\n\n  const maxLiquidatable = Math.min(\n    parseInt(userbalance, 10),\n    parseInt(maxVaultLiquidatable, 10)\n  ).toString();\n\n  return parseInt(maxLiquidatable);\n};\n\n/**\n * Max liquidatable for given vault\n * @param {string} oToken\n * @param {string} owner\n * @return {Promise<number>}\n */\nexport const getMaxLiquidatable = async (oToken, vaultOwner) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable = await oTokenContract.methods\n    .maxOTokensLiquidatable(vaultOwner)\n    .call();\n  return parseInt(maxVaultLiquidatable);\n};\n\n/**\n *\n * @param {string} oToken\n * @param {string} tokenToExercise\n * @return {Promise<string>}\n */\nexport const getUnderlyingRequiredToExercise = async (oToken, tokenToExercise) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const underlyringRequired = await oTokenContract.methods\n    .underlyingRequiredToExercise(tokenToExercise)\n    .call();\n  // console.log(`what `, underlyringRequired)\n  return underlyringRequired;\n};\n\nexport const getAssetsAndOracle = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const [oracle, underlying, strike, minRatioObj, strikePriceObj] = await Promise.all([\n    token.methods.COMPOUND_ORACLE().call(),\n    token.methods.underlying().call(),\n    token.methods.strike().call(),\n    token.methods.minCollateralizationRatio().call(),\n    token.methods.strikePrice().call(),\n  ]);\n  const strikePrice = strikePriceObj[0] * 10 ** strikePriceObj[1];\n  const minRatio = minRatioObj[0] * 10 ** minRatioObj[1];\n  return { underlying, strike, minRatio, strikePrice, oracle };\n};\n\n/**\n *\n * @param {string} contract\n * @param {string} user\n * @param {string} spender\n * @return {Promise<string>}\n */\nexport const getAllowance = async (contract, user, spender) => {\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call();\n  return allowance;\n};\n\n/**\n * Get balance in eth for the account\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  if (address === '') return '0';\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\n/**\n * Get price of token in unit of wei\n * @param {string} oracleAddr\n * @param {string} token\n * @returns {Promise<string>}\n */\nexport const getPrice = async (oracleAddr, token) => {\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return price; // unit: wei/ per token\n};\n\n// Option Exchange\nexport const getPremiumToPay = async (\n  exchangeAddr,\n  tokenToBuy,\n  buyAmt,\n  paymentToken = ETH_ADDR\n) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call();\n  return premiumToPay;\n};\n\nexport const getPremiumReceived = async (exchangeAddr, tokenToSell, sellAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const payoutToken = ETH_ADDR;\n  const premiumReceived = await exchange.methods\n    .premiumReceived(tokenToSell, payoutToken, sellAmt)\n    .call();\n  return web3.utils.fromWei(premiumReceived);\n};\n\n// uniswapExchange\n","export const options = [\n  {\n    addr: '0x48ab8a7d3bf2eb942e153e4275ae1a8988238dc7',\n    title: 'Opyn ETH Put $100',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/03/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    underlying: \"0x0000000000000000000000000000000000000000\",\n    strike: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n    strikePrice: 1e-6,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x30651Fc7F912f5E40AB22F3D34C2159431Fb1c4F',\n    expiry: 1585958340\n  },\n  {\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    title: 'cDai Insurance',\n\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xA6923533A6362008e9b536271C2Bdc0FF1467D3c',\n    expiry: 1612915200\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\",\n    strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xE3A0a2431a093fed99037987eD0A88550e5E79AA',\n    expiry: 1612915200\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n     // constants in contract\n     symbol: 'oCRV',\n     name: 'Opyn y.curve.fi Insurance',\n     decimals: 8,\n     oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n     collateral: '0x0000000000000000000000000000000000000000',\n     underlying: \"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8\",\n     strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n     strikePrice: 9.2e-16,\n     minRatio: 1.6,\n     exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n     uniswapExchange: '0x21f5E9D4Ec20571402A5396084B1634314A68c97',\n     expiry: 1585440000\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 2e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x8a0976500EED661202810bAB030a057DF15c4CC9',\n    expiry: 1612915200\n  },\n]\n\nexport const ETH_ADDRESS = '0x0000000000000000000000000000000000000000'\nexport const ERC20_Liquidator = \"0xF8cE4E70F52FdDBc72547Ce9616ed3E7d4525e8A\"\nexport const Kollateral_Liquidator = \"0xfBaB30f79bbbC92C708E7e9b01E329e003d8Ce48\"\n\nexport const AAVE_LENDING = '0x398eC7346DcD622eDc5ae82352F02bE94C62d119'\nexport const Kollateral_Invoker = '0x06d1f34fd7c055ae5ca39aa8c6a8e10100a45c01'\n\nexport const DAI = \"0x6b175474e89094c44da98b954eedeac495271d0f\"\nexport const USDC = \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\"\nexport const KETH = \"0x0000000000000000000000000000000000000001\"","import React, { useState } from 'react';\nimport { Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase } from '@aragon/ui';\n\nimport { connect, disconnect } from '../../utils/web3';\n\nfunction ConnectButton({ user, setUser }) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n    return true;\n  };\n\n  const disconnectWeb3 = async () => {\n    await disconnect();\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{paddingTop: 5, paddingRight: 5}}>\n      <LinkBase onClick={disconnectWeb3} size='small' > <IconPower /> </LinkBase>\n      </div>\n      <Box padding={6}>\n        <IdentityBadge entity={user} />\n      </Box>\n      \n    </>\n  ) : (\n    <Button icon={<IconConnect />} label={'Connect'} onClick={connectWeb3} />\n  );\n}\n\nexport default ConnectButton;\n","import React from 'react';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\nfunction ChangeMode({theme, updateTheme}) {\n\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark')\n    else updateTheme('light')\n  }\n\n    return (\n      <Button \n      icon={ theme === 'dark' ? <IconStar/> : <IconStarFilled/>} \n      onClick={handleChangeTheme}\n      label={ 'Theme' }\n      />\n    );\n  \n}\n\nexport default ChangeMode;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SettingsButton';\nimport { Bar, BackButton, LinkBase } from '@aragon/ui';\n\nfunction NavBar({ theme, updateTheme, user, setUser }) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n\n  return (\n    <Bar\n      primary={\n        isHome ? (\n          <></>\n        ) : (\n          <>\n            <div style={{ height: '100%' }}>\n              <BackButton onClick={()=>{\n                history.goBack();\n              }} />\n            </div>\n            <LinkButton title='My Vaults' onClick={()=>{history.push('/myvaults/')}} />\n            <LinkButton title='All Contracts' onClick={()=>{history.push('/options/')}} />\n            <LinkButton title='Trade' onClick={()=>{history.push('/trade/')}} />\n          </>\n        )\n      }\n      secondary={\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      }\n    ></Bar>\n  );\n}\n\nfunction LinkButton ({title, onClick}){\n  return(\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}> \n        <div style={{padding: '1%', opacity:0.5, fontSize: 17}}>\n            {title}\n        </div>\n        </LinkBase>\n    </div>\n  )\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Header, Box, LinkBase } from '@aragon/ui';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header primary='Welcome to Opyn Dashboard' />\n      <div style={{ padding: 5, opacity: 0.5 }}> Tools for DeFi Risk Management. </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%', marginRight: '3%' }}>\n          <MainButton title='My Vaults' description='Manage collateral, Mint/Burn oTokens' iconUrl='https://opyn.co/static/media/1.68813886.svg'  onClick={()=>{\n            history.push('/myvaults')\n          }} />\n        </div>\n\n        <div style={{ width: '30%' }}>\n          <MainButton title='All Contracts' description=' Monitor and liquidate vaults.' iconUrl='https://opyn.co/static/media/2.18d22be0.svg'  onClick={()=>{\n            history.push('/options/')\n          }} />\n        </div>\n\n        <div style={{ width: '30%', marginLeft: '3%' }}>\n          <MainButton title='Trade' description='Buy, Sell or Provided Liquidity.' iconUrl='https://opyn.co/static/media/3.4da8b24d.svg'  onClick={()=>{\n            history.push('./trade')\n          }} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction MainButton({ title, description, iconUrl, onClick }) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding:10, fontSize: 18 }}>{title}</div>\n        <img alt='icon' style={{ padding:10, height:64 }} src={iconUrl}></img>\n        <div style={{ paddingTop: 5, opacity: 0.5 }}> {description} </div>\n        \n      </Box>\n    </LinkBase>\n  );\n}\n\nexport default HomePage;\n","import React from 'react'\n\nimport { IdentityBadge } from '@aragon/ui'\n\nfunction AddressBlock({label, address}){\n\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}> {label} </div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten={true} />\n      </div>\n    </>\n  );\n};\n\nexport default AddressBlock","import React from 'react'\n\n/**\n * \n * @param {{balance: number | string | BigNumber}} param0 \n */\nfunction BalanceBlock({asset, balance}){\n  let integer = '0',\n    digits = '0';\n  if (balance > 0) {\n    const str = balance.toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}> {asset} </div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>.\n        <span style={{ fontSize: 18 }}> {digits} </span>\n      </div>\n    </>\n  );\n};\n\nexport default BalanceBlock","import React from 'react';\n\nimport { Tag } from '@aragon/ui';\n\nfunction RatioTag({ isSafe, ratio, useCollateral = true }) {\n  return !useCollateral ? (\n    <Tag color='#78827a' background='#c0c2c0'>\n      Cool\n    </Tag>\n  ) : isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background='#FFEBAD' color='#FEC100'>\n        {' '}\n        Danger{' '}\n      </Tag>\n    ) : (\n      <Tag mode='new'> safe </Tag>\n    )\n  ) : (\n    <Tag color='#E34343' background='#FFC6C6'>\n      Unsafe!\n    </Tag>\n  );\n}\n\nexport default RatioTag;\n","import React from 'react';\n\nfunction SectionTitle({ title }) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n\nexport default SectionTitle","import React from 'react'\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nexport default MaxButton","import React from 'react'\n\nfunction HelperText({ label, amt }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default HelperText","import React from 'react'\n\nfunction PriceSection({ label, amt, symbol = '', forceDisplay=false }) {\n  if (parseFloat(amt) > 0 || forceDisplay) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default PriceSection","import React from 'react'\n\nfunction Comment ({text}) {\n  return (\n    <div style={{padding: 5, opacity:0.5}}> {text} </div>\n  )\n}\n\nexport default Comment","import React from 'react'\nimport { Button } from '@aragon/ui'\nimport { useHistory } from 'react-router-dom';\nimport { openVault } from '../../utils/web3'\n\nfunction ManageVaultButton({ oToken, owner }) {\n  const history = useHistory();\n  const goToManagePage = (oToken, owner) => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n  return <Button onClick={() => goToManagePage(oToken, owner)} label='Manage'></Button>;\n}\n\nfunction OpenVaultButton({ oToken, user }) {\n  const history = useHistory();\n\n  const openAndGoToVault = () => {\n    openVault(oToken)\n    history.push(`/manage/${oToken}/${user}`);\n  }\n\n  return <Button \n    onClick={() => openAndGoToVault(oToken)} \n    label='Open Vault'\n    />;\n}\n\nexport { ManageVaultButton, OpenVaultButton }","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/contracts';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\nimport { Comment } from '../common'\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToToken = (addr) => {\n    history.push(`/option/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='All Contracts' />\n      <Comment text='Choose an option contract to proceed.' />\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/contracts';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\nimport { Comment } from '../common'\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToTrade = (addr) => {\n    history.push(`/trade/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='Trade' />\n      <Comment text='Choose an option contract to proceed' />\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToTrade(addr)}> Start Trading </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","// const prefix = 'https://cors-anywhere-anton.herokuapp.com/';\nconst opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn';\n\n/**\n * @return {Promise<Array<{colalteral: string, oTokensIssued: string, owner: string}>>}\n */\nexport async function getAllVaultsForOption(optionAddress) {\n  const query = `\n  {\n    vaults(where: {\n      optionsContract: \"${optionAddress}\"\n    }) {\n      owner\n      oTokensIssued,\n      collateral,\n    }\n  }`;\n  const response = await postQuery(query);\n  const vaults = response.data.vaults;\n  return vaults;\n}\n\nexport async function getAllVaultsForUser(owner) {\n  const query = `{\n    vaults (where: {owner: \"${owner}\"}) {\n      optionsContract {\n        address\n      }\n      oTokensIssued,\n      collateral,\n    }\n  }`;\n  const response = await postQuery(query);\n  const actions = response.data.vaults;\n  return actions;\n}\n\nexport async function getLiquidationHistory(owner) {\n  const query = liquidationActionsQuery(owner);\n  const response = await postQuery(query);\n  return response.data.liquidateActions;\n}\n\nconst liquidationActionsQuery = (owner) => `{\n  liquidateActions(where: {\n    vault_contains: \"${owner}\"\n  }) {\n    vault {\n      owner,\n      optionsContract {\n        address\n      }\n    },\n    liquidator,\n    collateralToPay,\n    timestamp\n    transactionHash\n  }\n}\n\n`;\n\n/**\n * Get all exercise history for one user\n * @param {string} owner vault owner\n * @param {string} option contract address\n * @return {Promise<{amtCollateralToPay: string, exerciser:string, oTokensToExercise:string, timestamp:string, transactionHash: string}>}\n */\nexport async function getExerciseHistory(owner, option) {\n  const query = `{\n    exerciseActions (where: {\n      vault_contains: \"${owner}\"\n      optionsContract_contains: \"${option}\"\n    }) {\n      exerciser\n      oTokensToExercise\n      amtCollateralToPay\n      transactionHash\n      timestamp\n    }\n  }`;\n\n  const response = await postQuery(query);\n  return response.data.exerciseActions;\n}\n\nconst postQuery = async (query) => {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  };\n  const res = await fetch(opynGraphEndpoint, options);\n  return await res.json();\n};\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nconst web3 = new Web3();\n\n/**\n * Convert 10.999 to 10999000\n * @param {number|string|BigNumber} rawAmt\n * @param {number} decimals\n * @returns {BigNumber}\n */\nexport function toBaseUnitBN(rawAmt, decimals) {\n  const raw = new BigNumber(rawAmt);\n  const base = new BigNumber(10);\n  const decimalsBN = new BigNumber(decimals);\n  return raw.times(base.pow(decimalsBN)).integerValue();\n}\n\n/**\n * Convert 10999000 to 10.999\n * @param {string | number | BigNumber} tokenAmount in base unit\n * @param {number} tokenDecimals\n * @return {BigNumber}\n */\nexport const toTokenUnitsBN = (tokenAmount, tokenDecimals) => {\n  const _amt = new BigNumber(tokenAmount);\n  const _digits = new BigNumber(10).pow(new BigNumber(tokenDecimals));\n  return _amt.div(_digits);\n};\n\nexport function formatDigits(num, percision) {\n  return parseFloat(num).toFixed(percision);\n}\n\nexport const fromWei = web3.utils.fromWei;\nexport const toWei = web3.utils.toWei;\n\nexport function timeSince(timeStamp) {\n  var now = new Date(),\n    secondsPast = (now.getTime() - timeStamp) / 1000;\n  if (secondsPast < 60) {\n    return parseInt(secondsPast) + 's ago';\n  }\n  if (secondsPast < 3600) {\n    return parseInt(secondsPast / 60) + 'm ago';\n  }\n  if (secondsPast <= 86400) {\n    return parseInt(secondsPast / 3600) + 'h ago';\n  }\n  if (secondsPast > 86400) {\n    const ts = new Date(timeStamp);\n    const day = ts.getDate();\n    const month = ts\n      .toDateString()\n      .match(/ [a-zA-Z]*/)[0]\n      .replace(' ', '');\n    const year = ts.getFullYear() === now.getFullYear() ? '' : ' ' + ts.getFullYear();\n    return day + ' ' + month + year;\n  }\n}\n\nexport function compareVaultRatio(vaultA, vaultB) {\n  const rateA = vaultA.ratio;\n  const rateB = vaultB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n\nexport function compareVaultIssued(vaultA, vaultB) {\n  const amountA = vaultA.oTokensIssued;\n  const amountB = vaultB.oTokensIssued;\n\n  let comparison = 0;\n  if (parseInt(amountA) > parseInt(amountB)) {\n    comparison = -1;\n  } else if (parseInt(amountA) < parseInt(amountB)) {\n    comparison = 1;\n  }\n  return comparison;\n}\n","import BigNumber from 'bignumber.js';\nimport { getPrice, getDecimals } from './infura';\nimport { toBaseUnitBN } from './number';\n\n/**\n * Get strike value in collateral for ratio calculation.\n * @param {string} collateral address\n * @param {string} strike address\n * @param {string} oracle address\n * @param {number?} collateralDecimals if provided, wont get again if needed\n * @return {Promise<BigNumber>}\n */\nexport const calculateStrikeValueInCollateral = async (\n  collateral,\n  strike,\n  oracle,\n  collateralDecimals = undefined\n) => {\n  const ETH_Address = '0x0000000000000000000000000000000000000000';\n  let strikeValueInCollateral;\n  if (collateral === ETH_Address) {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    strikeValueInCollateral = new BigNumber(strikeValueInWei);\n  } else if (collateral === strike) {\n    // No collateral, like ETH option\n    if (collateralDecimals === undefined) collateralDecimals = await getDecimals(collateral);\n    strikeValueInCollateral = new BigNumber(10).pow(new BigNumber(collateralDecimals));\n  } else {\n    // Use other ERC20 as collateral : Untested\n    if (collateralDecimals === undefined) collateralDecimals = await getDecimals(collateral);\n    const strikeValueInWei = await getPrice(oracle, strike);\n    const collateralValueInWei = await getPrice(oracle, collateral);\n    strikeValueInCollateral = toBaseUnitBN(\n      parseInt(strikeValueInWei) / parseInt(collateralValueInWei),\n      collateralDecimals\n    );\n  }\n  return strikeValueInCollateral;\n};\n\n/**\n *\n * @param {string|number|BigNumber} collateral number of collateral in base unit\n * @param {string|number|BigNumber} tokenIssued number of token in base unit\n * @param {string|number|BigNumber} strikePrice\n * @param {BigNumber} strikeValueInCollateral\n * @return {number}\n */\nexport const calculateRatio = (collateral, tokenIssued, strikePrice, strikeValueInCollateral) => {\n  if (tokenIssued === '0') return Infinity;\n  const colalteralBN = new BigNumber(collateral);\n  const tokenIssuedBN = new BigNumber(tokenIssued);\n  const strikePriceBN = new BigNumber(strikePrice);\n  // const strikeValueInCollateralBN = new BigNumber(strikeValueInCollateral.toString())\n  const result = colalteralBN\n    .div(tokenIssuedBN)\n    .div(strikePriceBN)\n    .div(strikeValueInCollateral);\n  return result.toNumber();\n};\n","import React, { useState, useMemo } from 'react';\n\nimport { Header, DataView, IdentityBadge } from '@aragon/ui';\nimport { options, ETH_ADDRESS } from '../../constants/contracts';\nimport { SectionTitle, ManageVaultButton, OpenVaultButton, Comment } from '../common';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { formatDigits, compareVaultRatio, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getDecimals } from '../../utils/infura';\n\nconst Promise = require('bluebird');\n\nfunction MyVaults({ user }) {\n  const [opendVaults, setOpenedVaults] = useState([]);\n  const [tokensToOpen, setTokensToOpen] = useState([]);\n  const isConnected = user !== '';\n\n  // Only request all vaults once\n  useMemo(async () => {\n    if (!isConnected) return;\n    const userVaults = await getAllVaultsForUser(user);\n    const openedVaults = [];\n    const notOpenedTokens = [];\n    await Promise.map(options, async (option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      const isOpened = entry !== undefined;\n      const collatearlIsETH = option.collateral === ETH_ADDRESS;\n      if (isOpened) {\n        const collateralDecimals = collatearlIsETH ? 18 : await getDecimals(option.collateral);\n        const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n          option.collateral,\n          option.strike,\n          option.oracle,\n          collateralDecimals\n        );\n        const ratio = calculateRatio(\n          entry.collateral,\n          entry.oTokensIssued,\n          option.strikePrice,\n          strikeValueInCollateral\n        );\n        openedVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          collateralDecimals: collateralDecimals,\n          ratio,\n        });\n      } else {\n        notOpenedTokens.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n        });\n      }\n    });\n    setOpenedVaults(openedVaults.sort(compareVaultRatio));\n    setTokensToOpen(notOpenedTokens);\n  }, [isConnected, user]);\n\n  return (\n    <>\n      <Header primary={'My Vaults'} />\n      {isConnected ? (\n        <>\n          {opendVaults.length > 0 ? (\n            <div style={{ paddingBottom: '3%' }}>\n              <SectionTitle title={'Existing Vaults'} />\n              <DataView\n                fields={['Token', 'contract', 'collateral', 'Ratio', '']}\n                entries={opendVaults}\n                entriesPerPage={6}\n                renderEntry={({ oToken, oTokenName, collateral, collateralDecimals, ratio }) => {\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} />,\n                    formatDigits(toTokenUnitsBN(collateral, collateralDecimals).toNumber(), 5),\n                    formatDigits(ratio, 4),\n                    <ManageVaultButton oToken={oToken} owner={user} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n          {tokensToOpen.length > 0 ? (\n            // Show vaults to open\n            <div>\n              <SectionTitle title={'Open new vaults'} />\n              <DataView\n                fields={['Token', 'contract', 'manage']}\n                entries={tokensToOpen}\n                renderEntry={({ oToken, oTokenName }) => {\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} shorten={false} />,\n                    <OpenVaultButton oToken={oToken} user={user} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </>\n      ) : (\n        // Not connected to wallet\n        <Comment text='Please connect wallet to proceed.' />\n      )}\n    </>\n  );\n}\n\nexport default MyVaults;\n","import React, { useState, useMemo } from 'react';\n\nimport { exercise } from '../../utils/web3';\nimport { PriceSection } from '../common';\nimport { getUnderlyingRequiredToExercise, getBalance, getTokenBalance } from '../../utils/infura';\nimport { toTokenUnitsBN, toBaseUnitBN, formatDigits, compareVaultIssued } from '../../utils/number';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  DataView,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\n/**\n *\n * @param {{\n * oToken: string,\n * option: { decimals: number, underlying:string }\n * collateralDecimals: Number\n * underlyingDecimals: Number\n * underlyingSymbol: string\n * vaults: { collateral:string, oTokensIssued: string, owner:string, symbol:string }[]\n * underlyingIsETH: boolean\n * }} param0\n */\nfunction ExerciseModal({\n  user,\n  oToken,\n  option,\n  vaults,\n  collateralDecimals,\n  underlyingDecimals,\n  underlyingSymbol,\n  underlyingIsETH,\n}) {\n  const [userUnderlyingBalance, setUserUnderlyingBalance] = useState(new BigNumber(0));\n  const [userOTokenBalance, setUserOTokenBalance] = useState(new BigNumber(0));\n\n  const [opened, setOpened] = useState(false);\n\n  const [exerciseAmount, setExerciseAmount] = useState(new BigNumber(0));\n  const [underlyringRequired, setUnderlyringRequired] = useState(new BigNumber(0));\n\n  const nonEmptyVaults = vaults\n    .filter((vault) => parseInt(vault.collateral) > 0)\n    .sort(compareVaultIssued);\n\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\n  const [selectedHasEnoughCollateral, setHasEnoughCollateral] = useState(false);\n\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  // Update user balance\n  useMemo(async () => {\n    if (!user) return;\n    let userUnderlying;\n    if (underlyingIsETH) {\n      userUnderlying = new BigNumber(await getBalance(user));\n    } else {\n      userUnderlying = toTokenUnitsBN(\n        await getTokenBalance(option.underlying, user),\n        underlyingDecimals\n      );\n    }\n    const userOTokenBalance = toTokenUnitsBN(await getTokenBalance(oToken, user), option.decimals);\n\n    setUserUnderlyingBalance(userUnderlying);\n    setUserOTokenBalance(userOTokenBalance);\n  }, [oToken, option.decimals, option.underlying, underlyingDecimals, underlyingIsETH, user]);\n\n  const onSelectEntries = (entries, indexes) => {\n    setSelectedIndexes(indexes);\n    checkHasEnoughToken(entries);\n  };\n\n  /**\n   * Set selectedHasEnoughCollateral according to selected entries\n   * @param {{oTokenIssued: string}[]} entries\n   */\n  const checkHasEnoughToken = (entries) => {\n    const sumIssued = entries.reduce((accumulator, current) => {\n      return accumulator.plus(new BigNumber(current.oTokensIssued));\n    }, new BigNumber(0));\n    if (sumIssued.gt(new BigNumber(0)) && sumIssued.gte(toBaseUnitBN(exerciseAmount, option.decimals))) {\n      setHasEnoughCollateral(true);\n    } else {\n      setHasEnoughCollateral(false);\n    }\n  };\n\n  const onChangeExerciseAmt = async (amount) => {\n    if (!amount) {\n      setExerciseAmount(new BigNumber(0));\n      setUnderlyringRequired(new BigNumber(0));\n      return;\n    }\n    const exerciseAmount = new BigNumber(amount);\n    setExerciseAmount(exerciseAmount);\n    const underlyingRawAmt = await getUnderlyingRequiredToExercise(\n      oToken,\n      toBaseUnitBN(exerciseAmount, option.decimals).toString()\n    );\n    const underlyingRequired = toTokenUnitsBN(underlyingRawAmt, underlyingDecimals);\n    setUnderlyringRequired(underlyingRequired);\n\n    // check current selection has enought tokens\n    const entries = selectedIndexes.map((index) => nonEmptyVaults[index]);\n    checkHasEnoughToken(entries);\n  };\n\n  return (\n    <>\n      {/* Button */}\n      <Button onClick={open} label='Claim'></Button>\n\n      {/* Modal */}\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header\n          primary={'Exercise Option'}\n          secondary={\n            <div style={{ display: 'flex' }}>\n              <PriceSection\n                label={`Balance:`}\n                amt={userOTokenBalance}\n                symbol={option.symbol}\n                forceDisplay={true}\n              />\n              <PriceSection label={' +'} amt={userUnderlyingBalance} symbol={underlyingSymbol} />\n            </div>\n          }\n        />\n        <Box heading={'Amount to Exercise'}>\n          <Split\n            primary={\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  adornment={option.symbol}\n                  adornmentPosition='end'\n                  value={exerciseAmount.toNumber()}\n                  onChange={(event)=>onChangeExerciseAmt(event.target.value)}\n                />\n              </>\n            }\n            secondary={\n              <div style={{ paddingTop: 5 }}>\n                <PriceSection\n                  label={'+ Underlyring'}\n                  amt={underlyringRequired.toNumber()}\n                  symbol={underlyingSymbol}\n                />\n              </div>\n            }\n          />\n        </Box>\n        <DataView\n          mode='table'\n          renderSelectionCount={(count) => `${count} vaults selected`}\n          fields={['Owner', 'Issued', 'collateral']}\n          entries={nonEmptyVaults}\n          entriesPerPage={5}\n          selection={selectedIndexes}\n          onSelectEntries={onSelectEntries}\n          renderEntry={({ owner, collateral, oTokensIssued }) => {\n            return [\n              <IdentityBadge entity={owner} />,\n              formatDigits(toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(), 5),\n              formatDigits(toTokenUnitsBN(collateral, collateralDecimals).toNumber(), 5),\n            ];\n          }}\n        />\n        <br></br>\n        <Button\n          label='Exercise'\n          disabled={!selectedHasEnoughCollateral}\n          wide={true}\n          onClick={async () => {\n            const vaultowners = selectedIndexes.map((index) => vaults[index].owner);\n            exercise(\n              oToken,\n              option.underlying,\n              toBaseUnitBN(exerciseAmount, option.decimals).toString(),\n              vaultowners\n            );\n          }}\n        />\n      </Modal>\n    </>\n  );\n}\n\nexport default ExerciseModal;\n","import React, { useState, useEffect } from 'react';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  // IconConnect,\n  DataView,\n  useToast,\n} from '@aragon/ui';\n\nimport { RatioTag, Comment } from '../common';\n\nimport {\n  liquidate,\n  addERC20Collateral,\n  addETHCollateral,\n  // kollateralLiquidate,\n} from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { toTokenUnitsBN, toBaseUnitBN, formatDigits } from '../../utils/number';\n// import { KETH, DAI, USDC } from '../../constants/contracts';\n\n/**\n *\n * @param {{ option:{decimals:string, exchange:string, collateral:string, symbol:string} oTokensIssued: string collateralDecimals:Number, exchange:string}} param0\n */\nfunction VaultModal({\n  option,\n  useCollateral,\n  oToken,\n  owner,\n  collateral, // amount of collateral of this vault\n  isSafe,\n  oTokensIssued,\n  ratio,\n  collateralIsETH,\n  collateralDecimals,\n}) {\n  const toast = useToast()\n  const [opened, setOpened] = useState(false);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function getData() {\n      if (!opened) return;\n      const maxLiquidatable = await getMaxLiquidatable(oToken, owner);\n      if (!isCancelled) {\n        setLiquidateAmt(toTokenUnitsBN(maxLiquidatable, option.decimals).toNumber());\n      }\n    }\n    getData();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [option.decimals, oToken, opened, owner]);\n\n  return (\n    <>\n      <Button onClick={open} label='More'></Button>\n      <Modal width={900} padding={50} visible={opened} onClose={close}>\n        <Header primary={'Access Position'} />\n\n        <DataView\n          fields={['Owner', 'Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[{ collateral, isSafe, oTokensIssued, ratio, owner }]}\n          entriesPerPage={1}\n          renderEntry={({ owner, collateral, isSafe, oTokensIssued, ratio }) => {\n            return [\n              <IdentityBadge entity={owner} shorten={true} />,\n              formatDigits(toTokenUnitsBN(collateral, collateralDecimals), 5),\n              formatDigits(toTokenUnitsBN(oTokensIssued, option.decimals), 5),\n              formatDigits(ratio, 4),\n              RatioTag({ isSafe, ratio, useCollateral }),\n            ];\n          }}\n        />\n\n        <br></br>\n        <Box heading={'Add Collateral'}>\n          <Split\n            primary={\n              <TextInput\n                type='number'\n                wide={true}\n                adornment={<IconEthereum />}\n                adornmentPosition='end'\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            }\n            secondary={\n              <Button\n                label='Add Collateral'\n                wide={true}\n                onClick={() => {\n                  collateralIsETH\n                    ? addETHCollateral(oToken, owner, addValue)\n                    : addERC20Collateral(\n                        option.collateral,\n                        oToken,\n                        owner,\n                        toBaseUnitBN(addValue, collateralDecimals).toString()\n                      );\n                }}\n              />\n            }\n          />\n        </Box>\n\n        {useCollateral ? (\n          <Box heading={'Liquidate'}>\n            <Comment text={`Liquidate with your ${option.symbol}`} />\n            <Split\n              primary={\n                <>\n                  <TextInput\n                    wide={true}\n                    type='number'\n                    value={liquidateAmt}\n                    onChange={(event) => {\n                      setLiquidateAmt(event.target.value);\n                    }}\n                  />\n                </>\n              }\n              secondary={\n                <>\n                  <Button\n                    wide={true}\n                    disabled={isSafe}\n                    label='Liquidate'\n                    onClick={() => {\n                      liquidate(oToken, owner, toBaseUnitBN(liquidateAmt, option.decimals))\n                      .catch(error => {\n                        toast(error.toString())\n                      });;\n                    }}\n                  />\n                </>\n              }\n            />\n            {/* <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n              <Comment text={` Or `} />\n            </div>\n            <Comment text={`Liquidate with flashloan Liquidator`} />\n            <div style={{ display: 'flex' }}>\n              <Button\n                icon={<IconConnect />}\n                label={'DAI'}\n                onClick={() => {\n                  kollateralLiquidate(oToken, option.exchange, owner, DAI)\n                  .catch(error => {\n                    toast(error.toString())\n                  });\n                }}\n                wide={true}\n                selected\n              />\n              <Button\n                icon={<IconConnect />}\n                label={'USDC'}\n                onClick={() => {\n                  kollateralLiquidate(oToken, option.exchange, owner, USDC)\n                  .catch(error => {\n                    toast(error.toString())\n                  });\n                }}\n                wide={true}\n              />\n              <Button\n                icon={<IconConnect />}\n                label={'ETH'}\n                onClick={() => {\n                    kollateralLiquidate(oToken, option.exchange, owner, KETH)\n                    .catch(error => {\n                      toast(error.toString())\n                    });\n                }}\n                wide={true}\n              />\n            </div> */}\n          </Box>\n        ) : (\n          <></>\n        )}\n      </Modal>\n    </>\n  );\n}\n\nexport default VaultModal;\n","import React, { useState, useEffect } from 'react';\n\nimport { DataView, IdentityBadge } from '@aragon/ui';\nimport VaultModal from './VaultModal';\nimport { SectionTitle, RatioTag } from '../common';\n\nimport { formatDigits, compareVaultRatio, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\n\n\nfunction VaultOwnerList({ oToken, user, vaults, option, collateralIsETH, collateralDecimals }) {\n  const vaultUsesCollateral = option.collateral !== option.strike;\n  \n  const [isLoading, setIsLoading] = useState(true);\n  const [vaultsWithDetail, setVaultDetail] = useState([])\n\n  const [page, setPage] = useState(0)\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      if(vaults.length === 0) return\n      const { strike, minRatio, strikePrice, oracle, collateral } = option;\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral,\n        strike,\n        oracle\n      );\n      const vaultDetail = vaults\n        .map((vault) => {\n          if (vault.oTokensIssued === '0') {\n            vault.ratio = Infinity;\n            vault.useCollateral = vaultUsesCollateral;\n            vault.isSafe = true;\n            return vault;\n          }\n          const ratio = calculateRatio(\n            vault.collateral,\n            vault.oTokensIssued,\n            strikePrice,\n            strikeValueInCollateral\n          );\n          vault.ratio = ratio;\n          vault.useCollateral = vaultUsesCollateral;\n          vault.isSafe = ratio > minRatio;\n          vault.oToken = oToken;\n          return vault;\n        })\n        .sort(compareVaultRatio);\n\n      if (!isCancelled) {\n        setVaultDetail(vaultDetail);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 12000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [collateralDecimals, collateralIsETH, oToken, option, user, vaultUsesCollateral, vaults]);\n\n  return (\n    <>\n      <SectionTitle title={'All Vaults'} />\n      <DataView\n        page={page}\n        onPageChange={setPage}\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaultsWithDetail}\n        entriesPerPage={5}\n        renderEntry={({ owner, collateral, oTokensIssued, ratio, isSafe, useCollateral }) => {\n          return [\n            <IdentityBadge entity={owner} shorten={true} />,\n            formatDigits(\n              toTokenUnitsBN(collateral, collateralDecimals).toNumber(),\n              6\n            ),\n            formatDigits(\n              toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(), \n              6\n            ),\n            formatDigits(ratio, 5),\n            RatioTag({ isSafe, ratio, useCollateral }),\n            <VaultModal\n              option={option}\n              oToken={oToken}\n              owner={owner}\n              collateral={collateral}\n              collateralDecimals={collateralDecimals}\n              isSafe={isSafe}\n              useCollateral={useCollateral}\n              collateralIsETH={collateralIsETH}\n              oTokensIssued={oTokensIssued}\n              ratio={ratio}\n            />,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Split, IdentityBadge } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js'\n\nimport { getERC20Info, getBalance, getTokenBalance } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number'\n\nfunction OptionOverview({ oToken, tokenName, option, collateralIsETH, collateralDecimals }) {\n  const [totalCollateral, setTotalCollateral] = useState(new BigNumber(0));\n  const [totalSupply, setTotalSupply] = useState('0');\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      let _totalCollateral;\n      if (collateralIsETH) {\n        _totalCollateral = new BigNumber(await getBalance(oToken))\n      } else {\n        const rawCollateralBalance = await getTokenBalance(option.collateral, oToken)\n        _totalCollateral = toTokenUnitsBN(rawCollateralBalance, collateralDecimals)\n      }\n      const { totalSupply } = await getERC20Info(oToken);\n      if (!isCancelled) {\n        setTotalCollateral(_totalCollateral);\n        setTotalSupply(totalSupply);\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [collateralDecimals, collateralIsETH, oToken, option.collateral]);\n\n  return (\n    <>\n      <Split\n        primary={\n          <Split\n            primary={\n              <Box heading={'contract'} padding={15}>\n                <IdentityBadge entity={oToken} shorten={false} />\n              </Box>\n            }\n            secondary={\n              <Box heading={'Total Collateral'} padding={15}>\n                {totalCollateral.toNumber()}\n              </Box>\n            }\n          />\n        }\n        secondary={\n          <Box heading={'total supply'} padding={15}>\n            {totalSupply} {tokenName}\n          </Box>\n        }\n      />\n    </>\n  );\n}\n\nexport default OptionOverview;\n","import React, { useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport ExerciseModal from './ExerciseModal';\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nimport { getDecimals, getERC20Symbol } from '../../utils/infura';\nimport { getAllVaultsForOption } from '../../utils/graph';\n\nimport { options, ETH_ADDRESS } from '../../constants/contracts';\n\nfunction OptionPage({ user }) {\n  let { token } = useParams();\n  const option = options.find((option) => option.addr === token);\n\n  const [vaults, setVaults] = useState([]);\n\n  const [collateralDecimals, setCollateralDecimals] = useState(18);\n  const [underlyingDecimals, setUnderlyingDecimals] = useState(18);\n  const [underlyingSymbol, setUnderlyingSymbol] = useState('ETH');\n\n  const collateralIsETH = option.collateral === ETH_ADDRESS;\n  const underlyingIsETH = option.underlying === ETH_ADDRESS;\n\n  useMemo(async () => {\n    if (!collateralIsETH) {\n      const _decimals = await getDecimals(option.collateral);\n      setCollateralDecimals(_decimals);\n    }\n    if (!underlyingIsETH) {\n      const [_decimals, _symbol] = await Promise.all([\n        getDecimals(option.underlying),\n        getERC20Symbol(option.underlying),\n      ]);\n      setUnderlyingDecimals(_decimals);\n      setUnderlyingSymbol(_symbol);\n    }\n\n    // Get All vaults once\n    const vaults = await getAllVaultsForOption(token);\n    setVaults(vaults);\n  }, [collateralIsETH, option.collateral, option.underlying, token, underlyingIsETH]);\n\n  return (\n    <>\n      <Header\n        primary={option.name}\n        secondary={\n          <ExerciseModal\n            user={user}\n            oToken={token}\n            option={option}\n            collateralDecimals={collateralDecimals}\n            underlyingDecimals={underlyingDecimals}\n            underlyingSymbol={underlyingSymbol}\n            underlyingIsETH={underlyingIsETH}\n            vaults={vaults}\n          />\n        }\n      />\n      {/* Basic Info Header */}\n      <OptionInfoBox\n        oToken={token}\n        user={user}\n        vaults={vaults}\n        option={option}\n        collateralDecimals={collateralDecimals}\n        collateralIsETH={collateralIsETH}\n      />\n      {/* List of Vaults */}\n      <VaultsList\n        oToken={token}\n        user={user}\n        vaults={vaults}\n        collateralDecimals={collateralDecimals}\n        collateralIsETH={collateralIsETH}\n        option={option}\n      />\n    </>\n  );\n}\n\nexport default OptionPage;\n","import React from 'react';\n\nimport { BalanceBlock, RatioTag, HelperText } from '../common';\nimport { formatDigits, toTokenUnitsBN } from '../../utils/number';\n\nconst HeaderDashboard = ({ ratio, minRatio, symbol, vault, decimals, newRatio, collateralDecimals, useCollateral }) => {\n  const tokenInUnit = vault.oTokensIssued ? toTokenUnitsBN(vault.oTokensIssued, decimals).toNumber() : '0';\n  const collateralBalance = vault.collateral \n  ? toTokenUnitsBN(vault.collateral, collateralDecimals).toString()\n  : '0'\n  \n  return (\n    <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset='Total Collateral' balance={formatDigits(collateralBalance, 6)} />\n      </div>\n      <div style={{ width: '50%' }}>\n        <BalanceBlock asset={`${symbol} Issued`} balance={tokenInUnit} />\n      </div>\n      <div style={{ width: '20%' }}>\n        <>\n          <div style={{ fontSize: 14, padding: 3 }}>\n            Current Ratio{' '}\n            {ratio > 0 ? <RatioTag isSafe={ratio >= minRatio} ratio={ratio} useCollateral={useCollateral} /> : <></>}\n          </div>\n          <div style={{ fontSize: 24, padding: 3 }}>\n            <span style={{ fontSize: 24 }}>{ratio.toString().split('.')[0]}</span>.\n            <span style={{ fontSize: 18 }}>{ratio.toString().split('.')[1]} </span>\n            {minRatio > 0 ? <span style={{ fontSize: 16 }}> / {minRatio} </span> : ''}\n          </div>\n          <> {newRatio === ratio ? '' : <HelperText label='New Ratio' amt={newRatio} />} </>\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport { getDecimals, getERC20Symbol } from '../../utils/infura'\nimport { addETHCollateral, addERC20Collateral, removeCollateral,  } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\nimport { formatDigits, toTokenUnitsBN, toBaseUnitBN } from '../../utils/number'\nimport { calculateRatio } from '../../utils/calculation'\nimport { ETH_ADDRESS } from '../../constants/contracts';\n\n/**\n * \n * @param {{isOwner: boolean, strikePrice:number, strikeValue:BigNumber, collateralAssetBalance: BigNumber }} param0 \n */\nfunction CollateralManagement({\n  isOwner,\n  vault,\n  collateralAsset,\n  collateralAssetBalance, // Bignumber, / token unit\n  token,\n  owner,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  setNewRatio\n}) {\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0); // in token unit\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0); // in token unit\n\n  const [collateralDecimals, setCollateralDecimals] = useState(18)\n  const [collateralSymbol, setCollateralSymbol] = useState(0)\n\n  const collateralIsETH = collateralAsset === ETH_ADDRESS\n\n  useMemo(async()=>{\n    if(collateralIsETH) return\n    const decimals = await getDecimals(collateralAsset)\n    const symbol = await getERC20Symbol(collateralAsset)\n    setCollateralDecimals(decimals)\n    setCollateralSymbol(symbol)\n  }, [collateralAsset, collateralIsETH])\n\n  /**\n   * @param {number} newCollateral in wei\n   */\n  const updateNewRatio = (newCollateral) => {\n    if(!newCollateral || newCollateral <= 0) return 0\n    const str = newCollateral.toString()\n    const newRatio = calculateRatio(str, vault.oTokensIssued, strikePrice, strikeValue)\n    setNewRatio(formatDigits(newRatio,5))\n  }\n\n  return (\n    <Box heading={'Collateral'}>\n      <div style={{ display: 'flex' }}>\n        {/* balance */}\n        <div style={{ width: '30%' }}>\n          {BalanceBlock({ \n            asset: collateralIsETH ? 'Your ETH Balance' : `Your ${collateralSymbol} Balance`, \n            balance: formatDigits(collateralAssetBalance.toString(),6) })}\n        </div>\n        {/* Add collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={addCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value\n                    if (amt === '') {\n                      setAddCollateralAmt(0)\n                      return\n                    } \n                    setAddCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateralDecimals)\n                    const newCollateralInWei = new BigNumber(vault.collateral).plus(amtRaw).toNumber()\n                    updateNewRatio(newCollateralInWei)\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setAddCollateralAmt(collateralAssetBalance.toNumber());\n                    const collateralBalanceRaw = toBaseUnitBN(collateralAssetBalance, collateralDecimals)\n                    const newCollateral = new BigNumber(vault.collateral).plus(collateralBalanceRaw).toNumber()\n                    updateNewRatio(newCollateral)\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Add'\n                onClick={() => {\n                  collateralIsETH \n                    ? addETHCollateral(token, owner, addCollateralAmt)\n                    : addERC20Collateral(collateralAsset, token, owner, toBaseUnitBN(addCollateralAmt, collateralDecimals))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={removeCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value\n                    if(amt === '') {\n                      setRemoveCollateralAmt(0)\n                      return\n                    }\n                    setRemoveCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateralDecimals)\n                    const newCollateralWei = new BigNumber(vault.collateral).minus(amtRaw).toNumber()\n                    updateNewRatio(newCollateralWei)\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikeValue.toNumber() <= 0) return;\n                    const strikePriceBN = new BigNumber(strikePrice)\n                    const tokenIssuedBN = new BigNumber(vault.oTokensIssued)\n                    const minRatioBN = new BigNumber(minRatio)\n                    const minCollateral = strikePriceBN.times(tokenIssuedBN).times(minRatioBN).times(strikeValue)\n                    // const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                    // const minCollateral = minValueInStrike * strikeValue;\n                    const maxToRemove = new BigNumber(vault.collateral).minus(minCollateral).toString();\n                    const maxToRemoveInTokenUnit = toTokenUnitsBN(maxToRemove, collateralDecimals).toNumber()\n                    setRemoveCollateralAmt(maxToRemoveInTokenUnit);\n                    setNewRatio(minRatio)\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Remove'\n                onClick={() => {\n                  removeCollateral(collateralAsset, token, toBaseUnitBN(removeCollateralAmt, collateralDecimals).toString());\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\n\nexport default CollateralManagement","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js'\n\nimport { burnOToken, issueOToken } from '../../utils/web3';\nimport { BalanceBlock, MaxButton } from '../common';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation'\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\n/**\n * \n * @param {{\n * strikeValue: BigNumber, \n * tokenBalance: BigNumber, \n * strikePrice: Number, \n * decimals: Number\n * }} param0 \n */\nfunction IssuedTokenManagement({\n  isOwner,\n  vault,\n  tokenBalance,\n  token,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  decimals,\n  symbol,\n  setNewRatio,\n}) {\n  const [issueAmt, setIssueAmt] = useState(new BigNumber(0));\n  const [burnAmt, setBurnAmt] = useState(new BigNumber(0));\n\n  /**\n   * \n   * @param {BigNumber} newAmt in raw amt\n   */\n  const updateNewRatio = (newAmt) => {\n    if(newAmt.lte(new BigNumber(0))) return\n    const newRatio = calculateRatio(vault.collateral, newAmt, strikePrice, strikeValue)\n    setNewRatio(newRatio);\n  };\n\n  const onChangeIssueAmt = (intputAmt) => {\n    if (!intputAmt){\n      setIssueAmt(new BigNumber(0))\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt)\n    setIssueAmt(amountBN);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).plus(toBaseUnitBN(amountBN, decimals)));\n  }\n\n  const onClickIssueToken = () => {\n    issueOToken(\n      token, \n      toBaseUnitBN(issueAmt, decimals).toString()\n    );\n  }\n\n  const onChangeBurnAmt = (intputAmt) => {\n    if(!intputAmt) {\n      setBurnAmt(new BigNumber(0))\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt)\n    updateNewRatio(new BigNumber(vault.oTokensIssued).minus(toBaseUnitBN(amountBN, decimals)));\n    setBurnAmt(amountBN);\n  }\n\n  const onClickBurnToken = () => {\n    burnOToken(\n      token, \n      toBaseUnitBN(burnAmt, decimals).toString()\n    );\n  }\n\n  return (\n    <Box heading={'Total Issued'}>\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock\n            asset={`Owner ${symbol} Balance `}\n            balance={tokenBalance.toString()}\n          />\n        </div>\n        {/* Issue More Token */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={issueAmt}\n                  onChange={(event) => onChangeIssueAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikePrice <= 0) return;\n                    // (vault.collateral) / (minRatio * strikePrice * strikeValue.toNumber());\n                    const maxTotal = new BigNumber(vault.collateral).div(\n                      new BigNumber(minRatio).times(new BigNumber(strikePrice)).times(strikeValue)\n                    )\n                      \n                    const maxToIssueRaw = maxTotal.minus(new BigNumber(vault.oTokensIssued));\n                    const maxToIssue = toTokenUnitsBN(maxToIssueRaw, decimals);\n                    setIssueAmt(maxToIssue);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Issue'\n                onClick={onClickIssueToken}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={burnAmt}\n                  onChange={(event) => onChangeBurnAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    const issued = toTokenUnitsBN(vault.oTokensIssued, decimals)\n                    const maxToBurn = tokenBalance.lt(issued) ? tokenBalance : issued; // min (issued, tokenBalance)\n                    setBurnAmt(maxToBurn);\n                    updateNewRatio(issued.minus(maxToBurn))\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Burn'\n                onClick={onClickBurnToken}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default IssuedTokenManagement;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport { Box, DataView, IdentityBadge, TransactionBadge, TextInput, Button } from '@aragon/ui';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { getLiquidationHistory } from '../../utils/graph';\nimport { formatDigits, fromWei, toTokenUnitsBN, timeSince, toBaseUnitBN } from '../../utils/number';\n\n/**\n *\n * @param {{userTokenBalance: BigNumber}} param0\n */\nfunction LiquidationHistory({ owner, token, isOwner, tokenDecimals, userTokenBalance }) {\n  const [maxLiquidatable, setMaxLiquidatable] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  const [amountToLiquidate, setAmtToLiquidate] = useState(0);\n\n  useEffect(() => {\n    async function updateLiquidatable() {\n      const maxToLiquidate = await getMaxLiquidatable(token, owner);\n      setMaxLiquidatable(toTokenUnitsBN(maxToLiquidate, tokenDecimals).toNumber());\n    }\n\n    updateLiquidatable();\n  });\n\n  useMemo(async () => {\n    async function updateList() {\n      const actions = await getLiquidationHistory(owner);\n      const actionsForThisVault = actions.filter(\n        (entry) => entry.vault.optionsContract.address === token\n      ).sort((actionA, actionB) => {\n        if(actionA.timestamp > actionB.timestamp) return -1;\n        return 1\n      });\n      setEntries(actionsForThisVault);\n      setIsLoading(false);\n    }\n    updateList();\n  }, [owner, token]);\n\n  return (\n    <>\n      {isOwner ? (\n        <></>\n      ) : (\n        <Box heading={'Liquidate'}>\n          <>\n            <div style={{ display: 'flex' }}>\n              {/* balance */}\n              <div style={{ width: '30%' }}>\n                <BalanceBlock asset={`Max To Liquidate`} balance={maxLiquidatable} />\n              </div>\n              <div style={{ width: '70%', paddingTop: '2%' }}>\n                <div style={{ display: 'flex' }}>\n                  <div style={{ width: '60%' }}>\n                    <>\n                      <TextInput\n                        type='number'\n                        wide={true}\n                        value={amountToLiquidate}\n                        onChange={(event) => {\n                          setAmtToLiquidate(event.target.value);\n                        }}\n                      />\n                      <MaxButton\n                        onClick={() => {\n                          const maximum = Math.min(userTokenBalance.toNumber(), maxLiquidatable);\n                          setAmtToLiquidate(maximum);\n                        }}\n                      />\n                    </>\n                  </div>\n                  <div style={{ width: '40%' }}>\n                    <Button\n                      disabled={maxLiquidatable <= 0}\n                      label='Liquidate'\n                      onClick={() => {\n                        const amtToLiquidate = toBaseUnitBN(\n                          amountToLiquidate,\n                          tokenDecimals\n                        ).toString();\n                        liquidate(token, owner, amtToLiquidate);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        </Box>\n      )}\n\n      {/* History Section */}\n      <Box heading={'History'}>\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Liquidator', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({ collateralToPay, liquidator, timestamp, transactionHash }) => {\n            return [\n              <TransactionBadge transaction={transactionHash} />,\n              formatDigits(fromWei(collateralToPay), 5),\n              <IdentityBadge entity={liquidator} />,\n              timeSince(parseInt(timestamp * 1000)),\n            ];\n          }}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default LiquidationHistory;\n","import React, { useState, useMemo } from 'react';\n\nimport { Box, DataView, IdentityBadge, TransactionBadge } from '@aragon/ui';\n\n\nimport { getExerciseHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\nfunction ExerciseHistory({ owner, token, collateralDecimals, tokenDecimals  }) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n  \n  useMemo(async () => {\n    const actions = await getExerciseHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n      {/* History Section */}\n      <Box heading={'History'}>\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Collateral', 'oToken', 'Exerciser', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({ amtCollateralToPay,  oTokensToExercise, exerciser, timestamp, transactionHash }) => {\n            return [\n              <TransactionBadge transaction={transactionHash} />,\n              formatDigits(\n                toTokenUnitsBN(amtCollateralToPay, collateralDecimals).toNumber(),\n                5\n              ),\n              formatDigits(\n                toTokenUnitsBN(oTokensToExercise, tokenDecimals).toNumber(),\n                5\n              ),\n              <IdentityBadge entity={exerciser} />,\n              timeSince(parseInt(timestamp * 1000)),\n            ];\n          }}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default ExerciseHistory;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Header, Tabs, Box, Timer, Button } from '@aragon/ui';\n\nimport HeaderDashboard from './HeaderDashboard';\nimport CollateralManagement from './CollateralManagement';\nimport IssuedTokenManagement from './IssuedTokenManagement';\nimport LiquidationHistory from './Liquidation';\nimport ExerciseHistory from './Exercise';\n\nimport { formatDigits, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getTokenBalance, getBalance, getDecimals } from '../../utils/infura';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { redeem } from '../../utils/web3';\n\nimport { options, ETH_ADDRESS } from '../../constants/contracts';\nimport BigNumber from 'bignumber.js';\n\nfunction ManageVault({ user }) {\n  let { token, owner } = useParams();\n\n  const option = options.find((option) => option.addr === token);\n  const { decimals, symbol, oracle, strike, strikePrice, minRatio, collateral, expiry } = option;\n\n  // Tab Navigation\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const [vault, setVault] = useState({});\n  const [strikeValueInCollateral, setStrikeValue] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(0);\n\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [userCollateralAssetBalance, setUserCollateralAssetBalance] = useState(new BigNumber(0));\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n  const [newRatio, setNewRatio] = useState(ratio);\n\n  const [collateralDecimals, setCollateralDecimals] = useState(18);\n  const collateralIsETH = collateral === ETH_ADDRESS;\n\n  const vaultUsesCollateral = collateral !== strike;\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateInfo() {\n      const vault = (await getAllVaultsForUser(owner)).find(\n        (vault) => vault.optionsContract.address === token\n      );\n      if (vault === undefined) {\n        return;\n      }\n      setNoVault(false);\n      let [_ownerTokenBalance, _userTokenBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getTokenBalance(token, user),\n      ]);\n\n      // SetUserCollateralAmount\n      let collateralBalance = new BigNumber(0)\n      let _collateralDecimals = 18;\n\n      if (collateralIsETH) {\n        collateralBalance = new BigNumber(await getBalance(user));\n      } else {\n        const _tokenBalance = await getTokenBalance(collateral, user);\n        _collateralDecimals = await getDecimals(collateral);\n        collateralBalance = toTokenUnitsBN(_tokenBalance, _collateralDecimals);\n      }\n\n      const _ownerTokenBalanceBN = toTokenUnitsBN(_ownerTokenBalance, decimals);\n      const _userTokenBalanceBN = toTokenUnitsBN(_userTokenBalance, decimals);\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral,\n        strike,\n        oracle\n      );\n      const ratio = calculateRatio(\n        vault.collateral,\n        vault.oTokensIssued,\n        strikePrice,\n        strikeValueInCollateral\n      );\n\n      if (!isCancelled) {\n        setStrikeValue(strikeValueInCollateral);\n        setVault(vault);\n        setCollateralDecimals(_collateralDecimals);\n        setOwnerTokenBalance(_ownerTokenBalanceBN);\n        setUserTokenBalance(_userTokenBalanceBN);\n        setRatio(formatDigits(ratio, 5));\n        setUserCollateralAssetBalance(collateralBalance);\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [\n    collateral,\n    collateralDecimals,\n    collateralIsETH,\n    decimals,\n    oracle,\n    owner,\n    strike,\n    strikePrice,\n    token,\n    user,\n    vaultUsesCollateral,\n  ]);\n\n  const isOwner = user === owner;\n\n  return noVault ? (\n    <div style={{ padding: 100, textAlign: 'center' }}> No Vault Found for this user </div>\n  ) : (\n    <>\n      <Header\n        primary={isOwner ? 'Manage Your Vault' : 'Vault Detail'}\n        secondary={\n          expiry * 1000 > Date.now() ? (\n            <Timer end={new Date(expiry * 1000)} />\n          ) : (\n            <Button onClick={() => redeem(token)} label={'Redeem'} />\n          )\n        }\n      />\n\n      <HeaderDashboard\n        owner={owner}\n        user={user}\n        ratio={ratio}\n        minRatio={minRatio}\n        vault={vault}\n        decimals={decimals}\n        symbol={symbol}\n        newRatio={newRatio}\n        useCollateral={vaultUsesCollateral}\n        collateralIsETH={collateralIsETH}\n        collateralDecimals={collateralDecimals}\n      />\n\n      <Tabs\n        items={['Collateral Management', 'Token Issuance', 'Liquidation', 'Exercise']}\n        selected={tabSelected}\n        onChange={setTabSelected}\n      />\n\n      {tabSelected === 0 ? (\n        <CollateralManagement\n          isOwner={isOwner}\n          vault={vault}\n          collateralAssetBalance={userCollateralAssetBalance}\n          collateralAsset={option.collateral}\n          token={token}\n          owner={owner}\n          strikeValue={strikeValueInCollateral}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 1 ? (\n        <IssuedTokenManagement\n          isOwner={isOwner}\n          vault={vault}\n          tokenBalance={ownerTokenBalance}\n          token={token}\n          strikeValue={strikeValueInCollateral}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          decimals={decimals}\n          symbol={symbol}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 2 ? (\n        vaultUsesCollateral ? (\n          <LiquidationHistory\n            userTokenBalance={userTokenBalance}\n            isOwner={isOwner}\n            owner={owner}\n            token={token}\n            tokenDecimals={decimals}\n          />\n        ) : (\n          <Box> This vault cannot be liquidated </Box>\n        )\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 3 ? (\n        <ExerciseHistory\n          owner={owner}\n          token={token}\n          tokenDecimals={decimals}\n          collateralDecimals={collateralDecimals}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default ManageVault;\n","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport BigNumber from 'bignumber.js'\n\nimport { BalanceBlock, AddressBlock } from '../common';\n\n/**\n * \n * @param {{ poolTokenBalance: BigNumber, poolETHBalance: BigNumber }}  \n */\nconst HeaderDashboard = ({ symbol, poolETHBalance, poolTokenBalance, uniswapExchange }) => {\n  return (\n    <div style={{ padding: '2%', display: 'flex',  alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset='Total ETH Liquidity' balance={poolETHBalance} />\n      </div>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset={`${symbol} Liquidity`} balance={poolTokenBalance} />\n      </div>\n      <div style={{ width: '40%' }}>\n        <>\n          <AddressBlock label=\"Uniswap Contract\" address={uniswapExchange} />\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState } from 'react';\n\nimport { buyOTokensFromExchange, sellOTokensFromExchange } from '../../utils/web3';\n\nimport { getPremiumToPay, getPremiumReceived } from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN, fromWei } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\n/**\n * \n * @param {{\n *  decimals: number\n *  tokenBalance: BigNumber\n * }} param0 \n */\nfunction OptionExchange({ symbol, tokenBalance, token, exchange, decimals }) {\n  const [buyAmt, setBuyAmt] = useState(new BigNumber(0));\n  const [sellAmt, setSellAmt] = useState(new BigNumber(0));\n  const [premiumToPay, setPremiumToPay] = useState(new BigNumber(0));\n  const [premiumReceived, setPremiumReceived] = useState(new BigNumber(0));\n\n  const updatePremiumToPay = async (buyAmt) => {\n    const butAmountBN = new BigNumber(buyAmt)\n    if (butAmountBN.lte(new BigNumber(0))) {\n      setPremiumToPay(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(butAmountBN, decimals).toString();\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(new BigNumber(fromWei(premium)));\n  };\n\n  const updatePremiumReceived = async (sellAmt) => {\n    const sellAmountBN = new BigNumber(sellAmt)\n    if (sellAmountBN.lte(new BigNumber(0))) {\n      setPremiumReceived(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(sellAmountBN, decimals).toString();\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(new BigNumber(premium));\n  };\n\n  return (\n    <Box heading={'Exchange'}>\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`${symbol} Balance`} balance={tokenBalance} />\n        </div>\n        {/* Buy Token from Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={buyAmt}\n                  onChange={(event) => {\n                    if(event.target.value){\n                      setBuyAmt(event.target.value);\n                      updatePremiumToPay(event.target.value);\n                    } else {\n                      setBuyAmt(new BigNumber(0));\n                      updatePremiumToPay(new BigNumber(0));\n                    }\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Buy'\n                onClick={() => {\n                  buyOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(buyAmt, decimals).toString(),\n                    toBaseUnitBN(premiumToPay, 18).toString()\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label='Cost:' amt={premiumToPay.toString()} symbol='' />\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={sellAmt}\n                  onChange={(event) => {\n                    if(event.target.value) {\n                      setSellAmt(event.target.value);\n                      updatePremiumReceived(event.target.value);\n                    } else {\n                      setSellAmt(new BigNumber(0))\n                      updatePremiumReceived(new BigNumber(0));\n                    }\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setSellAmt(tokenBalance);\n                    updatePremiumReceived(tokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Sell'\n                onClick={() => {\n                  sellOTokensFromExchange(\n                    token, \n                    exchange, \n                    toBaseUnitBN(sellAmt, decimals).toString()\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label='Premium' amt={premiumReceived} />\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default OptionExchange;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js'\nimport { addLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconEthereum } from '@aragon/ui';\n\n/**\n * \n * @param {{ \n * poolTokenBalance: BigNumber, \n * poolETHBalance:BigNumber, \n * liquidityTokenSupply: BigNumber, \n * userTokenBalance: BigNumber, \n * userETHBalance:BigNumber \n * uniswapExchange: string\n * }} param0 \n */\nfunction AddLiquidity({ \n  otoken, \n  otokenSymbol, \n  otokenDecimals, \n  userTokenBalance, \n  userETHBalance,\n  uniswapExchange,\n  poolTokenBalance, \n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply\n}) {\n  const SLIPPAGE_RATE = 2;\n\n\n  const [amtETHToAdd, setAmtETHToAdd] = useState(new BigNumber(0));\n  const [amtTokenToAdd, setAmtTokenToAdd] = useState(new BigNumber(0));\n\n  const liquidityMinted = (liquidityTokenSupply.times( amtETHToAdd)).div(poolETHBalance);\n  const liquidityMintedMin = (liquidityMinted.times(new BigNumber(100 - SLIPPAGE_RATE))).div(new BigNumber(100))\n  const ethToTokenRatio = poolETHBalance.div(poolTokenBalance);\n  const tokenToEthRatio = poolTokenBalance.div(poolETHBalance);\n\n  const onChangeETHAmtToSend = (ethAmt) => {\n    if (!ethAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return\n    }\n\n    const newTokenAmt = (new BigNumber(ethAmt).times(tokenToEthRatio));\n    setAmtETHToAdd(new BigNumber(ethAmt));\n    setAmtTokenToAdd(newTokenAmt);\n  };\n\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return\n    }\n\n    const newEthAmt = new BigNumber(tokenAmt).times(ethToTokenRatio);\n    setAmtETHToAdd(newEthAmt);\n    setAmtTokenToAdd(new BigNumber(tokenAmt));\n  };\n\n  return (\n    <Box heading={'Add Liquidity'}>\n      <div style={{ display: 'flex' }}>\n        {/* Pool Status */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`ETH Balance`} balance={userETHBalance} />\n        </div>\n        {/* Add Liquidity too pool */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <TextInput\n                  adornmentPosition='end'\n                  adornment={otokenSymbol}\n                  type='number'\n                  wide={true}\n                  value={amtTokenToAdd.toNumber()}\n                  onChange={(event) => {\n                    onChangeTokenAmtToSend(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    onChangeTokenAmtToSend(userTokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition='end'\n                adornment={<IconEthereum />}\n                type='number'\n                wide={true}\n                value={amtETHToAdd.toNumber()}\n                onChange={(event) => {\n                  onChangeETHAmtToSend(event.target.value);\n                }}\n              />\n              <PriceSection label='Mint' amt={liquidityMinted} symbol='Pool Tokens' />\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Add Liquidity'\n                onClick={() => {\n                  const maxToken = toBaseUnitBN(amtTokenToAdd, otokenDecimals).toString();\n                  const minLiquidity = toBaseUnitBN(liquidityMintedMin, liquidityTokenDecimals).toString();\n                  const ethWei = toBaseUnitBN(amtETHToAdd, 18).toString()\n                  addLiquidity(\n                    otoken,\n                    uniswapExchange,\n                    maxToken,\n                    minLiquidity,\n                    ethWei\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\n\n\nexport default AddLiquidity;\n","import React, { useState } from 'react';\n\nimport { removeLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { Box, TextInput, Button, IconCircleMinus, IconFundraising } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\n/**\n * \n * @param {{\n *  otokenDecimals: number,\n *  liquidityTokenDecimals: number,\n *  otokenSymbol: string,\n *  uniswapExchange: string\n *  userliquidityTokenBalance: BigNumber\n *  poolTokenBalance: BigNumber\n *  poolETHBalance: BigNumber\n *  liquidityTokenDecimals: BigNumber\n *  liquidityTokenSupply: BigNumber\n * \n * }} param0 \n */\nfunction RemoveLiquidity({ \n  otokenSymbol, \n  otokenDecimals, \n  userliquidityTokenBalance,\n  uniswapExchange, \n  poolTokenBalance, \n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply\n}) {\n  const SLIPPAGE_RATE = 2;\n\n  const [amtLiquidityTokenToSell, setAmtLiquidityTokenToSell] = useState(new BigNumber(0));\n\n  const poolPortion = amtLiquidityTokenToSell.div(liquidityTokenSupply)\n  const estETHRecieved = poolETHBalance.times(poolPortion)\n  const estOTokenReceived = poolTokenBalance.times(poolPortion)\n\n  const minETHReceived = estETHRecieved.times( new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100))\n  const minTokenReceived = estOTokenReceived.times( new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100))\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if(!tokenAmt) {\n      setAmtLiquidityTokenToSell(new BigNumber(0))\n      return\n    }\n    const tokenAmtBN = new BigNumber(tokenAmt)\n    setAmtLiquidityTokenToSell(tokenAmtBN)\n  };\n\n  return (\n    <Box heading={'Remove Liquidity'}>\n      <div style={{ display: 'flex' }}>\n        {/* Pool Token in Hold */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`Pool Token Balance`} balance={userliquidityTokenBalance} />\n        </div>\n        {/* Remove */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition='end'\n                adornment={<IconFundraising />}\n                type='number'\n                wide={true}\n                value={amtLiquidityTokenToSell.toNumber()}\n                onChange={(event) => {\n                  onChangeTokenAmtToSend(event.target.value);\n                }}\n              />\n              <MaxButton\n                onClick={()=>setAmtLiquidityTokenToSell(userliquidityTokenBalance)}\n              />\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n              <PriceSection label='You get' amt={estETHRecieved} symbol='ETH' />\n              <PriceSection label='+' amt={estOTokenReceived} symbol={otokenSymbol} />\n              </>\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Remove Liquidity'\n                onClick={() => {\n                  const amt = toBaseUnitBN(amtLiquidityTokenToSell, liquidityTokenDecimals).toString()\n                  const min_eth = toBaseUnitBN(minETHReceived, 18).toString()\n                  const min_token = toBaseUnitBN(minTokenReceived, otokenDecimals).toString()\n                  \n                  removeLiquidity(\n                    uniswapExchange,\n                    amt,\n                    min_eth,\n                    min_token\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default RemoveLiquidity;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport { getTokenBalance, getBalance, getERC20Info } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number'\n\n\nimport { options } from '../../constants/contracts';\n\nimport DashBoard from './Header';\nimport OptionExchange from './OptionExchange'\n\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity'\nimport BigNumber from 'bignumber.js';\n\nfunction ManagePool({ user }) {\n\n  let { token } = useParams();\n\n  const option = options.find((option) => option.addr === token);\n  const { uniswapExchange, decimals, symbol, exchange } = option;\n\n  const [poolTokenBalance, setPoolTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [poolETHBalance, setPoolETHBalance] = useState(new BigNumber(0));\n  const [userETHBalance, setUserETHBalance] = useState(new BigNumber(0));\n\n  const [userliquidityTokenBalance, setUserLiquidityTokenBalance] = useState(new BigNumber(0));\n  const [liquidityTokenSupply, setLiquidityTokenSupply] = useState(new BigNumber(0));\n  const [liquidityTokenDecimals, setLiquidityTokenDecimals] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      let [exTokenBalance, exchagneETHBalance, liquidityTokenInfo] = await Promise.all([\n        getTokenBalance(token, uniswapExchange),\n        getBalance(uniswapExchange),\n        getERC20Info(uniswapExchange),\n      ]);\n      const { decimals: liqTokenDecimal, totalSupply: liqTokenTotalSupply } = liquidityTokenInfo;\n      const exchangeTokenBalance = toTokenUnitsBN(exTokenBalance, decimals);\n      if (!isCancelled) {\n        setLiquidityTokenDecimals(liqTokenDecimal);\n        setLiquidityTokenSupply(new BigNumber(liqTokenTotalSupply));\n        setPoolETHBalance(new BigNumber(exchagneETHBalance));\n        setPoolTokenBalance(exchangeTokenBalance);\n      }\n    }\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, token, uniswapExchange]);\n\n  useEffect(() => {\n    if (user === '') return;\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      let [tokenBalance, userETHBalance, liqTokenBalance] = await Promise.all([\n        getTokenBalance(token, user),\n        getBalance(user),\n        getTokenBalance(uniswapExchange, user),\n      ]);\n\n      const userTokenBalance = toTokenUnitsBN(tokenBalance, decimals);\n      const userLiqTokenBalance = toTokenUnitsBN(liqTokenBalance, liquidityTokenDecimals);\n      if (!isCancelled) {\n        setUserLiquidityTokenBalance(userLiqTokenBalance);\n        setUserETHBalance(userETHBalance);\n        setUserTokenBalance(userTokenBalance);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, liquidityTokenDecimals, token, uniswapExchange, user]);\n\n  return (\n    <>\n      <Header primary='Exchange' />\n\n      <DashBoard\n        user={user}\n        symbol={symbol}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        uniswapExchange={uniswapExchange}\n      />\n\n      <OptionExchange\n        symbol={symbol}\n        tokenBalance={userTokenBalance}\n        token={token}\n        exchange={exchange}\n        decimals={decimals}\n      />\n\n      <Header primary='Provide Liquidity' />\n\n      <AddLiquidity\n        user={user}\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n\n      <RemoveLiquidity\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n    </>\n  );\n}\n\nexport default ManagePool;\n","import React from 'react'\n\nimport { Link } from '@aragon/ui'\n\nfunction Footer({theme}) {\n  var style = {\n    backgroundColor: theme === 'light' ? \"#F8F8F8\" : '#35425e' ,\n    textAlign: \"center\",\n    padding: \"17px\",\n    position: \"fixed\",\n    left: \"0\",\n    bottom: \"0\",\n    height: \"50px\",\n    width: \"100%\",\n    fontSize: \"12px\"\n  }\n\n  return (  \n    <div style={style}>\n      Powered By {' '}\n      <Link  external={true} href=\"https://opyn.co/#/\">Opyn</Link>{', '} \n      <Link  external={true} href=\"https://ui.aragon.org/\">Aragon UI</Link>{', '}  \n      <Link  external={true} href=\"https://www.blocknative.com/\">Blocknative</Link>{'. '}  \n      <Link  external={true} href=\"https://www.kollateral.co/\">Kollateral</Link>{'. '}  \n      Hosted on <Link  external={true} href=\"https://github.com/antoncoding/opyn-liquidator\">GitHub</Link>.\n    </div>\n  )\n}\n\nexport default Footer","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { updateModalMode } from './utils/web3'\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage'\nimport AllOptoins from './components/AllContracts';\nimport Trade from './components/Trade'\nimport MyVaults from './components/MyVaults'\nimport OptionPage from './components/OptionPage';\nimport ManageVault from './components/ManageVault'\nimport ManagePool from './components/ManagePool'\nimport Footer from './components/Footer';\nimport { Main } from '@aragon/ui';\n\nfunction App() {\n  const storedTheme = window.localStorage.getItem('theme') || 'light';\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (theme) => {\n    setTheme(theme);\n    updateModalMode(theme)\n    window.localStorage.setItem('theme', theme);\n  };\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          {/* All Options */}\n          <Route path='/option/:token' children={<OptionPage user={user} />} />\n          <Route path='/options/' children={<AllOptoins />} />\n          {/* My Vaults */}\n          <Route path='/myvaults' children={<MyVaults user={user} />} />\n          <Route path='/manage/:token/:owner' children={<ManageVault user={user}/>} />\n          {/* Trade */}\n          <Route path='/trade/:token/' children={<ManagePool user={user} />} />\n          <Route path='/trade/' children={<Trade/>} />\n          {/* HomePage */}\n          <Route path='/' children={<HomePage/>} />\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}