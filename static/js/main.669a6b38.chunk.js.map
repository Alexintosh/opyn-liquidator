{"version":3,"sources":["utils/web3.js","utils/blockNative.js","utils/infura.js","constants/options.js","components/NavBar/ConnectButton.js","components/NavBar/SettingsButton.js","components/NavBar/index.js","components/HomePage/index.js","components/AllContracts/index.js","components/Trade/index.js","components/common/AddressBlock.js","components/common/BalanceBlock.js","components/common/RatioTag.js","components/common/SectionTitle.js","components/common/MaxButton.js","components/common/HelpText.js","components/common/VaultButton.js","utils/graph.js","utils/number.js","utils/calculation.js","components/MyVaults/index.js","components/OptionPage/VaultModal.js","components/OptionPage/VaultsList.js","components/OptionPage/OptionInfoBox.js","components/OptionPage/index.js","components/ManageVault/HeaderDashboard.js","components/ManageVault/CollateralManagement.js","components/ManageVault/IssuedTokenManagement.js","components/ManageVault/Liquidation.js","components/ManageVault/index.js","components/ManagePool/Header.js","components/ManagePool/OptionExchange.js","components/ManagePool/AddLiquidity.js","components/ManagePool/RemoveLiquidity.js","components/ManagePool/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["web3","notify","Notify","dappId","networkId","optionContractABI","require","optionExchangeABI","oracleABI","Web3","getTokenBalance","erc20Token","user","a","oTokenContract","eth","Contract","methods","balanceOf","call","balance","parseInt","getDecimals","decimals","getERC20Symbol","symbol","getERC20Info","address","token","totalSupply","totalSupplyDecimals","getMaxLiquidatable","oToken","vaultOwner","maxOTokensLiquidatable","maxVaultLiquidatable","getAllowance","contract","spender","allowance","getBalance","utils","fromWei","getPrice","oracleAddr","oracle","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","exchange","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","options","addr","title","name","collateral","underlying","strike","strikePrice","minRatio","uniswapExchange","ETH_ADDRESS","oTokenABI","exchangeABI","uniswapExchangeABI","UINT256_MAX","storedTheme","window","localStorage","getItem","onboard","Onboard","darkMode","subscriptions","wallet","provider","walletSelect","description","wallets","walletName","infuraKey","apiKey","updateModalMode","theme","config","connect","walletCheck","getState","disconnect","walletReset","checkConnectedAndGetAddress","checked","liquidate","oTokenAddr","owner","liquidateAmt","account","send","from","on","hash","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmt","value","toWei","toString","addERC20Collateral","collateralAmt","collateralAmtBN","BigNumber","lt","collateralToken","approve","removeCollateral","amtInETH","amt","openVault","buyOTokensFromExchange","buyOTokens","sellOTokensFromExchange","sellOTokens","addLiquidity","uniswapAddr","maxToken","minLiquidity","ethValue","deadline","Math","ceil","Date","now","removeLiquidity","pool_token_amount","min_eth","min_tokens","min_eth_wei","ConnectButton","setUser","useState","isConnected","setIsConnected","connectWeb3","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","padding","entity","icon","label","ChangeMode","updateTheme","LinkButton","paddingLeft","opacity","fontSize","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","height","goBack","push","secondary","MainButton","iconUrl","width","alt","src","HomePage","display","alignItems","marginRight","marginLeft","AllContracts","fields","entries","entriesPerPage","renderEntry","shorten","goToToken","goToTrade","AddressBlock","BalanceBlock","asset","integer","digits","str","split","length","RatioTag","isSafe","ratio","useCollateral","background","color","mode","SectionTitle","MaxButton","HelperText","parseFloat","toFixed","ManageVaultButton","goToManagePage","OpenVaultButton","getAllVaultsForOption","optionAddress","query","postQuery","response","vaults","data","getAllVaultsForUser","actions","getLiquidationHistory","liquidationActionsQuery","liquidateActions","method","headers","body","JSON","stringify","fetch","res","json","toBaseUnitString","rawAmt","raw","base","decimalsBN","times","pow","formatDigits","num","percision","handleDecimals","decimal","round","formatETHAmtToStr","amtInEth","strETHSegments","int","slice","toTokenUnits","tokenAmount","tokenDecimals","timeSince","timeStamp","secondsPast","getTime","ts","getDate","toDateString","match","replace","getFullYear","compareVaultRatio","vaultA","vaultB","rateA","rateB","comparison","calculateStrikeValueInCollateral","collateralDecimals","undefined","strikeValueInWei","strikeValueInCollateral","toNumber","collateralValueInWei","calculateRatio","tokenIssued","Infinity","colalteralBN","tokenIssuedBN","strikePriceBN","strikeValueInCollateralBN","div","Promise","MyVaults","opendVaults","setOpenedVaults","tokensToOpen","setTokensToOpen","useMemo","userVaults","openedVaults","notOpenedTokens","map","option","entry","find","vault","optionsContract","isOpened","collatearlIsETH","oTokensIssued","oTokenName","sort","paddingBottom","VaultModal","collateralAsset","collateralIsETH","opened","setOpened","addValue","setAddValue","setLiquidateAmt","isCancelled","maxLiquidatable","getData","visible","onClose","heading","type","wide","adornment","adornmentPosition","onChange","event","target","disabled","VaultOwnerList","setCollateralDecimals","vaultUsesCollateral","isLoading","setIsLoading","setVaults","_decimals","updateInfo","vaultDetail","id","setInterval","clearInterval","status","OptionOverview","tokenName","setBalance","setTotalSupply","all","tokenInfo","init","OptionPage","useParams","OptionInfoBox","VaultsList","HeaderDashboard","newRatio","tokenInUnit","collateralBalance","CollateralManagement","isOwner","collateralAssetBalance","strikeValue","setNewRatio","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","collateralSymbol","setCollateralSymbol","updateNewRatio","newCollateral","amtRaw","newCollateralInWei","plus","collateralBalanceRaw","newCollateralWei","minus","minCollateral","maxToRemove","maxToRemoveInTokenUnit","IssuedTokenManagement","tokenBalance","setIssueAmt","setBurnAmt","newAmt","maxTotal","maxToIssue","issued","Number","maxToBurn","min","LiquidationHistory","userTokenBalance","setMaxLiquidatable","setEntries","amountToLiquidate","setAmtToLiquidate","maxToLiquidate","updateLiquidatable","actionsForThisVault","filter","updateList","maximum","amtToLiquidate","collateralToPay","liquidator","timestamp","transactionHash","transaction","ManageVault","tabSelected","setTabSelected","setVault","setStrikeValue","setRatio","ownerTokenBalance","setOwnerTokenBalance","setUserTokenBalance","userCollateralAssetBalance","setUserCollateralAssetBalance","noVault","setNoVault","_ownerTokenBalance","_userTokenBalance","_collateralDecimals","_tokenBalance","textAlign","items","selected","Liquidation","poolETHBalance","poolTokenBalance","PriceSection","OptionExchange","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","updatePremiumToPay","amount","premium","updatePremiumReceived","AddLiquidity","otoken","otokenSymbol","otokenDecimals","userETHBalance","liquidityTokenDecimals","liquidityTokenSupply","amtETHToAdd","setAmtETHToAdd","amtTokenToAdd","setAmtTokenToAdd","liquidityMinted","liquidityMintedMin","ethToTokenRatio","tokenToEthRatio","onChangeTokenAmtToSend","tokenAmt","newTokenAmt","onChangeETHAmtToSend","RemoveLiquidity","userliquidityTokenBalance","amtLiquidityTokenToSell","setAmtLiquidityTokenToSell","poolPortion","estETHRecieved","estOTokenReceived","minETHReceived","minTokenReceived","min_token","ManagePool","setPoolTokenBalance","setPoolETHBalance","setUserETHBalance","setUserLiquidityTokenBalance","setLiquidityTokenDecimals","setLiquidityTokenSupply","updatePoolInfo","exchangeTokenBalance","exchagneETHBalance","liquidityTokenInfo","liqTokenDecimal","liqTokenTotalSupply","updateUserInfo","liqTokenBalance","userLiqTokenBalance","Footer","backgroundColor","position","left","bottom","external","href","App","setTheme","assetsUrl","process","setItem","path","children","Trade","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.669a6b38.chunk.js","sourcesContent":["import Web3 from 'web3';\nimport BigNumber from 'bignumber.js'\nimport Onboard from 'bnc-onboard';\n\nimport { notify } from './blockNative';\nimport { getAllowance } from './infura';\nimport { ETH_ADDRESS } from '../constants/options'\n\nconst oTokenABI = require('../constants/abi/OptionContract.json');\nconst exchangeABI = require('../constants/abi/OptionExchange.json');\nconst uniswapExchangeABI = require('../constants/abi/UniswapExchange.json');\n\nconst DEADLINE_FROM_NOW = 60 * 15;\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nconst storedTheme = window.localStorage.getItem('theme')\n\nconst onboard = Onboard({\n  darkMode: storedTheme==='dark',\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06', // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  walletSelect: {\n    description: \"Please select a wallet to connect to Opyn Dashboard\",\n    wallets: [\n      { walletName: 'metamask' },\n      {\n        walletName: 'walletConnect',\n        infuraKey: '44fd23cda65746a699a5d3c0e2fa45d5'\n      },\n      {\n        walletName: 'fortmatic',\n        apiKey: 'pk_live_3009900A5E842CD5'\n      },\n      { walletName: 'trust' },\n      { walletName: 'coinbase' },\n      { walletName: \"status\" },\n    ]\n  }\n});\n\nlet web3;\n\nexport const updateModalMode = async(theme) => {\n  const darkMode = theme === 'dark'\n  onboard.config({ darkMode })\n}\n\nexport const connect = async () => {\n  const selected = await onboard.walletSelect();\n  if (!selected) return false\n  const checked = await onboard.walletCheck();\n  if(!checked) return false\n  return onboard.getState().address;\n};\n\nexport const disconnect = async() => {\n  onboard.walletReset()\n}\n\nexport const checkConnectedAndGetAddress = async() => {\n  let checked = false\n  try {\n    checked = await onboard.walletCheck();\n  } catch (error) {\n    await onboard.walletSelect()\n    checked = await onboard.walletCheck();\n    \n  } finally {\n    if (checked) return onboard.getState().address;\n  }\n}\n\nexport const liquidate = async (oTokenAddr, owner, liquidateAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .liquidate(owner, parseInt(liquidateAmt))\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const burnOToken = async (oTokenAddr, burnAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .burnOTokens(burnAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const issueOToken = async (oTokenAddr, issueAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .issueOTokens(issueAmt, account)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .addETHCollateral(owner)\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * \n * @param {string} collaral \n * @param {string} oTokenAddr \n * @param {string} owner \n * @param {number} collateralAmt in min unit\n */\nexport const addERC20Collateral = async (collateral, oTokenAddr, owner, collateralAmt) => {\n  const collateralAmtBN = new BigNumber(collateralAmt)\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const allowance = await getAllowance(collateral, account, oTokenAddr);\n  // Approve to move collateral \n  if (new BigNumber(allowance).lt(collateralAmtBN)) {\n    const collateralToken = new web3.eth.Contract(oTokenABI, collateral)\n    await collateralToken.methods\n      .approve(oTokenAddr, UINT256_MAX)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } \n  await oToken.methods\n    .addERC20Collateral(owner, collateralAmtBN.toString())\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n\n}\n\n/**\n * \n * @param {*} collateral \n * @param {*} oTokenAddr \n * @param {number} collateralAmt eth: in eth. other: in base unit\n */\nexport const removeCollateral = async (collateral, oTokenAddr, collateralAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if(collateral === ETH_ADDRESS) {\n    const amtInETH = collateralAmt.toString()\n    await oToken.methods\n      .removeCollateral(web3.utils.toWei(amtInETH))\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    await oToken.methods\n      .removeCollateral(collateralAmt.toString())\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\n\nexport const approve = async (oTokenAddr, spender, amt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVault = async (oTokenAddr) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .openVault()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Option Exchange\n\nexport const buyOTokensFromExchange = async (oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .buyOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      buyAmt\n    )\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const sellOTokensFromExchange = async (oTokenAddr, exchangeAddr, sellAmt) => {\n  const account = await checkConnectedAndGetAddress()  \n  const allowance = await getAllowance(oTokenAddr, account, exchangeAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(sellAmt))) {\n    await approve(oTokenAddr, exchangeAddr, UINT256_MAX);\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .sellOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      sellAmt\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Uniswap Exchange\n\n/**\n *\n */\nexport const addLiquidity = async (oToken, uniswapAddr, maxToken, minLiquidity, ethValue) => {\n  const account = await checkConnectedAndGetAddress()\n  const allowance = await getAllowance(oToken, account, uniswapAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(maxToken))) {\n    await approve(oToken, uniswapAddr, UINT256_MAX);\n  }\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .addLiquidity(\n      minLiquidity, // min_liquidity\n      maxToken, // max_tokens\n      deadline // deadline\n    )\n    .send({ from: account, value: web3.utils.toWei(ethValue) - 1 })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n */\nexport const removeLiquidity = async (uniswapAddr, pool_token_amount, min_eth, min_tokens) => {\n  const account = await checkConnectedAndGetAddress()\n  const min_eth_wei = web3.utils.toWei(min_eth);\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .removeLiquidity(pool_token_amount, min_eth_wei, min_tokens, deadline)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","import Notify from \"bnc-notify\"\n\nexport const notify = Notify({\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06',\n  networkId: 1\n});\n\n","import Web3 from 'web3';\n\nconst optionContractABI = require('../constants/abi/OptionContract.json');\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json');\nconst oracleABI = require('../constants/abi/Oracle.json');\n\nconst Promise = require('bluebird');\nconst web3 = new Web3('https://mainnet.infura.io/v3/44fd23cda65746a699a5d3c0e2fa45d5');\n\n// ERC20 Info\n\nexport const getTokenBalance = async (erc20Token, user) => {\n  if (user === '') return '0'\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const balance = await oTokenContract.methods.balanceOf(user).call();\n  return parseInt(balance);\n};\n\nexport const getDecimals = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const decimals = await oTokenContract.methods.decimals().call();\n  return parseInt(decimals);\n};\n\nexport const getERC20Symbol = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  return await oTokenContract.methods.symbol().call();\n}\n\nexport const getERC20Info = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const totalSupplyDecimals = await token.methods.totalSupply().call();\n  const decimals = await token.methods.decimals().call();\n  const totalSupply = parseInt(totalSupplyDecimals) / 10 ** parseInt(decimals);\n  return { decimals, totalSupply };\n};\n\n// Option Contract\n\n/**\n * todo: use graph ql\n * @param {Array<string>} owners\n * @param {string} oToken\n */\nexport const getVaults = async (owners, oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n\n  const vaults = await Promise.map(owners, async (owner) => {\n    const res = await oTokenContract.methods.getVault(owner).call();\n    const collateral = web3.utils.fromWei(res[0]);\n    const oTokensIssued = res[1];\n    const underlying = res[2];\n    return { collateral, oTokensIssued, underlying, owner, oToken };\n  });\n  return vaults;\n};\n\n/**\n * Compare user balance with max liquidatable and decide max liquidatable\n * @param {string} oToken \n * @param {string} owner \n * @param {string} liquidator \n */\nexport const getMaxToLiquidate = async (oToken, owner, liquidator) => {\n  const maxVaultLiquidatable = await getMaxLiquidatable(oToken, owner)\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const userbalance = liquidator ? await oTokenContract.methods.balanceOf(liquidator).call() : 0;\n\n  const maxLiquidatable = Math.min(\n    parseInt(userbalance, 10),\n    parseInt(maxVaultLiquidatable, 10)\n  ).toString();\n\n  return parseInt(maxLiquidatable);\n};\n\n/**\n * Max liquidatable for given vault\n * @param {string} oToken \n * @param {string} owner \n * @return {Promise<number>}\n */\nexport const getMaxLiquidatable = async (oToken, vaultOwner) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable = await oTokenContract.methods.maxOTokensLiquidatable(vaultOwner).call();\n  return parseInt(maxVaultLiquidatable)\n}\n\nexport const getAssetsAndOracle = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const [oracle, underlying, strike, minRatioObj, strikePriceObj] = await Promise.all([\n    token.methods.COMPOUND_ORACLE().call(),\n    token.methods.underlying().call(),\n    token.methods.strike().call(),\n    token.methods.minCollateralizationRatio().call(),\n    token.methods.strikePrice().call(),\n  ]);\n  const strikePrice = strikePriceObj[0] * 10 ** strikePriceObj[1];\n  const minRatio = minRatioObj[0] * 10 ** minRatioObj[1];\n  return { underlying, strike, minRatio, strikePrice, oracle };\n};\n\nexport const getAllowance = async (contract, user, spender) => {\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call();\n  return allowance;\n};\n\n/**\n * Get balance in eth for the account\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  if (address === '') return '0'\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\n/**\n * Get price of token in unit of wei\n * @param {string} oracleAddr \n * @param {string} token \n * @returns {Promise<string>}\n */\nexport const getPrice = async (oracleAddr, token) => {\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return price; // unit: wei/ per token\n};\n\n// Option Exchange\nexport const getPremiumToPay = async (exchangeAddr, tokenToBuy, buyAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const paymentToken = '0x0000000000000000000000000000000000000000';\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call();\n  return web3.utils.fromWei(premiumToPay);\n};\n\nexport const getPremiumReceived = async (exchangeAddr, tokenToSell, sellAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const payoutToken = '0x0000000000000000000000000000000000000000';\n  const premiumReceived = await exchange.methods\n    .premiumReceived(tokenToSell, payoutToken, sellAmt)\n    .call();\n  return web3.utils.fromWei(premiumReceived);\n};\n\n// uniswapExchange","export const options = [\n  {\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    title: 'cDai Insurance',\n\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xA6923533A6362008e9b536271C2Bdc0FF1467D3c'\n  },\n  {\n    addr: '0x87fe8eba753076a943bd2a5f6c3556188064797e',\n    title: 'Opyn ETH Put $100',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 03/30/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    underlying: \"0x0000000000000000000000000000000000000000\",\n    strike: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n    strikePrice: 1e-6,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xA680B19749672A632e1E493Be7807638A57c952F'\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\",\n    strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xE3A0a2431a093fed99037987eD0A88550e5E79AA'\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n     // constants in contract\n     symbol: 'oCRV',\n     name: 'Opyn y.curve.fi Insurance',\n     decimals: 8,\n     oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n     collateral: '0x0000000000000000000000000000000000000000',\n     underlying: \"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8\",\n     strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n     strikePrice: 9.2e-16,\n     minRatio: 1.6,\n     exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n     uniswapExchange: '0x21f5E9D4Ec20571402A5396084B1634314A68c97'\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 2e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x8a0976500EED661202810bAB030a057DF15c4CC9'\n  },\n]\n\nexport const ETH_ADDRESS = '0x0000000000000000000000000000000000000000'","import React, { useState } from 'react';\nimport { Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase } from '@aragon/ui';\n\nimport { connect, disconnect } from '../../utils/web3';\n\nfunction ConnectButton({ user, setUser }) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n    return true;\n  };\n\n  const disconnectWeb3 = async () => {\n    await disconnect();\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{paddingTop: 5, paddingRight: 5}}>\n      <LinkBase onClick={disconnectWeb3} size='small' > <IconPower /> </LinkBase>\n      </div>\n      <Box padding={6}>\n        <IdentityBadge entity={user} />\n      </Box>\n      \n    </>\n  ) : (\n    <Button icon={<IconConnect />} label={'Connect'} onClick={connectWeb3} />\n  );\n}\n\nexport default ConnectButton;\n","import React from 'react';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\nfunction ChangeMode({theme, updateTheme}) {\n\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark')\n    else updateTheme('light')\n  }\n\n    return (\n      <Button \n      icon={ theme === 'dark' ? <IconStar/> : <IconStarFilled/>} \n      onClick={handleChangeTheme}\n      label={ 'Theme' }\n      />\n    );\n  \n}\n\nexport default ChangeMode;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SettingsButton';\nimport { Bar, BackButton, LinkBase } from '@aragon/ui';\n\nfunction NavBar({ theme, updateTheme, user, setUser }) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n\n  return (\n    <Bar\n      primary={\n        isHome ? (\n          <></>\n        ) : (\n          <>\n            <div style={{ height: '100%' }}>\n              <BackButton onClick={()=>{\n                history.goBack();\n              }} />\n            </div>\n            <LinkButton title='My Vaults' onClick={()=>{history.push('/myvaults/')}} />\n            <LinkButton title='All Contracts' onClick={()=>{history.push('/options/')}} />\n            <LinkButton title='Trade' onClick={()=>{history.push('/trade/')}} />\n          </>\n        )\n      }\n      secondary={\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      }\n    ></Bar>\n  );\n}\n\nfunction LinkButton ({title, onClick}){\n  return(\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}> \n        <div style={{padding: '1%', opacity:0.5, fontSize: 17}}>\n            {title}\n        </div>\n        </LinkBase>\n    </div>\n  )\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Header, Box, LinkBase } from '@aragon/ui';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header primary='Welcome to Opyn Dashboard' />\n      <div style={{ padding: 5, opacity: 0.5 }}> Tools for DeFi Risk Management. </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%', marginRight: '3%' }}>\n          <MainButton title='My Vaults' description='Manage collateral, Mint/Burn oTokens' iconUrl='https://opyn.co/static/media/1.68813886.svg'  onClick={()=>{\n            history.push('/myvaults')\n          }} />\n        </div>\n\n        <div style={{ width: '30%' }}>\n          <MainButton title='All Contracts' description=' Monitor and liquidate vaults.' iconUrl='https://opyn.co/static/media/2.18d22be0.svg'  onClick={()=>{\n            history.push('/options/')\n          }} />\n        </div>\n\n        <div style={{ width: '30%', marginLeft: '3%' }}>\n          <MainButton title='Trade' description='Buy, Sell or Provided Liquidity.' iconUrl='https://opyn.co/static/media/3.4da8b24d.svg'  onClick={()=>{\n            history.push('./trade')\n          }} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction MainButton({ title, description, iconUrl, onClick }) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding:10, fontSize: 18 }}>{title}</div>\n        <img alt='icon' style={{ padding:10, height:64 }} src={iconUrl}></img>\n        <div style={{ paddingTop: 5, opacity: 0.5 }}> {description} </div>\n        \n      </Box>\n    </LinkBase>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/options';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToToken = (addr) => {\n    history.push(`/option/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='All Contracts' />\n      <div style={{padding: 5, opacity:0.5}}> Choose an option contract to proceed </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/options';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToTrade = (addr) => {\n    history.push(`/trade/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='Trade' />\n      <div style={{padding: 5, opacity:0.5}}> Choose an option contract to proceed </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToTrade(addr)}> Start Trading </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React from 'react'\n\nimport { IdentityBadge } from '@aragon/ui'\n\nfunction AddressBlock({label, address}){\n\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}> {label} </div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten={true} />\n      </div>\n    </>\n  );\n};\n\nexport default AddressBlock","import React from 'react'\n\nfunction BalanceBlock({asset, balance}){\n  let integer = '0',\n    digits = '0';\n  if (balance > 0) {\n    const str = balance.toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}> {asset} </div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>.\n        <span style={{ fontSize: 18 }}> {digits} </span>\n      </div>\n    </>\n  );\n};\n\nexport default BalanceBlock","import React from 'react';\n\nimport { Tag } from '@aragon/ui';\n\nfunction RatioTag({ isSafe, ratio, useCollateral = true }) {\n  return !useCollateral ? (\n    <Tag color='#78827a' background='#c0c2c0'>\n      Cool\n    </Tag>\n  ) : isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background='#FFEBAD' color='#FEC100'>\n        {' '}\n        Danger{' '}\n      </Tag>\n    ) : (\n      <Tag mode='new'> safe </Tag>\n    )\n  ) : (\n    <Tag color='#E34343' background='#FFC6C6'>\n      Unsafe!\n    </Tag>\n  );\n}\n\nexport default RatioTag;\n","import React from 'react';\n\nfunction SectionTitle({ title }) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n\nexport default SectionTitle","import React from 'react'\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nexport default MaxButton","import React from 'react'\n\nfunction HelperText({ label, amt }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default HelperText","import React from 'react'\nimport { Button } from '@aragon/ui'\nimport { useHistory } from 'react-router-dom';\nimport { openVault } from '../../utils/web3'\n\nfunction ManageVaultButton({ oToken, owner }) {\n  const history = useHistory();\n  const goToManagePage = (oToken, owner) => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n  return <Button onClick={() => goToManagePage(oToken, owner)} label='Manage'></Button>;\n}\n\nfunction OpenVaultButton({ oToken, user }) {\n  const history = useHistory();\n\n  const openAndGoToVault = () => {\n    openVault(oToken)\n    history.push(`/manage/${oToken}/${user}`);\n  }\n\n  return <Button \n    onClick={() => openAndGoToVault(oToken)} \n    label='Open Vault'\n    />;\n}\n\nexport { ManageVaultButton, OpenVaultButton }","// const prefix = 'https://cors-anywhere-anton.herokuapp.com/';\nconst opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn'\n\n/**\n * @return {Promise<Array<{colalteral: string, oTokensIssued: string, owner: string}>>}\n */\nexport async function getAllVaultsForOption(optionAddress){\n  const query = `\n  {\n    vaults(where: {\n      optionsContract: \"${optionAddress}\"\n    }) {\n      owner\n      oTokensIssued,\n      collateral,\n    }\n  }`\n  const response = await postQuery(query)\n  const vaults = response.data.vaults\n  return vaults\n}\n\nexport async function getAllVaultsForUser(owner){\n  const query = `{\n    vaults (where: {owner: \"${owner}\"}) {\n      optionsContract {\n        address\n      }\n      oTokensIssued,\n      collateral,\n    }\n  }`\n  const response = await postQuery(query)\n  const actions = response.data.vaults\n  return actions\n}\n\nexport async function getLiquidationHistory(owner) {\n  const query = liquidationActionsQuery(owner);\n  const response = await postQuery(query)\n  return response.data.liquidateActions\n}\n\nconst liquidationActionsQuery = (owner) => `{\n  liquidateActions(where: {\n    vault_contains: \"${owner}\"\n  }) {\n    vault {\n      owner,\n      optionsContract {\n        address\n      }\n    },\n    liquidator,\n    collateralToPay,\n    timestamp\n    transactionHash\n  }\n}\n\n`\n\n\nconst postQuery = async (query) => {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  }\n  const res = await fetch(opynGraphEndpoint,  options)\n  return await res.json()\n}","import Web3 from 'web3'\nimport BigNumber from 'bignumber.js'\nconst web3 = new Web3()\n\nexport function toBaseUnitString(rawAmt, decimals) {\n  const raw = new BigNumber(rawAmt)\n  const base = new BigNumber(10)\n  const decimalsBN = new BigNumber(decimals)\n  return raw.times(base.pow(decimalsBN)).toString()\n}\n\nexport function formatDigits(num, percision) {\n  return parseFloat(num).toFixed(percision)\n}\n\nexport const handleDecimals = (rawAmt, decimal) => {\n  return Math.round(parseFloat(rawAmt) * 10 ** decimal);\n};\n\nexport const fromWei = web3.utils.fromWei\nexport const toWei = web3.utils.toWei\n\n/**\n * \n * @param {string | number} amtInEth \n */\nexport const formatETHAmtToStr = (amtInEth) => {\n  const strETHSegments = amtInEth.toString().split('.')\n  const int = strETHSegments[0]\n  if (strETHSegments.length === 1) return int\n  let digits = strETHSegments[1]\n  if(digits.length > 18) digits = digits.slice(0, 18)\n  const result = `${int}.${digits}`\n  return result\n}\n\nexport const toTokenUnits = (tokenAmount, tokenDecimals) => {\n  return tokenAmount / 10 ** tokenDecimals\n}\n\nexport function timeSince(timeStamp) {\n  var now = new Date(),\n    secondsPast = (now.getTime() - timeStamp) / 1000;\n  if (secondsPast < 60) {\n    return parseInt(secondsPast) + 's ago';\n  }\n  if (secondsPast < 3600) {\n    return parseInt(secondsPast / 60) + 'm ago';\n  }\n  if (secondsPast <= 86400) {\n    return parseInt(secondsPast / 3600) + 'h ago';\n  }\n  if (secondsPast > 86400) {\n    const ts = new Date(timeStamp)\n    const day = ts.getDate();\n    const month = ts.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \", \"\");\n    const year = ts.getFullYear() === now.getFullYear() ? \"\" : \" \" + ts.getFullYear();\n    return day + \" \" + month + year;\n  }\n}\n\nexport function compareVaultRatio(vaultA, vaultB) {\n  const rateA = vaultA.ratio;\n  const rateB = vaultB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n","import BigNumber from 'bignumber.js'\nimport { getPrice, getDecimals } from './infura'\nimport { toBaseUnitString } from './number'\n\n\n/**\n * Get strike value in collateral for ratio calculation.\n * @param {string} collateral address\n * @param {string} strike address\n * @param {string} oracle address\n * @param {number?} collateralDecimals if provided, wont get again if needed\n */\nexport const calculateStrikeValueInCollateral = async(collateral, strike, oracle, collateralDecimals=undefined ) => {\n  const ETH_Address = '0x0000000000000000000000000000000000000000'\n  let strikeValueInCollateral;\n  if (collateral === ETH_Address) {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    strikeValueInCollateral = strikeValueInWei;\n  } else if (collateral === strike) {\n    // No collateral, like ETH option\n    if (collateralDecimals===undefined) \n      collateralDecimals = await getDecimals(collateral)\n    strikeValueInCollateral = new BigNumber(10).pow(new BigNumber(collateralDecimals)).toNumber();\n  } else {\n    // Use other ERC20 as collateral : Untested\n    if (collateralDecimals===undefined) \n      collateralDecimals = await getDecimals(collateral)\n    const strikeValueInWei = await getPrice(oracle, strike);\n    const collateralValueInWei = await getPrice(oracle, collateral);\n    strikeValueInCollateral = toBaseUnitString(\n      parseInt(strikeValueInWei) / parseInt(collateralValueInWei),\n      collateralDecimals\n    );\n  }\n  return strikeValueInCollateral\n}\n\n/**\n * \n * @param {string} collateral number of collateral in base unit\n * @param {string} tokenIssued number of token in base unit\n * @param {number} strikePrice \n * @param {number} strikeValueInCollateral \n * @return {number}\n */\nexport const calculateRatio = (collateral, tokenIssued, strikePrice, strikeValueInCollateral) => {\n  if (tokenIssued === '0') return Infinity\n  const colalteralBN = new BigNumber(collateral)\n  const tokenIssuedBN = new BigNumber(tokenIssued)\n  const strikePriceBN = new BigNumber(strikePrice)\n  const strikeValueInCollateralBN = new BigNumber(strikeValueInCollateral.toString())\n  const result = (colalteralBN.div(tokenIssuedBN)).div(strikePriceBN).div(strikeValueInCollateralBN)\n  return result.toNumber()\n}","import React, { useState, useMemo } from 'react';\n\nimport { Header, DataView, IdentityBadge } from '@aragon/ui';\nimport { options, ETH_ADDRESS } from '../../constants/options';\nimport { SectionTitle, ManageVaultButton, OpenVaultButton } from '../common';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { formatDigits, compareVaultRatio, toTokenUnits } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getDecimals } from '../../utils/infura';\n\nconst Promise = require('bluebird');\n\nfunction MyVaults({ user }) {\n  const [opendVaults, setOpenedVaults] = useState([]);\n  const [tokensToOpen, setTokensToOpen] = useState([]);\n  const isConnected = user !== '';\n\n  // Only request all vaults once\n  useMemo(async () => {\n    if (!isConnected) return;\n    const userVaults = await getAllVaultsForUser(user);\n    const openedVaults = [];\n    const notOpenedTokens = [];\n    await Promise.map(options, async (option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      const isOpened = entry !== undefined;\n      const collatearlIsETH = option.collateral === ETH_ADDRESS;\n      if (isOpened) {\n        const collateralDecimals = collatearlIsETH ? 18 : await getDecimals(option.collateral);\n        const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n          option.collateral,\n          option.strike,\n          option.oracle,\n          collateralDecimals\n        );\n        const ratio = calculateRatio(\n          entry.collateral,\n          entry.oTokensIssued,\n          option.strikePrice,\n          strikeValueInCollateral\n        );\n        openedVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          collateralDecimals: collateralDecimals,\n          ratio,\n        });\n      } else {\n        notOpenedTokens.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n        });\n      }\n    });\n    setOpenedVaults(openedVaults.sort(compareVaultRatio));\n    setTokensToOpen(notOpenedTokens);\n  }, [isConnected, user]);\n\n  return (\n    <>\n      <Header primary={'My Vaults'} />\n      {isConnected ? (\n        <>\n          {opendVaults.length > 0 ? (\n            <div style={{ paddingBottom: '3%' }}>\n              <SectionTitle title={'Existing Vaults'} />\n              <DataView\n                fields={['Token', 'contract', 'collateral', 'Ratio', '']}\n                entries={opendVaults}\n                entriesPerPage={6}\n                renderEntry={({ oToken, oTokenName, collateral, collateralDecimals, ratio }) => {\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} />,\n                    formatDigits(toTokenUnits(collateral, collateralDecimals), 5),\n                    formatDigits(ratio, 4),\n                    <ManageVaultButton oToken={oToken} owner={user} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n          {tokensToOpen.length > 0 ? (\n            // Show vaults to open\n            <div>\n              <SectionTitle title={'Open new vaults'} />\n              <DataView\n                fields={['Token', 'contract', 'manage']}\n                entries={tokensToOpen}\n                renderEntry={({ oToken, oTokenName }) => {\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} shorten={false} />,\n                    <OpenVaultButton oToken={oToken} user={user} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </>\n      ) : (\n        // Not connected to wallet\n        <div style={{ padding: 5, opacity: 0.5 }}> Please connect wallet to proceed </div>\n      )}\n    </>\n  );\n}\n\nexport default MyVaults;\n","import React, { useState, useEffect } from 'react';\n\nimport { liquidate, addERC20Collateral, addETHCollateral } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { toTokenUnits, toBaseUnitString } from '../../utils/number';\nimport { RatioTag } from '../common';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconFundraising,\n  DataView,\n} from '@aragon/ui';\n\nfunction VaultModal({ useCollateral, oToken, owner, collateral, isSafe, oTokensIssued, ratio, decimals, collateralAsset, collateralIsETH, collateralDecimals }) {\n  const [opened, setOpened] = useState(false);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function getData() {\n      if (!opened) return;\n      const maxLiquidatable = await getMaxLiquidatable(oToken, owner);\n      if (!isCancelled) {\n        setLiquidateAmt(toTokenUnits(maxLiquidatable, decimals));\n      }\n    }\n    getData();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [decimals, oToken, opened, owner]);\n\n  return (\n    <>\n      <Button onClick={open} label='More'></Button>\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header primary={'Access Position'} />\n        <Box heading={'Owner'}>\n          <IdentityBadge entity={owner} shorten={false} />\n        </Box>\n        <DataView\n          fields={['Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[{ collateral, isSafe, oTokensIssued, ratio }]}\n          entriesPerPage={1}\n          renderEntry={({ collateral, isSafe, oTokensIssued, ratio }) => {\n            return [collateral, oTokensIssued, ratio, RatioTag({ isSafe, ratio, useCollateral })];\n          }}\n        />\n\n        <br></br>\n        <Box heading={'Add Collateral'}>\n          <Split\n            primary={\n              <TextInput\n                type='number'\n                wide={true}\n                adornment={<IconEthereum />}\n                adornmentPosition='end'\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            }\n            secondary={\n              <Button\n                label='Add Collateral'\n                wide={true}\n                onClick={() => {\n                  collateralIsETH \n                  ? addETHCollateral(oToken, owner, addValue)\n                  : addERC20Collateral(collateralAsset, oToken, owner, toBaseUnitString(addValue, collateralDecimals))}}\n              />\n            }\n          />\n        </Box>\n\n        <br></br>\n        { useCollateral ? <Box heading={'Liquidate'}>\n          <Split\n            primary={\n              <>\n                {/* <BalanceBlock /> */}\n                <TextInput\n                  wide={true}\n                  type='number'\n                  adornment={<IconFundraising />}\n                  adornmentPosition='end'\n                  value={liquidateAmt}\n                  onChange={(event) => {\n                    setLiquidateAmt(event.target.value);\n                  }}\n                />\n              </>\n            }\n            secondary={\n              <Button\n                wide={true}\n                disabled={isSafe}\n                label='Liquidate'\n                onClick={() => {\n                  liquidate(oToken, owner, liquidateAmt * 10 ** decimals);\n                }}\n              />\n            }\n          />\n        </Box>  : <></>}\n        \n      </Modal>\n    </>\n  );\n}\n\nexport default VaultModal;\n","import React, { useState, useEffect, useMemo } from 'react';\n\nimport { DataView, IdentityBadge } from '@aragon/ui';\nimport VaultModal from './VaultModal';\nimport { SectionTitle, RatioTag } from '../common';\n\nimport { getAllVaultsForOption } from '../../utils/graph';\nimport { getDecimals } from '../../utils/infura';\nimport { formatDigits, fromWei, compareVaultRatio, toTokenUnits } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\n\nimport { options, ETH_ADDRESS } from '../../constants/options';\n\nfunction VaultOwnerList({ oToken, user }) {\n  const option = options.find((option) => option.addr === oToken);\n\n  const [collateralDecimals, setCollateralDecimals] = useState(0);\n\n  // like ETH:DAI option, not using other assets as collateral. vaultUseCollateral = false\n  const vaultUsesCollateral = option.collateral !== option.strike;\n  const collateralIsETH = option.collateral === ETH_ADDRESS;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [vaults, setVaults] = useState([]);\n\n  // Get Collateral decimals if collateral is not eth\n  useMemo(async () => {\n    if (!collateralIsETH) {\n      const _decimals = await getDecimals(option.collateral);\n      setCollateralDecimals(_decimals);\n    }\n  }, [collateralIsETH, option.collateral]);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      const vaults = await getAllVaultsForOption(oToken);\n      const { strike, decimals, minRatio, strikePrice, oracle, collateral } = option;\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral,\n        strike,\n        oracle\n      );\n      const vaultDetail = vaults\n        .map((vault) => {\n          if (vault.oTokensIssued === '0') {\n            vault.ratio = Infinity;\n            vault.useCollateral = vaultUsesCollateral;\n            vault.isSafe = true;\n            return vault;\n          }\n          const ratio = calculateRatio(\n            vault.collateral,\n            vault.oTokensIssued,\n            strikePrice,\n            strikeValueInCollateral\n          );\n          const oTokensIssued = toTokenUnits(vault.oTokensIssued, decimals);\n          vault.oTokensIssued = oTokensIssued;\n          vault.ratio = ratio;\n          vault.useCollateral = vaultUsesCollateral;\n          vault.isSafe = ratio > minRatio;\n          vault.oToken = oToken;\n          return vault;\n        })\n        .sort(compareVaultRatio);\n\n      if (!isCancelled) {\n        setVaults(vaultDetail);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 12000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [collateralDecimals, collateralIsETH, oToken, option, user, vaultUsesCollateral]);\n\n  return (\n    <>\n      <SectionTitle title={'All Vaults'} />\n      <DataView\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaults}\n        entriesPerPage={5}\n        renderEntry={({ owner, collateral, oTokensIssued, ratio, isSafe, useCollateral }) => {\n          return [\n            <IdentityBadge entity={owner} shorten={true} />,\n            formatDigits(\n              collateralIsETH ? fromWei(collateral) : toTokenUnits(collateral, collateralDecimals),\n              6\n            ),\n            formatDigits(oTokensIssued, 6),\n            formatDigits(ratio, 5),\n            RatioTag({ isSafe, ratio, useCollateral }),\n            <VaultModal\n              decimals={option.decimals}\n              oToken={oToken}\n              owner={owner}\n              collateral={\n                collateralIsETH ? fromWei(collateral) : toTokenUnits(collateral, collateralDecimals)\n              }\n              collateralAsset={option.collateral}\n              collateralDecimals={collateralDecimals}\n              isSafe={isSafe}\n              useCollateral={useCollateral}\n              collateralIsETH={collateralIsETH}\n              oTokensIssued={oTokensIssued}\n              ratio={ratio}\n            />,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Split, Header, IdentityBadge } from '@aragon/ui';\nimport { getERC20Info, getBalance } from '../../utils/infura';\n\nimport { options } from '../../constants/options';\n\nfunction OptionOverview({ oToken, tokenName }) {\n  const option = options.find((option) => option.addr === oToken);\n  const [balance, setBalance] = useState('0');\n  const [totalSupply, setTotalSupply] = useState('0');\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      const [balance, tokenInfo] = await Promise.all([getBalance(oToken), getERC20Info(oToken)]);\n      const { totalSupply } = tokenInfo;\n      if (!isCancelled) {\n        setBalance(balance);\n        setTotalSupply(totalSupply);\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [oToken]);\n\n  return (\n    <>\n      <Header primary={option.name} />\n      <Split\n        primary={\n          <Split\n            primary={\n              <Box heading={'contract'} padding={15}>\n                <IdentityBadge entity={oToken} shorten={false} />\n              </Box>\n            }\n            secondary={\n              <Box heading={'balance'} padding={15}>\n                {balance}\n              </Box>\n            }\n          />\n        }\n        secondary={\n          <Box heading={'total supply'} padding={15}>\n            {totalSupply} {tokenName}\n          </Box>\n        }\n      />\n    </>\n  );\n}\n\nexport default OptionOverview;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nfunction OptionPage({user}) {\n  let { token } = useParams();\n  return (\n    <>\n      <OptionInfoBox oToken={token} user={user} />\n      <VaultsList oToken={token} user={user}/>\n    </>\n  );\n}\n\nexport default OptionPage;\n","import React from 'react';\n\nimport { BalanceBlock, RatioTag, HelperText } from '../common';\nimport { formatDigits, fromWei, toTokenUnits } from '../../utils/number';\n\nconst HeaderDashboard = ({ ratio, minRatio, symbol, vault, decimals, newRatio, collateralIsETH, collateralDecimals, useCollateral }) => {\n  const tokenInUnit = vault.oTokensIssued ? vault.oTokensIssued / 10 ** decimals : 0;\n  const collateralBalance = vault.collateral ?\n    collateralIsETH\n      ? fromWei(vault.collateral)\n      : toTokenUnits(vault.collateral, collateralDecimals)\n    : '0'\n  \n  return (\n    <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset='Total Collateral' balance={formatDigits(collateralBalance, 6)} />\n      </div>\n      <div style={{ width: '50%' }}>\n        <BalanceBlock asset={`${symbol} Issued`} balance={tokenInUnit} />\n      </div>\n      <div style={{ width: '20%' }}>\n        <>\n          <div style={{ fontSize: 14, padding: 3 }}>\n            Current Ratio{' '}\n            {ratio > 0 ? <RatioTag isSafe={ratio >= minRatio} ratio={ratio} useCollateral={useCollateral} /> : <></>}\n          </div>\n          <div style={{ fontSize: 24, padding: 3 }}>\n            <span style={{ fontSize: 24 }}>{ratio.toString().split('.')[0]}</span>.\n            <span style={{ fontSize: 18 }}>{ratio.toString().split('.')[1]} </span>\n            {minRatio > 0 ? <span style={{ fontSize: 16 }}> / {minRatio} </span> : ''}\n          </div>\n          <> {newRatio === ratio ? '' : <HelperText label='New Ratio' amt={newRatio} />} </>\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState, useMemo } from 'react';\n\nimport { getDecimals, getERC20Symbol } from '../../utils/infura'\nimport { addETHCollateral, addERC20Collateral, removeCollateral,  } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\nimport { formatDigits, toWei, fromWei, toTokenUnits, toBaseUnitString } from '../../utils/number'\nimport { calculateRatio } from '../../utils/calculation'\nimport { ETH_ADDRESS } from '../../constants/options';\nimport BigNumber from 'bignumber.js';\n\nfunction CollateralManagement({\n  isOwner,\n  vault,\n  collateralAsset,\n  collateralAssetBalance,\n  token,\n  owner,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  setNewRatio\n}) {\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0); // in token unit\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0); // in token unit\n\n  const [collateralDecimals, setCollateralDecimals] = useState(0)\n  const [collateralSymbol, setCollateralSymbol] = useState(0)\n\n  const collateralIsETH = collateralAsset === ETH_ADDRESS\n\n  useMemo(async()=>{\n    if(collateralIsETH) return\n    const decimals = await getDecimals(collateralAsset)\n    const symbol = await getERC20Symbol(collateralAsset)\n    setCollateralDecimals(decimals)\n    setCollateralSymbol(symbol)\n  }, [collateralAsset, collateralIsETH])\n\n  /**\n   * @param {number} newCollateral in wei\n   */\n  const updateNewRatio = (newCollateral) => {\n    if(!newCollateral || newCollateral <= 0) return 0\n    const str = newCollateral.toString()\n    const newRatio = calculateRatio(str, vault.oTokensIssued, strikePrice, strikeValue)\n    setNewRatio(formatDigits(newRatio,5))\n  }\n\n  return (\n    <Box heading={'Collateral'}>\n      <div style={{ display: 'flex' }}>\n        {/* balance */}\n        <div style={{ width: '30%' }}>\n          {BalanceBlock({ \n            asset: collateralIsETH ? 'Your ETH Balance' : `Your ${collateralSymbol} Balance`, \n            balance: formatDigits(collateralAssetBalance,6) })}\n        </div>\n        {/* Add collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={addCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value\n                    if (amt === '') {\n                      setAddCollateralAmt(0)\n                      return\n                    } \n                    setAddCollateralAmt(amt);\n                    const amtRaw = collateralIsETH ? toWei(amt) : toBaseUnitString(amt, collateralDecimals)\n                    const newCollateralInWei = new BigNumber(vault.collateral).plus( new BigNumber(amtRaw)).toNumber()\n                    updateNewRatio(newCollateralInWei)\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setAddCollateralAmt(collateralAssetBalance);\n                    const collateralBalanceRaw = collateralIsETH ? toWei(collateralAssetBalance) : toBaseUnitString(collateralAssetBalance, collateralDecimals)\n                    const newCollateral = new BigNumber(vault.collateral).plus(new BigNumber(collateralBalanceRaw)).toNumber()\n                    updateNewRatio(newCollateral)\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Add'\n                onClick={() => {\n                  collateralIsETH \n                    ? addETHCollateral(token, owner, addCollateralAmt)\n                    : addERC20Collateral(collateralAsset, token, owner, toBaseUnitString(addCollateralAmt, collateralDecimals))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={removeCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value\n                    if(amt === '') {\n                      setRemoveCollateralAmt(0)\n                      return\n                    }\n                    setRemoveCollateralAmt(amt);\n                    const amtRaw = collateralIsETH ? toWei(amt) : toBaseUnitString(amt, collateralDecimals)\n                    const newCollateralWei = new BigNumber(vault.collateral).minus(new BigNumber(amtRaw)).toNumber()\n                    updateNewRatio(newCollateralWei)\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikeValue <= 0) return;\n                    const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                    const minCollateral = minValueInStrike * strikeValue;\n                    const maxToRemove = parseInt(vault.collateral - minCollateral).toString();\n                    const maxToRemoveInTokenUnit = collateralIsETH ? fromWei(maxToRemove) : toTokenUnits(maxToRemove, collateralDecimals)\n                    setRemoveCollateralAmt(maxToRemoveInTokenUnit);\n                    setNewRatio(minRatio)\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Remove'\n                onClick={() => {\n                  collateralIsETH \n                    ? removeCollateral(collateralAsset, token, removeCollateralAmt)\n                    : removeCollateral(collateralAsset, token, toBaseUnitString(removeCollateralAmt, collateralDecimals));\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\n\nexport default CollateralManagement","import React, { useState } from 'react';\nimport { burnOToken, issueOToken } from '../../utils/web3';\nimport { BalanceBlock, MaxButton } from '../common';\nimport { toBaseUnitString, handleDecimals } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation'\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\nfunction IssuedTokenManagement({\n  isOwner,\n  vault,\n  tokenBalance,\n  token,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  decimals,\n  symbol,\n  setNewRatio,\n}) {\n  const [issueAmt, setIssueAmt] = useState(0);\n  const [burnAmt, setBurnAmt] = useState(0);\n\n  /**\n   * \n   * @param {number} newAmt in raw amt\n   */\n  const updateNewRatio = (newAmt) => {\n    if(newAmt <= 0) return\n    const newRatio = calculateRatio(vault.collateral, newAmt, strikePrice, strikeValue)\n    setNewRatio(newRatio);\n  };\n\n  const onChangeIssueAmt = (event) => {\n    const amt = event.target.value;\n    setIssueAmt(amt);\n    updateNewRatio(parseInt(vault.oTokensIssued) + handleDecimals(amt, decimals));\n  }\n\n  const onClickIssueToken = () => {\n    issueOToken(\n      token, \n      toBaseUnitString(issueAmt, decimals)\n    );\n  }\n\n  const onChangeBurnAmt = (event) => {\n    const amt = event.target.value;\n    updateNewRatio(parseInt(vault.oTokensIssued) - handleDecimals(amt, decimals));\n    setBurnAmt(amt);\n  }\n\n  const onClickBurnToken = () => {\n    burnOToken(\n      token, \n      toBaseUnitString(burnAmt, decimals)\n    );\n  }\n\n  return (\n    <Box heading={'Total Issued'}>\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock\n            asset={`Owner ${symbol} Balance `}\n            balance={tokenBalance}\n          />\n        </div>\n        {/* Issue More Token */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={issueAmt}\n                  onChange={onChangeIssueAmt}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikePrice <= 0) return;\n                    const maxTotal =\n                      (vault.collateral) / (minRatio * strikePrice * strikeValue);\n                    const maxToIssueRaw = parseInt(maxTotal) - vault.oTokensIssued;\n                    const maxToIssue = maxToIssueRaw / 10 ** decimals;\n                    setIssueAmt(maxToIssue);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Issue'\n                onClick={onClickIssueToken}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={burnAmt}\n                  onChange={onChangeBurnAmt}\n                />\n                <MaxButton\n                  onClick={() => {\n                    const issued = Number(vault.oTokensIssued) / 10 ** decimals;\n                    const maxToBurn = Math.min(tokenBalance, issued)\n                    setBurnAmt(maxToBurn);\n                    updateNewRatio(handleDecimals(issued - maxToBurn, decimals))\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Burn'\n                onClick={onClickBurnToken}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default IssuedTokenManagement;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport { Box, DataView, IdentityBadge, TransactionBadge, TextInput, Button } from '@aragon/ui';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { getLiquidationHistory } from '../../utils/graph';\nimport { formatDigits, fromWei, toTokenUnits, timeSince, toBaseUnitString } from '../../utils/number';\n\nfunction LiquidationHistory({ owner, token, isOwner, tokenDecimals, userTokenBalance }) {\n  const [maxLiquidatable, setMaxLiquidatable] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  const [amountToLiquidate, setAmtToLiquidate] = useState(0);\n\n  useEffect(() => {\n    async function updateLiquidatable() {\n      const maxToLiquidate = await getMaxLiquidatable(token, owner);\n      setMaxLiquidatable(toTokenUnits(maxToLiquidate, tokenDecimals));\n    }\n\n    updateLiquidatable();\n  });\n\n  useMemo(async () => {\n    async function updateList() {\n      const actions = await getLiquidationHistory(owner);\n      const actionsForThisVault = actions.filter(\n        (entry) => entry.vault.optionsContract.address === token\n      );\n      setEntries(actionsForThisVault);\n      setIsLoading(false);\n    }\n    updateList();\n  }, [owner, token]);\n\n  return (\n    <>\n      {isOwner ? <></> : (\n        <Box heading={'Liquidate'}>\n          <>\n            <div style={{ display: 'flex' }}>\n              {/* balance */}\n              <div style={{ width: '30%' }}>\n                <BalanceBlock asset={`Max To Liquidate`} balance={maxLiquidatable} />\n              </div>\n              <div style={{ width: '70%', paddingTop: '2%' }}>\n                <div style={{ display: 'flex' }}>\n                  <div style={{ width: '60%' }}>\n                    <>\n                      <TextInput\n                        type='number'\n                        wide={true}\n                        value={amountToLiquidate}\n                        onChange={(event) => {\n                          setAmtToLiquidate(event.target.value);\n                        }}\n                      />\n                      <MaxButton\n                        onClick={() => {\n                          const maximum = Math.min(userTokenBalance, maxLiquidatable);\n                          setAmtToLiquidate(maximum);\n                        }}\n                      />\n                    </>\n                  </div>\n                  <div style={{ width: '40%' }}>\n                    <Button\n                      disabled={maxLiquidatable <= 0}\n                      label='Liquidate'\n                      onClick={() => {\n                        const amtToLiquidate = toBaseUnitString(amountToLiquidate, tokenDecimals);\n                        liquidate(token, owner, amtToLiquidate);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        </Box>\n      )}\n\n      {/* History Section */}\n      <Box heading={'History'}>\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Liquidator', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({ collateralToPay, liquidator, timestamp, transactionHash }) => {\n            return [\n              <TransactionBadge transaction={transactionHash} />,\n              formatDigits(fromWei(collateralToPay), 5),\n              <IdentityBadge entity={liquidator} />,\n              timeSince(parseInt(timestamp * 1000)),\n            ];\n          }}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default LiquidationHistory;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Header, Tabs, Box } from '@aragon/ui';\n\nimport HeaderDashboard from './HeaderDashboard';\nimport CollateralManagement from './CollateralManagement';\nimport IssuedTokenManagement from './IssuedTokenManagement';\nimport LiquidationHistory from './Liquidation';\n\nimport { formatDigits, toTokenUnits } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation'\nimport { getTokenBalance, getBalance, getDecimals } from '../../utils/infura';\nimport { getAllVaultsForUser } from '../../utils/graph';\n\nimport { options, ETH_ADDRESS } from '../../constants/options';\n\n\nfunction ManageVault({ user }) {\n  let { token, owner } = useParams();\n\n  const option = options.find((option) => option.addr === token);\n  const { decimals, symbol, oracle, strike, strikePrice, minRatio, collateral } = option;\n\n  // Tab Navigation\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const [vault, setVault] = useState({});\n  const [strikeValueInCollateral, setStrikeValue] = useState(0);\n  const [ratio, setRatio] = useState(0);\n\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(0);\n  const [userTokenBalance, setUserTokenBalance] = useState(0);\n  const [userCollateralAssetBalance, setUserCollateralAssetBalance] = useState(0);\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n  const [newRatio, setNewRatio] = useState(ratio);\n\n  const [collateralDecimals, setCollateralDecimals] = useState(0);\n  const collateralIsETH = collateral === ETH_ADDRESS;\n\n  const vaultUsesCollateral = collateral !== strike;\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateInfo() {\n      const vault = (await getAllVaultsForUser(owner)).find(\n        (vault) => vault.optionsContract.address === token\n      );\n      if (vault === undefined) {\n        return;\n      }\n      setNoVault(false);\n      let [_ownerTokenBalance, _userTokenBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getTokenBalance(token, user),\n      ]);\n\n      // SetUserCollateralAmount\n      let collateralBalance, _collateralDecimals = 0;\n\n      if (collateralIsETH) {\n        collateralBalance = await getBalance(user);\n      } else {\n        const _tokenBalance = await getTokenBalance(collateral, user);\n        _collateralDecimals = await getDecimals(collateral);\n        collateralBalance = toTokenUnits(_tokenBalance, _collateralDecimals);\n      }\n\n      _ownerTokenBalance = toTokenUnits(_ownerTokenBalance, decimals);\n      _userTokenBalance = toTokenUnits(_userTokenBalance, decimals);\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(collateral, strike, oracle)\n      const ratio = calculateRatio(\n        vault.collateral,\n        vault.oTokensIssued,\n        strikePrice,\n        strikeValueInCollateral\n      );\n\n      if (!isCancelled) {\n        setStrikeValue(strikeValueInCollateral);\n        setVault(vault);\n        setCollateralDecimals(_collateralDecimals);\n        setOwnerTokenBalance(_ownerTokenBalance);\n        setUserTokenBalance(_userTokenBalance);\n        setRatio(formatDigits(ratio, 5));\n        setUserCollateralAssetBalance(collateralBalance);\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [collateral, collateralDecimals, collateralIsETH, decimals, oracle, owner, strike, strikePrice, token, user, vaultUsesCollateral]);\n\n  const isOwner = user === owner;\n\n  return noVault ? (\n    <div style={{ padding: 100, textAlign: 'center' }}> No Vault Found for this user </div>\n  ) : (\n    <>\n      <Header primary={isOwner ? 'Manage Your Vault' : 'Vault Detail'} />\n\n      <HeaderDashboard\n        owner={owner}\n        user={user}\n        ratio={ratio}\n        minRatio={minRatio}\n        vault={vault}\n        decimals={decimals}\n        symbol={symbol}\n        newRatio={newRatio}\n        useCollateral={vaultUsesCollateral}\n        collateralIsETH={collateralIsETH}\n        collateralDecimals={collateralDecimals}\n      />\n\n      <Tabs\n        items={['Collateral Management', 'Token Issuance', 'Liquidation']}\n        selected={tabSelected}\n        onChange={setTabSelected}\n      />\n\n      {tabSelected === 0 ? (\n        <CollateralManagement\n          isOwner={isOwner}\n          vault={vault}\n          collateralAssetBalance={userCollateralAssetBalance}\n          collateralAsset={option.collateral}\n          token={token}\n          owner={owner}\n          strikeValue={strikeValueInCollateral}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 1 ? (\n        <IssuedTokenManagement\n          isOwner={isOwner}\n          vault={vault}\n          tokenBalance={ownerTokenBalance}\n          token={token}\n          strikeValue={strikeValueInCollateral}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          decimals={decimals}\n          symbol={symbol}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 2 ? (\n        vaultUsesCollateral ? (\n          <LiquidationHistory\n            userTokenBalance={userTokenBalance}\n            isOwner={isOwner}\n            owner={owner}\n            token={token}\n            tokenDecimals={decimals}\n          />\n        ) : (\n          <Box> This vault cannot be liquidated </Box>\n        )\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default ManageVault;\n","import React from 'react';\n\nimport { BalanceBlock, AddressBlock } from '../common';\n\nconst HeaderDashboard = ({ symbol, poolETHBalance, poolTokenBalance, uniswapExchange }) => {\n  return (\n    <div style={{ padding: '2%', display: 'flex',  alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset='Total ETH Liquidity' balance={poolETHBalance} />\n      </div>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset={`${symbol} Liquidity`} balance={poolTokenBalance} />\n      </div>\n      <div style={{ width: '40%' }}>\n        <>\n          <AddressBlock label=\"Uniswap Contract\" address={uniswapExchange} />\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState } from 'react';\n\nimport { buyOTokensFromExchange, sellOTokensFromExchange } from '../../utils/web3';\n\nimport { getPremiumToPay, getPremiumReceived } from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { toBaseUnitString } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\nfunction OptionExchange({ symbol, tokenBalance, token, exchange, decimals }) {\n  const [buyAmt, setBuyAmt] = useState(0);\n  const [sellAmt, setSellAmt] = useState(0);\n  const [premiumToPay, setPremiumToPay] = useState(0);\n  const [premiumReceived, setPremiumReceived] = useState(0);\n\n  const updatePremiumToPay = async (buyAmt) => {\n    if (!buyAmt || buyAmt === 0) {\n      setPremiumToPay(0);\n      return;\n    }\n    const amount = toBaseUnitString(buyAmt, decimals);\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(premium);\n  };\n\n  const updatePremiumReceived = async (sellAmt) => {\n    if (!sellAmt || sellAmt === 0) {\n      setPremiumReceived(0);\n      return;\n    }\n    const amount = toBaseUnitString(sellAmt, decimals);\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(premium);\n  };\n\n  return (\n    <Box heading={'Exchange'}>\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`${symbol} Balance`} balance={tokenBalance} />\n        </div>\n        {/* Buy Token from Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={buyAmt}\n                  onChange={(event) => {\n                    setBuyAmt(event.target.value);\n                    updatePremiumToPay(event.target.value);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Buy'\n                onClick={() => {\n                  buyOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitString(buyAmt, decimals),\n                    premiumToPay\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label='Cost:' amt={premiumToPay} symbol='' />\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={sellAmt}\n                  onChange={(event) => {\n                    setSellAmt(event.target.value);\n                    updatePremiumReceived(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setSellAmt(tokenBalance);\n                    updatePremiumReceived(tokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Sell'\n                onClick={() => {\n                  sellOTokensFromExchange(\n                    token, \n                    exchange, \n                    toBaseUnitString(sellAmt, decimals)\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label='Premium' amt={premiumReceived} />\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default OptionExchange;\n","import React, { useState } from 'react';\n\nimport { addLiquidity } from '../../utils/web3';\n\nimport {\n  // getTokenBalance,\n} from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { formatETHAmtToStr, toBaseUnitString } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconEthereum } from '@aragon/ui';\n\nfunction AddLiquidity({ \n  otoken, \n  otokenSymbol, \n  otokenDecimals, \n  userTokenBalance, \n  userETHBalance,\n  uniswapExchange, \n  user, \n  poolTokenBalance, \n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply\n}) {\n  const SLIPPAGE_RATE = 2;\n\n\n  const [amtETHToAdd, setAmtETHToAdd] = useState(0);\n  const [amtTokenToAdd, setAmtTokenToAdd] = useState(0);\n\n  const liquidityMinted = (liquidityTokenSupply * amtETHToAdd) / poolETHBalance;\n  const liquidityMintedMin = (liquidityMinted * (100 - SLIPPAGE_RATE)) / 100;\n  const ethToTokenRatio = poolETHBalance / poolTokenBalance;\n  const tokenToEthRatio = poolTokenBalance / poolETHBalance;\n\n  const onChangeETHAmtToSend = (ethAmt) => {\n    const newTokenAmt = (ethAmt * tokenToEthRatio);\n    setAmtETHToAdd(ethAmt);\n    setAmtTokenToAdd(newTokenAmt);\n  };\n\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    const newEthAmt = tokenAmt * ethToTokenRatio;\n    setAmtETHToAdd(newEthAmt);\n    setAmtTokenToAdd(tokenAmt);\n  };\n\n  return (\n    <Box heading={'Add Liquidity'}>\n      <div style={{ display: 'flex' }}>\n        {/* Pool Status */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`ETH Balance`} balance={userETHBalance} />\n        </div>\n        {/* Add Liquidity too pool */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <TextInput\n                  adornmentPosition='end'\n                  adornment={otokenSymbol}\n                  type='number'\n                  wide={true}\n                  value={amtTokenToAdd}\n                  onChange={(event) => {\n                    onChangeTokenAmtToSend(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    onChangeTokenAmtToSend(userTokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition='end'\n                adornment={<IconEthereum />}\n                type='number'\n                wide={true}\n                value={amtETHToAdd}\n                onChange={(event) => {\n                  onChangeETHAmtToSend(event.target.value);\n                }}\n              />\n              <PriceSection label='Mint' amt={liquidityMinted} symbol='Pool Tokens' />\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Add Liquidity'\n                onClick={() => {\n                  const maxToken = toBaseUnitString(amtTokenToAdd, otokenDecimals);\n                  const minLiquidity = toBaseUnitString(liquidityMintedMin, liquidityTokenDecimals);\n                  addLiquidity(\n                    otoken,\n                    uniswapExchange,\n                    maxToken,\n                    minLiquidity,\n                    formatETHAmtToStr(amtETHToAdd)\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default AddLiquidity;\n","import React, { useState } from 'react';\n\nimport { removeLiquidity } from '../../utils/web3';\n\nimport {\n  // getTokenBalance,\n} from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { handleDecimals, formatETHAmtToStr } from '../../utils/number';\nimport { Box, TextInput, Button, IconCircleMinus, IconFundraising } from '@aragon/ui';\n\nfunction RemoveLiquidity({ \n  otoken, \n  otokenSymbol, \n  otokenDecimals, \n  userTokenBalance, \n  userliquidityTokenBalance,\n  uniswapExchange, \n  poolTokenBalance, \n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply\n}) {\n  const SLIPPAGE_RATE = 3;\n\n  const [amtLiquidityTokenToSell, setAmtLiquidityTokenToSell] = useState(0);\n\n  const poolPortion = (amtLiquidityTokenToSell) / liquidityTokenSupply\n  const estETHRecieved = poolETHBalance * poolPortion\n  const estOTokenReceived = poolTokenBalance * poolPortion\n\n  const minETHReceived = estETHRecieved * (100 - SLIPPAGE_RATE) / 100\n  const minTokenReceived = estOTokenReceived * (100 - SLIPPAGE_RATE) / 100\n  \n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    setAmtLiquidityTokenToSell(tokenAmt)\n  };\n\n  return (\n    <Box heading={'Remove Liquidity'}>\n      <div style={{ display: 'flex' }}>\n        {/* Pool Token in Hold */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`Pool Token Balance`} balance={userliquidityTokenBalance} />\n        </div>\n        {/* Remove */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition='end'\n                adornment={<IconFundraising />}\n                type='number'\n                wide={true}\n                value={amtLiquidityTokenToSell}\n                onChange={(event) => {\n                  onChangeTokenAmtToSend(event.target.value);\n                }}\n              />\n              <MaxButton\n                onClick={()=>setAmtLiquidityTokenToSell(userliquidityTokenBalance)}\n              />\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n              <PriceSection label='You get' amt={estETHRecieved} symbol='ETH' />\n              <PriceSection label='+' amt={estOTokenReceived} symbol={otokenSymbol} />\n              </>\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Remove Liquidity'\n                onClick={() => {\n                  const amt = handleDecimals(amtLiquidityTokenToSell, liquidityTokenDecimals).toString()\n                  const min_eth = formatETHAmtToStr(minETHReceived)\n                  const min_token = handleDecimals(minTokenReceived, otokenDecimals)\n                  \n                  removeLiquidity(\n                    uniswapExchange,\n                    amt,\n                    min_eth,\n                    min_token\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default RemoveLiquidity;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getTokenBalance, getBalance, getERC20Info } from '../../utils/infura';\n\nimport { Header } from '@aragon/ui';\n\nimport { options } from '../../constants/options';\n\nimport DashBoard from './Header';\nimport OptionExchange from './OptionExchange'\n\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity'\n\nfunction ManagePool({ user }) {\n\n  let { token } = useParams();\n\n  const option = options.find((option) => option.addr === token);\n  const { uniswapExchange, decimals, symbol, exchange } = option;\n\n  const [poolTokenBalance, setPoolTokenBalance] = useState(0);\n  const [userTokenBalance, setUserTokenBalance] = useState(0);\n  const [poolETHBalance, setPoolETHBalance] = useState(0);\n  const [userETHBalance, setUserETHBalance] = useState(0);\n\n  const [userliquidityTokenBalance, setUserLiquidityTokenBalance] = useState(0);\n  const [liquidityTokenDecimals, setLiquidityTokenDecimals] = useState(0);\n  const [liquidityTokenSupply, setLiquidityTokenSupply] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      let [exchangeTokenBalance, exchagneETHBalance, liquidityTokenInfo] = await Promise.all([\n        getTokenBalance(token, uniswapExchange),\n        getBalance(uniswapExchange),\n        getERC20Info(uniswapExchange),\n      ]);\n      const { decimals: liqTokenDecimal, totalSupply: liqTokenTotalSupply } = liquidityTokenInfo;\n      exchangeTokenBalance = exchangeTokenBalance / 10 ** decimals;\n      if (!isCancelled) {\n        setLiquidityTokenDecimals(liqTokenDecimal);\n        setLiquidityTokenSupply(liqTokenTotalSupply);\n        setPoolETHBalance(exchagneETHBalance);\n        setPoolTokenBalance(exchangeTokenBalance);\n      }\n    }\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, token, uniswapExchange]);\n\n  useEffect(() => {\n    if (user === '') return;\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      let [tokenBalance, userETHBalance, liqTokenBalance] = await Promise.all([\n        getTokenBalance(token, user),\n        getBalance(user),\n        getTokenBalance(uniswapExchange, user),\n      ]);\n\n      const userTokenBalance = tokenBalance / 10 ** decimals;\n      const userLiqTokenBalance = liqTokenBalance / 10 ** liquidityTokenDecimals;\n      if (!isCancelled) {\n        setUserLiquidityTokenBalance(userLiqTokenBalance);\n        setUserETHBalance(userETHBalance);\n        setUserTokenBalance(userTokenBalance);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, liquidityTokenDecimals, token, uniswapExchange, user]);\n\n  return (\n    <>\n      <Header primary='Exchange' />\n\n      <DashBoard\n        user={user}\n        symbol={symbol}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        uniswapExchange={uniswapExchange}\n      />\n\n      <OptionExchange\n        symbol={symbol}\n        tokenBalance={userTokenBalance}\n        token={token}\n        exchange={exchange}\n        decimals={decimals}\n      />\n\n      <Header primary='Provide Liquidity' />\n\n      <AddLiquidity\n        user={user}\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n\n      <RemoveLiquidity\n        user={user}\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n    </>\n  );\n}\n\nexport default ManagePool;\n","import React from 'react'\n\nimport { Link } from '@aragon/ui'\n\nfunction Footer({theme}) {\n  var style = {\n    backgroundColor: theme === 'light' ? \"#F8F8F8\" : '#35425e' ,\n    textAlign: \"center\",\n    padding: \"17px\",\n    position: \"fixed\",\n    left: \"0\",\n    bottom: \"0\",\n    height: \"50px\",\n    width: \"100%\",\n    fontSize: \"12px\"\n  }\n\n  return (  \n    <div style={style}>\n      Powered By {' '}\n      <Link  external={true} href=\"https://opyn.co/#/\">Opyn</Link>{', '} \n      <Link  external={true} href=\"https://ui.aragon.org/\">Aragon UI</Link>{', '}  \n      <Link  external={true} href=\"https://www.blocknative.com/\">Blocknative</Link>{'. '}  \n      Hosted on <Link  external={true} href=\"https://github.com/antoncoding/opyn-liquidator\">GitHub</Link>.\n    </div>\n  )\n}\n\nexport default Footer","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { updateModalMode } from './utils/web3'\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage'\nimport AllOptoins from './components/AllContracts';\nimport Trade from './components/Trade'\nimport MyVaults from './components/MyVaults'\nimport OptionPage from './components/OptionPage';\nimport ManageVault from './components/ManageVault'\nimport ManagePool from './components/ManagePool'\nimport Footer from './components/Footer';\nimport { Main } from '@aragon/ui';\n\nfunction App() {\n  const storedTheme = window.localStorage.getItem('theme') || 'light';\n\n  const [user, setUser] = useState('0x75b379238868ebb577ce9888524d3cd71ee4b236'); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (theme) => {\n    setTheme(theme);\n    updateModalMode(theme)\n    window.localStorage.setItem('theme', theme);\n  };\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          {/* All Options */}\n          <Route path='/option/:token' children={<OptionPage user={user} />} />\n          <Route path='/options/' children={<AllOptoins />} />\n          {/* My Vaults */}\n          <Route path='/myvaults' children={<MyVaults user={user} />} />\n          <Route path='/manage/:token/:owner' children={<ManageVault user={user}/>} />\n          {/* Trade */}\n          <Route path='/trade/:token/' children={<ManagePool user={user} />} />\n          <Route path='/trade/' children={<Trade/>} />\n          {/* HomePage */}\n          <Route path='/' children={<HomePage/>} />\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}