{"version":3,"sources":["utils/web3.js","utils/blockNative.js","utils/infura.js","components/NavBar/ConnectButton.js","components/NavBar/SettingsButton.js","components/NavBar/index.js","components/HomePage/index.js","constants/options.js","components/AllContracts/index.js","components/Trade/index.js","components/common/AddressBlock.js","components/common/BalanceBlock.js","components/common/RatioTag.js","components/common/SectionTitle.js","components/common/MaxButton.js","components/common/HelpText.js","components/common/VaultButton.js","utils/graph.js","utils/number.js","components/MyVaults/index.js","components/TokenView/VaultModal.js","components/TokenView/VaultsList.js","components/TokenView/OptionInfoBox.js","components/TokenView/index.js","components/ManageVault/CollateralManagement.js","components/ManageVault/IssuedTokenManagement.js","components/ManageVault/Liquidation.js","components/ManageVault/HeaderDashboard.js","components/ManageVault/Manage.js","components/ManageVault/index.js","components/ManagePool/Header.js","components/ManagePool/OptionExchange.js","components/ManagePool/AddLiquidity.js","components/ManagePool/RemoveLiquidity.js","components/ManagePool/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["web3","notify","Notify","dappId","networkId","optionContractABI","require","optionExchangeABI","oracleABI","Web3","getTokenBalance","oToken","user","a","oTokenContract","eth","Contract","methods","balanceOf","call","balance","parseInt","getERC20Info","address","token","totalSupply","totalSupplyDecimals","decimals","getMaxLiquidatable","vaultOwner","maxOTokensLiquidatable","maxVaultLiquidatable","getAllowance","contract","spender","allowance","getBalance","utils","fromWei","getPrice","oracleAddr","oracle","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","exchange","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","oTokenABI","exchangeABI","uniswapExchangeABI","UINT256_MAX","storedTheme","window","localStorage","getItem","onboard","Onboard","darkMode","subscriptions","wallet","provider","walletSelect","description","wallets","walletName","infuraKey","apiKey","updateModalMode","theme","config","connect","walletCheck","getState","disconnect","walletReset","checkConnectedAndGetAddress","checked","liquidate","oTokenAddr","owner","liquidateAmt","account","send","from","on","hash","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmount","value","toWei","toString","removeETHCollateral","removeCollateral","approve","amt","openVault","buyOTokensFromExchange","ethAmt","buyOTokens","sellOTokensFromExchange","BN","lt","sellOTokens","addLiquidity","uniswapAddr","maxToken","minLiquidity","ethValue","uniswapExchange","deadline","Math","ceil","Date","now","removeLiquidity","pool_token_amount","min_eth","min_tokens","min_eth_wei","ConnectButton","setUser","useState","isConnected","setIsConnected","connectWeb3","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","padding","entity","icon","label","ChangeMode","updateTheme","LinkButton","title","paddingLeft","opacity","fontSize","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","height","goBack","push","secondary","MainButton","iconUrl","width","alt","src","HomePage","display","alignItems","marginRight","marginLeft","options","addr","symbol","name","collateral","underlying","strike","strikePrice","minRatio","AllContracts","fields","entries","entriesPerPage","renderEntry","shorten","goToToken","goToTrade","AddressBlock","BalanceBlock","asset","integer","digits","str","split","length","RatioTag","isSafe","ratio","background","color","mode","SectionTitle","MaxButton","HelperText","parseFloat","toFixed","ManageVaultButton","goToManagePage","OpenVaultButton","getAllVaultsForOption","optionAddress","query","postQuery","response","vaults","data","getAllVaultsForUser","actions","getLiquidationHistory","liquidationActionsQuery","liquidateActions","method","headers","body","JSON","stringify","fetch","res","json","formatDigits","num","percision","handleDecimals","rawAmt","decimal","round","formatETHAmtToStr","amtInEth","strETHSegments","int","slice","toTokenUnits","tokenAmount","tokenDecimals","timeSince","timeStamp","secondsPast","getTime","ts","getDate","toDateString","match","replace","getFullYear","compareVaultRatio","vaultA","vaultB","rateA","rateB","comparison","calculateRatio","tokenIssued","strikeValueInWei","Infinity","Promise","MyVaults","opendVaults","setOpenedVaults","tokensToOpen","setTokensToOpen","useMemo","userVaults","notOpenedTokens","map","option","entry","find","vault","optionsContract","undefined","strikePriceInWei","oTokensIssued","oTokenName","sort","paddingBottom","VaultModal","opened","setOpened","addValue","setAddValue","setLiquidateAmt","isCancelled","maxLiquidatable","getData","visible","onClose","heading","type","wide","adornment","adornmentPosition","onChange","event","target","disabled","VaultOwnerList","isLoading","setIsLoading","setVaults","updateInfo","tokenPriceInWei","vaultDetail","id","setInterval","clearInterval","status","OptionOverview","tokenName","setBalance","setTotalSupply","all","tokenInfo","init","TokenView","useParams","OptionInfoBox","VaultsList","CollateralManagement","isOwner","ethBalance","strikeValue","setNewRatio","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","updateNewRatio","newCollateral","newRatio","newCollateralInWei","newCollateralWei","minCollateral","maxToRemoveWei","IssuedTokenManagement","tokenBalance","setIssueAmt","setBurnAmt","newAmt","maxTotal","maxToIssue","issued","Number","maxToBurn","min","LiquidationHistory","userTokenBalance","setMaxLiquidatable","setEntries","amountToLiquidate","setAmtToLiquidate","maxToLiquidate","updateLiquidatable","actionsForThisVault","filter","updateList","maximum","amtToLiquidate","collateralToPay","liquidator","timestamp","transactionHash","transaction","HeaderDashboard","tokenInUnit","collateralInETH","ManageVault","tabSelected","setTabSelected","setVault","strikeVauleInWei","setStrikeValue","setRatio","ownerTokenBalance","setOwnerTokenBalance","setUserTokenBalance","userETHBalance","setUserETHBalance","noVault","setNoVault","_ownerTokenBalance","_userTokenBalance","lastStrikeValue","textAlign","items","selected","Liquidation","Manage","poolETHBalance","poolTokenBalance","PriceSection","OptionExchange","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","updatePremiumToPay","amount","premium","updatePremiumReceived","AddLiquidity","otoken","otokenSymbol","otokenDecimals","liquidityTokenDecimals","liquidityTokenSupply","amtETHToAdd","setAmtETHToAdd","amtTokenToAdd","setAmtTokenToAdd","liquidityMinted","liquidityMintedMin","ethToTokenRatio","tokenToEthRatio","onChangeTokenAmtToSend","tokenAmt","newTokenAmt","onChangeETHAmtToSend","RemoveLiquidity","userliquidityTokenBalance","amtLiquidityTokenToSell","setAmtLiquidityTokenToSell","poolPortion","estETHRecieved","estOTokenReceived","minETHReceived","minTokenReceived","min_token","ManagePool","setPoolTokenBalance","setPoolETHBalance","setUserLiquidityTokenBalance","setLiquidityTokenDecimals","setLiquidityTokenSupply","updatePoolInfo","exchangeTokenBalance","exchagneETHBalance","liquidityTokenInfo","liqTokenDecimal","liqTokenTotalSupply","updateUserInfo","liqTokenBalance","userLiqTokenBalance","Footer","backgroundColor","position","left","bottom","external","href","App","setTheme","assetsUrl","process","setItem","path","children","Trade","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ko5BA2CIA,E,2HCzCSC,EAASC,YAAO,CAC3BC,OAAQ,uCACRC,UAAW,ICFPC,EAAoBC,EAAQ,KAC5BC,EAAoBD,EAAQ,KAC5BE,EAAYF,EAAQ,KAGpBN,GADUM,EAAQ,KACX,IAAIG,IAAK,kEAITC,EAAe,uCAAG,WAAOC,EAAQC,GAAf,iBAAAC,EAAA,yDAChB,KAATD,EADyB,yCACL,KADK,cAEvBE,EAAiB,IAAId,EAAKe,IAAIC,SAASX,EAAmBM,GAFnC,SAGPG,EAAeG,QAAQC,UAAUN,GAAMO,OAHhC,cAGvBC,EAHuB,yBAItBC,SAASD,IAJa,2CAAH,wDAafE,EAAY,uCAAG,WAAOC,GAAP,qBAAAV,EAAA,6DACpBW,EAAQ,IAAIxB,EAAKe,IAAIC,SAASX,EAAmBkB,GAD7B,SAEQC,EAAMP,QAAQQ,cAAcN,OAFpC,cAEpBO,EAFoB,gBAGHF,EAAMP,QAAQU,WAAWR,OAHtB,cAGpBQ,EAHoB,OAIpBF,EAAcJ,SAASK,GAAT,SAAgC,GAAML,SAASM,IAJzC,kBAKnB,CAAEA,WAAUF,gBALO,2CAAH,sDAqDZG,EAAkB,uCAAG,WAAOjB,EAAQkB,GAAf,iBAAAhB,EAAA,6DAC1BC,EAAiB,IAAId,EAAKe,IAAIC,SAASX,EAAmBM,GADhC,SAEGG,EAAeG,QAAQa,uBAAuBD,GAAYV,OAF7D,cAE1BY,EAF0B,yBAGzBV,SAASU,IAHgB,2CAAH,wDAoBlBC,EAAY,uCAAG,WAAOC,EAAUrB,EAAMsB,GAAvB,iBAAArB,EAAA,6DACpBW,EAAQ,IAAIxB,EAAKe,IAAIC,SAASX,EAAmB4B,GAD7B,SAEFT,EAAMP,QAAQkB,UAAUvB,EAAMsB,GAASf,OAFrC,cAEpBgB,EAFoB,yBAGnBA,GAHmB,2CAAH,0DAUZC,EAAU,uCAAG,WAAOb,GAAP,eAAAV,EAAA,yDACR,KAAZU,EADoB,yCACG,KADH,uBAEFvB,EAAKe,IAAIqB,WAAWb,GAFlB,cAElBH,EAFkB,yBAGjBpB,EAAKqC,MAAMC,QAAQlB,IAHF,2CAAH,sDAWVmB,EAAQ,uCAAG,WAAOC,EAAYhB,GAAnB,iBAAAX,EAAA,6DAChB4B,EAAS,IAAIzC,EAAKe,IAAIC,SAASR,EAAWgC,GAD1B,SAEFC,EAAOxB,QAAQsB,SAASf,GAAOL,OAF7B,cAEhBuB,EAFgB,yBAGfA,GAHe,2CAAH,wDAORC,EAAe,uCAAG,WAAOC,EAAcC,EAAYC,GAAjC,iBAAAjC,EAAA,6DACvBkC,EAAW,IAAI/C,EAAKe,IAAIC,SAAST,EAAmBqC,GACrC,6CAFQ,SAGFG,EAAS9B,QAAQ+B,aAAaH,EADpC,6CAC8DC,GAAQ3B,OAH9D,cAGvB6B,EAHuB,yBAItBhD,EAAKqC,MAAMC,QAAQU,IAJG,2CAAH,0DAOfC,EAAkB,uCAAG,WAAOL,EAAcM,EAAaC,GAAlC,iBAAAtC,EAAA,6DAC1BkC,EAAW,IAAI/C,EAAKe,IAAIC,SAAST,EAAmBqC,GACtC,6CAFY,SAGFG,EAAS9B,QACpCmC,gBAAgBF,EAFC,6CAEyBC,GAC1ChC,OAL6B,cAG1BiC,EAH0B,yBAMzBpD,EAAKqC,MAAMC,QAAQc,IANM,2CAAH,0D,iBF9HzBC,EAAY/C,EAAQ,KACpBgD,EAAchD,EAAQ,KACtBiD,EAAqBjD,EAAQ,KAG7BkD,EAAc,qEAEdC,EAAcC,OAAOC,aAAaC,QAAQ,SAE1CC,EAAUC,YAAQ,CACtBC,SAAwB,SAAdN,EACVtD,OAAQ,uCACRC,UAAW,EACX4D,cAAe,CACbC,OAAQ,SAACA,GACPjE,EAAO,IAAIS,IAAKwD,EAAOC,YAG3BC,aAAc,CACZC,YAAa,sDACbC,QAAS,CACP,CAAEC,WAAY,YACd,CACEA,WAAY,gBACZC,UAAW,oCAEb,CACED,WAAY,YACZE,OAAQ,4BAEV,CAAEF,WAAY,SACd,CAAEA,WAAY,YACd,CAAEA,WAAY,cAOPG,EAAe,uCAAG,WAAMC,GAAN,eAAA7D,EAAA,sDACvBkD,EAAqB,SAAVW,EACjBb,EAAQc,OAAO,CAAEZ,aAFY,2CAAH,sDAKfa,EAAO,uCAAG,sBAAA/D,EAAA,sEACEgD,EAAQM,eADV,2DAEC,GAFD,uBAGCN,EAAQgB,cAHT,4DAID,GAJC,iCAKdhB,EAAQiB,WAAWvD,SALL,4CAAH,qDAQPwD,EAAU,uCAAG,sBAAAlE,EAAA,sDACxBgD,EAAQmB,cADgB,2CAAH,qDAIVC,EAA2B,uCAAG,4BAAApE,EAAA,6DACrCqE,GAAU,EAD2B,kBAGvBrB,EAAQgB,cAHe,OAGvCK,EAHuC,wEAKjCrB,EAAQM,eALyB,yBAMvBN,EAAQgB,cANe,QAMvCK,EANuC,6BASnCA,EATmC,0CASnBrB,EAAQiB,WAAWvD,SATA,2FAAH,qDAa3B4D,EAAS,uCAAG,WAAOC,EAAYC,EAAOC,GAA1B,iBAAAzE,EAAA,sEACDoE,IADC,cACjBM,EADiB,OAEjB5E,EAAS,IAAIX,EAAKe,IAAIC,SAASqC,EAAW+B,GAFzB,SAIjBzE,EAAOM,QACVkE,UAAUE,EAAOhE,SAASiE,IAC1BE,KAAK,CAAEC,KAAMF,IACbG,GAAG,mBAAmB,SAACC,GACtB1F,EAAO0F,KAAKA,MARO,2CAAH,0DAYTC,EAAU,uCAAG,WAAOR,EAAYS,GAAnB,iBAAAhF,EAAA,sEACFoE,IADE,cAClBM,EADkB,OAElB5E,EAAS,IAAIX,EAAKe,IAAIC,SAASqC,EAAW+B,GAFxB,SAGlBzE,EAAOM,QACV6E,YAAYD,GACZL,KAAK,CAAEC,KAAMF,IACbG,GAAG,mBAAmB,SAACC,GACtB1F,EAAO0F,KAAKA,MAPQ,2CAAH,wDAWVI,EAAW,uCAAG,WAAOX,EAAYY,GAAnB,iBAAAnF,EAAA,sEACHoE,IADG,cACnBM,EADmB,OAEnB5E,EAAS,IAAIX,EAAKe,IAAIC,SAASqC,EAAW+B,GAFvB,SAInBzE,EAAOM,QACVgF,aAAaD,EAAUT,GACvBC,KAAK,CAAEC,KAAMF,IACbG,GAAG,mBAAmB,SAACC,GACtB1F,EAAO0F,KAAKA,MARS,2CAAH,wDAYXO,EAAgB,uCAAG,WAAOd,EAAYC,EAAOc,GAA1B,iBAAAtF,EAAA,sEACRoE,IADQ,cACxBM,EADwB,OAExB5E,EAAS,IAAIX,EAAKe,IAAIC,SAASqC,EAAW+B,GAFlB,SAGxBzE,EAAOM,QACViF,iBAAiBb,GACjBG,KAAK,CAAEC,KAAMF,EAASa,MAAOpG,EAAKqC,MAAMgE,MAAMF,EAAUG,cACxDZ,GAAG,mBAAmB,SAACC,GACtB1F,EAAO0F,KAAKA,MAPc,2CAAH,0DAWhBY,EAAmB,uCAAG,WAAOnB,EAAYe,GAAnB,iBAAAtF,EAAA,sEACXoE,IADW,cAC3BM,EAD2B,OAE3B5E,EAAS,IAAIX,EAAKe,IAAIC,SAASqC,EAAW+B,GAFf,SAG3BzE,EAAOM,QACVuF,iBAAiBxG,EAAKqC,MAAMgE,MAAMF,EAAUG,aAC5Cd,KAAK,CAAEC,KAAMF,IACbG,GAAG,mBAAmB,SAACC,GACtB1F,EAAO0F,KAAKA,MAPiB,2CAAH,wDAWnBc,EAAO,uCAAG,WAAOrB,EAAYlD,EAASwE,GAA5B,iBAAA7F,EAAA,sEACCoE,IADD,cACfM,EADe,OAEf5E,EAAS,IAAIX,EAAKe,IAAIC,SAASqC,EAAW+B,GAF3B,SAGfzE,EAAOM,QACVwF,QAAQvE,EAASwE,GACjBlB,KAAK,CAAEC,KAAMF,IACbG,GAAG,mBAAmB,SAACC,GACtB1F,EAAO0F,KAAKA,MAPK,2CAAH,0DAWPgB,EAAS,uCAAG,WAAOvB,GAAP,iBAAAvE,EAAA,sEACDoE,IADC,cACjBM,EADiB,OAEjB5E,EAAS,IAAIX,EAAKe,IAAIC,SAASqC,EAAW+B,GAFzB,SAGjBzE,EAAOM,QACV0F,YACAnB,KAAK,CAAEC,KAAMF,IACbG,GAAG,mBAAmB,SAACC,GACtB1F,EAAO0F,KAAKA,MAPO,2CAAH,sDAaTiB,EAAsB,uCAAG,WAAOxB,EAAYxC,EAAcE,EAAQ+D,GAAzC,iBAAAhG,EAAA,sEACdoE,IADc,cAC9BM,EAD8B,OAE9BxC,EAAW,IAAI/C,EAAKe,IAAIC,SAASsC,EAAaV,GAFhB,SAG9BG,EAAS9B,QACZ6F,WACCvB,EACAH,EACA,6CACAtC,GAED0C,KAAK,CAAEC,KAAMF,EAASa,MAAOpG,EAAKqC,MAAMgE,MAAMQ,EAAOP,cACrDZ,GAAG,mBAAmB,SAACC,GACtB1F,EAAO0F,KAAKA,MAZoB,2CAAH,4DAgBtBoB,EAAuB,uCAAG,WAAO3B,EAAYxC,EAAcO,GAAjC,mBAAAtC,EAAA,sEACfoE,IADe,cAC/BM,EAD+B,gBAEbvD,EAAaoD,EAAYG,EAAS3C,GAFrB,UAE/BT,EAF+B,QAGjC,IAAI6E,IAAG7E,GAAW8E,GAAG,IAAID,IAAG7D,IAHK,gCAI7BsD,EAAQrB,EAAYxC,EAAcY,GAJL,cAM/BT,EAAW,IAAI/C,EAAKe,IAAIC,SAASsC,EAAaV,GANf,UAO/BG,EAAS9B,QACZiG,YACC3B,EACAH,EACA,6CACAjC,GAEDqC,KAAK,CAAEC,KAAMF,IACbG,GAAG,mBAAmB,SAACC,GACtB1F,EAAO0F,KAAKA,MAhBqB,4CAAH,0DAyBvBwB,EAAY,uCAAG,WAAOxG,EAAQyG,EAAaC,EAAUC,EAAcC,GAApD,qBAAA1G,EAAA,sEACJoE,IADI,cACpBM,EADoB,gBAEFvD,EAAarB,EAAQ4E,EAAS6B,GAF5B,UAEpBjF,EAFoB,QAGtB,IAAI6E,IAAG7E,GAAW8E,GAAG,IAAID,IAAGK,IAHN,gCAIlBZ,EAAQ9F,EAAQyG,EAAa5D,GAJX,cAMpBgE,EAAkB,IAAIxH,EAAKe,IAAIC,SAASuC,EAAoB6D,GAC5DK,EAAWC,KAAKC,KAAKC,KAAKC,MAAQ,KAlMhB,IA2LE,UAQpBL,EAAgBvG,QACnBkG,aACCG,EACAD,EACAI,GAEDjC,KAAK,CAAEC,KAAMF,EAASa,MAAOpG,EAAKqC,MAAMgE,MAAMkB,GAAY,IAC1D7B,GAAG,mBAAmB,SAACC,GACtB1F,EAAO0F,KAAKA,MAhBU,4CAAH,8DAuBZmC,EAAe,uCAAG,WAAOV,EAAaW,EAAmBC,EAASC,GAAhD,qBAAApH,EAAA,sEACPoE,IADO,cACvBM,EADuB,OAEvB2C,EAAclI,EAAKqC,MAAMgE,MAAM2B,GAC/BR,EAAkB,IAAIxH,EAAKe,IAAIC,SAASuC,EAAoB6D,GAC5DK,EAAWC,KAAKC,KAAKC,KAAKC,MAAQ,KAtNhB,IAkNK,SAKvBL,EAAgBvG,QACnB6G,gBAAgBC,EAAmBG,EAAaD,EAAYR,GAC5DjC,KAAK,CACJC,KAAMF,IAEPG,GAAG,mBAAmB,SAACC,GACtB1F,EAAO0F,KAAKA,MAXa,2CAAH,4D,QGvLbwC,OAhCf,YAA2C,IAAlBvH,EAAiB,EAAjBA,KAAMwH,EAAW,EAAXA,QAAW,EACFC,oBAAS,GADP,mBACjCC,EADiC,KACpBC,EADoB,KAGlCC,EAAW,uCAAG,4BAAA3H,EAAA,sEACI+D,IADJ,WAEF,KADVrD,EADY,gEAGlBgH,GAAe,GACfH,EAAQ7G,GAJU,mBAKX,GALW,2CAAH,qDAQXkH,EAAc,uCAAG,sBAAA5H,EAAA,sEACfkE,IADe,OAErBwD,GAAe,GACfH,EAAQ,IAHa,2CAAH,qDAMpB,OAAOE,EACL,oCACE,yBAAKI,MAAO,CAACC,WAAY,EAAGC,aAAc,IAC1C,kBAAC,KAAD,CAAUC,QAASJ,EAAgBK,KAAK,SAAxC,IAAkD,kBAAC,KAAD,MAAlD,MAEA,kBAAC,KAAD,CAAKC,QAAS,GACZ,kBAAC,KAAD,CAAeC,OAAQpI,MAK3B,kBAAC,KAAD,CAAQqI,KAAM,kBAAC,KAAD,MAAiBC,MAAO,UAAWL,QAASL,KCb/CW,OAjBf,YAA2C,IAAtBzE,EAAqB,EAArBA,MAAO0E,EAAc,EAAdA,YAOxB,OACE,kBAAC,KAAD,CACAH,KAAiB,SAAVvE,EAAmB,kBAAC,KAAD,MAAc,kBAAC,KAAD,MACxCmE,QARsB,WACDO,EAAT,UAAV1E,EAA+B,OAClB,UAOfwE,MAAQ,WC8Bd,SAASG,GAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,QAC3B,OACE,yBAAKH,MAAO,CAAEa,YAAa,KACzB,kBAAC,KAAD,CAAUV,QAASA,GACjB,yBAAKH,MAAO,CAACK,QAAS,KAAMS,QAAQ,GAAKC,SAAU,KAC9CH,KAOEI,OAjDf,YAAwD,IAAtChF,EAAqC,EAArCA,MAAO0E,EAA8B,EAA9BA,YAAaxI,EAAiB,EAAjBA,KAAMwH,EAAW,EAAXA,QACpCuB,EAAUC,cADqC,EAEtBvB,oBAAS,GAFa,mBAE9CwB,EAF8C,KAEtCC,EAFsC,KASrD,OALAC,qBAAU,WACR,IAAMC,EAAqC,MAA9BL,EAAQM,SAASC,SAC9BJ,EAAaE,KACZ,CAACL,EAAQM,SAASC,WAGnB,kBAAC,KAAD,CACEC,QACEN,EACE,qCAEA,oCACE,yBAAKnB,MAAO,CAAE0B,OAAQ,SACpB,kBAAC,KAAD,CAAYvB,QAAS,WACnBc,EAAQU,aAGZ,kBAAChB,GAAD,CAAYC,MAAM,YAAYT,QAAS,WAAKc,EAAQW,KAAK,iBACzD,kBAACjB,GAAD,CAAYC,MAAM,gBAAgBT,QAAS,WAAKc,EAAQW,KAAK,gBAC7D,kBAACjB,GAAD,CAAYC,MAAM,QAAQT,QAAS,WAAKc,EAAQW,KAAK,eAI3DC,UACE,oCACE,kBAAC,GAAD,CAAe3J,KAAMA,EAAMwH,QAASA,IACpC,kBAAC,GAAD,CAAkB1D,MAAOA,EAAO0E,YAAaA,QCHvD,SAASoB,GAAT,GAA+D,IAAzClB,EAAwC,EAAxCA,MAAOlF,EAAiC,EAAjCA,YAAaqG,EAAoB,EAApBA,QAAS5B,EAAW,EAAXA,QACjD,OACE,kBAAC,KAAD,CAAUA,QAASA,EAASH,MAAO,CAAEgC,MAAO,SAC1C,kBAAC,KAAD,KACE,yBAAKhC,MAAO,CAAEK,QAAQ,GAAIU,SAAU,KAAOH,GAC3C,yBAAKqB,IAAI,OAAOjC,MAAO,CAAEK,QAAQ,GAAIqB,OAAO,IAAMQ,IAAKH,IACvD,yBAAK/B,MAAO,CAAEC,WAAY,EAAGa,QAAS,KAAtC,IAA+CpF,EAA/C,OAOOyG,OA3Cf,WACE,IAAMlB,EAAUC,cAEhB,OACE,oCACE,kBAAC,KAAD,CAAQO,QAAQ,8BAChB,yBAAKzB,MAAO,CAAEK,QAAS,EAAGS,QAAS,KAAnC,qCACA,yBAAKd,MAAO,CAAEK,QAAS,KAAM+B,QAAS,OAAQC,WAAY,WACxD,yBAAKrC,MAAO,CAAEgC,MAAO,MAAOM,YAAa,OACvC,kBAACR,GAAD,CAAYlB,MAAM,YAAYlF,YAAY,uCAAuCqG,QAAQ,8CAA+C5B,QAAS,WAC/Ic,EAAQW,KAAK,iBAIjB,yBAAK5B,MAAO,CAAEgC,MAAO,QACnB,kBAACF,GAAD,CAAYlB,MAAM,gBAAgBlF,YAAY,iCAAiCqG,QAAQ,8CAA+C5B,QAAS,WAC7Ic,EAAQW,KAAK,iBAIjB,yBAAK5B,MAAO,CAAEgC,MAAO,MAAOO,WAAY,OACtC,kBAACT,GAAD,CAAYlB,MAAM,QAAQlF,YAAY,mCAAmCqG,QAAQ,8CAA+C5B,QAAS,WACvIc,EAAQW,KAAK,kBC1BZY,GAAU,CACrB,CACEC,KAAM,6CACN7B,MAAO,iBAGP8B,OAAQ,QACRC,KAAM,sBACN1J,SAAU,EACVc,OAAQ,6CACR6I,WAAY,6CACZC,WAAY,6CACZC,OAAQ,6CACRC,YAAa,UACbC,SAAU,IACV3I,SAAU,6CACVyE,gBAAiB,8CAEnB,CACE2D,KAAM,6CACN7B,MAAO,kBAGP8B,OAAQ,SACRC,KAAM,uBACN1J,SAAU,EACVc,OAAQ,6CACR6I,WAAY,6CACZC,WAAY,6CACZC,OAAQ,6CACRC,YAAa,SACbC,SAAU,IACV3I,SAAU,6CACVyE,gBAAiB,8CAEnB,CACE2D,KAAM,6CACN7B,MAAO,uBAEN8B,OAAQ,OACRC,KAAM,4BACN1J,SAAU,EACVc,OAAQ,6CACR6I,WAAY,6CACZC,WAAY,6CACZC,OAAQ,6CACRC,YAAa,OACbC,SAAU,IACV3I,SAAU,6CACVyE,gBAAiB,8CAEpB,CACE2D,KAAM,6CACN7B,MAAO,uBAEP8B,OAAQ,QACRC,KAAM,sBACN1J,SAAU,EACVc,OAAQ,6CACR6I,WAAY,6CACZC,WAAY,6CACZC,OAAQ,6CACRC,YAAa,MACbC,SAAU,IACV3I,SAAU,6CACVyE,gBAAiB,+CClCNmE,OAzBf,WACE,IAAMhC,EAAUC,cAIhB,OACE,oCACE,kBAAC,KAAD,CAAQO,QAAQ,kBAChB,yBAAKzB,MAAO,CAACK,QAAS,EAAGS,QAAQ,KAAjC,0CACA,kBAAC,KAAD,CACEoC,OAAQ,CAAC,OAAQ,WAAY,IAC7BC,QAASX,GACTY,eAAgB,EAChBC,YAAa,YAAsB,IAAnBZ,EAAkB,EAAlBA,KAAM7B,EAAY,EAAZA,MACpB,MAAO,CACL,oCAAGA,GACH,kBAAC,KAAD,CAAeN,OAAQmC,EAAMa,SAAS,IACtC,kBAAC,KAAD,CAAQnD,QAAS,kBAfT,SAACsC,GACjBxB,EAAQW,KAAR,iBAAuBa,IAcQc,CAAUd,KAAjC,uBCQGQ,OAzBf,WACE,IAAMhC,EAAUC,cAIhB,OACE,oCACE,kBAAC,KAAD,CAAQO,QAAQ,UAChB,yBAAKzB,MAAO,CAACK,QAAS,EAAGS,QAAQ,KAAjC,0CACA,kBAAC,KAAD,CACEoC,OAAQ,CAAC,OAAQ,WAAY,IAC7BC,QAASX,GACTY,eAAgB,EAChBC,YAAa,YAAsB,IAAnBZ,EAAkB,EAAlBA,KAAM7B,EAAY,EAAZA,MACpB,MAAO,CACL,oCAAGA,GACH,kBAAC,KAAD,CAAeN,OAAQmC,EAAMa,SAAS,IACtC,kBAAC,KAAD,CAAQnD,QAAS,kBAfT,SAACsC,GACjBxB,EAAQW,KAAR,oBAA0Ba,IAcKe,CAAUf,KAAjC,yBCPGgB,OAZf,YAAwC,IAAjBjD,EAAgB,EAAhBA,MAAO3H,EAAS,EAATA,QAE5B,OACE,oCACE,yBAAKmH,MAAO,CAAEe,SAAU,GAAIV,QAAS,IAArC,IAA4CG,EAA5C,KACA,yBAAKR,MAAO,CAAEK,QAAS,IACrB,kBAAC,KAAD,CAAeC,OAAQzH,EAASyK,SAAS,OCalCI,OArBf,YAAwC,IAAjBC,EAAgB,EAAhBA,MAAOjL,EAAS,EAATA,QACxBkL,EAAU,IACZC,EAAS,IACX,GAAInL,EAAU,EAAG,CACf,IAAMoL,EAAMpL,EAAQkF,WACdmG,EAAQD,EAAIC,MAAM,KACxBH,EAAUG,EAAM,GAChBF,EAASE,EAAMC,OAAS,EAAIF,EAAIC,MAAM,KAAK,GAAK,IAGlD,OACE,oCACE,yBAAK/D,MAAO,CAAEe,SAAU,GAAIV,QAAS,IAArC,IAA4CsD,EAA5C,KACA,yBAAK3D,MAAO,CAAEK,QAAS,IACrB,0BAAML,MAAO,CAAEe,SAAU,KAAO6C,GADlC,IAEE,0BAAM5D,MAAO,CAAEe,SAAU,KAAzB,IAAiC8C,EAAjC,QCIOI,OAjBf,YAAqC,IAAjBC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,MAC1B,OAAOD,EACLC,EAAQ,IACN,kBAAC,KAAD,CAAKC,WAAW,UAAUC,MAAM,WAC7B,IADH,SAES,KAGT,kBAAC,KAAD,CAAKC,KAAK,OAAV,UAGF,kBAAC,KAAD,CAAKD,MAAM,UAAUD,WAAW,WAAhC,YCTWG,OAJf,YAAkC,IAAV3D,EAAS,EAATA,MACtB,OAAO,yBAAKZ,MAAO,CAAEK,QAAS,GAAIU,SAAU,KAAOH,ICatC4D,OAVf,YAAiC,IAAZrE,EAAW,EAAXA,QACnB,OACE,yBAAKH,MAAO,CAAEK,QAAS,IACrB,kBAAC,KAAD,CAAYF,QAASA,GACnB,0BAAMH,MAAO,CAAEc,QAAS,KAAxB,YCGO2D,OAXf,YAAqC,IAAfjE,EAAc,EAAdA,MAAOxC,EAAO,EAAPA,IAC3B,OAAI0G,WAAW1G,GAAO,EAElB,yBAAKgC,MAAO,CAAEK,QAAS,EAAGS,QAAS,KACjC,0BAAMd,MAAO,CAAEe,SAAU,KAAzB,IAAiCP,EAAjC,KAAgD,IAChD,0BAAMR,MAAO,CAAEe,SAAU,KAAzB,IAAiC2D,WAAW1G,GAAK2G,QAAQ,GAAzD,KAAqE,KAG7D,yBAAK3E,MAAO,CAAEK,QAAS,EAAGS,QAAS,OCLnD,SAAS8D,GAAT,GAA+C,IAAlB3M,EAAiB,EAAjBA,OAAQ0E,EAAS,EAATA,MAC7BsE,EAAUC,cAIhB,OAAO,kBAAC,KAAD,CAAQf,QAAS,kBAHD,SAAClI,EAAQ0E,GAC9BsE,EAAQW,KAAR,kBAAwB3J,EAAxB,YAAkC0E,IAENkI,CAAe5M,EAAQ0E,IAAQ6D,MAAM,WAGrE,SAASsE,GAAT,GAA4C,IAAjB7M,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAC3B+I,EAAUC,cAOhB,OAAO,kBAAC,KAAD,CACLf,QAAS,kBALTlC,EAAUhG,QACVgJ,EAAQW,KAAR,kBAAwB3J,EAAxB,YAAkCC,KAKlCsI,MAAM,eCjBH,SAAeuE,GAAtB,mC,8CAAO,WAAqCC,GAArC,mBAAA7M,EAAA,6DACC8M,EADD,8DAImBD,EAJnB,0FAWkBE,GAAUD,GAX5B,cAWCE,EAXD,OAYCC,EAASD,EAASE,KAAKD,OAZxB,kBAaEA,GAbF,4C,sBAgBA,SAAeE,GAAtB,mC,8CAAO,WAAmC3I,GAAnC,mBAAAxE,EAAA,6DACC8M,EADD,yCAEuBtI,EAFvB,0HAUkBuI,GAAUD,GAV5B,cAUCE,EAVD,OAWCI,EAAUJ,EAASE,KAAKD,OAXzB,kBAYEG,GAZF,4C,sBAeA,SAAeC,GAAtB,mC,8CAAO,WAAqC7I,GAArC,iBAAAxE,EAAA,6DACC8M,EAAQQ,GAAwB9I,GADjC,SAEkBuI,GAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASE,KAAKK,kBAHhB,4C,sBAMP,IAAMD,GAA0B,SAAC9I,GAAD,qEAETA,EAFS,2LAoB1BuI,GAAS,uCAAG,WAAOD,GAAP,iBAAA9M,EAAA,6DACVqK,EAAU,CACdmD,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEd,WAJT,SAMEe,MApEM,wDAoEoBxD,GAN5B,cAMVyD,EANU,gBAOHA,EAAIC,OAPD,mFAAH,sDC9DT5O,GAAO,IAAIS,IAEV,SAASoO,GAAaC,EAAKC,GAChC,OAAO3B,WAAW0B,GAAKzB,QAAQ0B,GAG1B,IAAMC,GAAiB,SAACC,EAAQC,GACrC,OAAOxH,KAAKyH,MAAM/B,WAAW6B,GAAX,SAAqB,GAAMC,KAGlC5M,GAAUtC,GAAKqC,MAAMC,QACrB+D,GAAQrG,GAAKqC,MAAMgE,MAMnB+I,GAAoB,SAACC,GAChC,IAAMC,EAAiBD,EAAS/I,WAAWmG,MAAM,KAC3C8C,EAAMD,EAAe,GAC3B,GAA8B,IAA1BA,EAAe5C,OAAc,OAAO6C,EACxC,IAAIhD,EAAS+C,EAAe,GAG5B,OAFG/C,EAAOG,OAAS,KAAIH,EAASA,EAAOiD,MAAM,EAAG,KACpC,UAAMD,EAAN,YAAahD,IAIdkD,GAAe,SAACC,EAAaC,GACxC,OAAOD,EAAW,SAAG,GAAMC,IAGtB,SAASC,GAAUC,GACxB,IAAIhI,EAAM,IAAID,KACZkI,GAAejI,EAAIkI,UAAYF,GAAa,IAC9C,GAAIC,EAAc,GAChB,OAAOzO,SAASyO,GAAe,QAEjC,GAAIA,EAAc,KAChB,OAAOzO,SAASyO,EAAc,IAAM,QAEtC,GAAIA,GAAe,MACjB,OAAOzO,SAASyO,EAAc,MAAQ,QAExC,GAAIA,EAAc,MAAO,CACvB,IAAME,EAAK,IAAIpI,KAAKiI,GAIpB,OAHYG,EAAGC,UAGF,IAFCD,EAAGE,eAAeC,MAAM,cAAc,GAAGC,QAAQ,IAAK,KACvDJ,EAAGK,gBAAkBxI,EAAIwI,cAAgB,GAAK,IAAML,EAAGK,gBAKjE,SAASC,GAAkBC,EAAQC,GACxC,IAAMC,EAAQF,EAAO1D,MACf6D,EAAQF,EAAO3D,MAEjB8D,EAAa,EAMjB,OALIvD,WAAWqD,GAASrD,WAAWsD,GACjCC,EAAa,EACJvD,WAAWqD,GAASrD,WAAWsD,KACxCC,GAAc,GAETA,EAWF,IAAMC,GAAiB,SAACtF,EAAYuF,EAAapF,EAAaqF,GACnE,MAAoB,MAAhBD,EAA4BE,IACzB1P,SAASiK,IAAgBjK,SAASwP,GAAepF,EAAcqF,IClElEE,GAAU1Q,EAAQ,KA2FT2Q,OAzFf,YAA6B,IAATrQ,EAAQ,EAARA,KAAQ,EACayH,mBAAS,IADtB,mBACnB6I,EADmB,KACNC,EADM,OAEc9I,mBAAS,IAFvB,mBAEnB+I,EAFmB,KAELC,EAFK,KAGpB/I,EAAuB,KAAT1H,EAgCpB,OA7BA0Q,kBAAO,sBAAC,gCAAAzQ,EAAA,yDACDyH,EADC,iEAEmB0F,GAAoBpN,GAFvC,cAEA2Q,EAFA,OAGAL,EAAc,GACdM,EAAkB,GAJlB,SAKAR,GAAQS,IAAIvG,GAAZ,uCAAqB,WAAMwG,GAAN,mBAAA7Q,EAAA,yDACnB8Q,EAAQJ,EAAWK,MAAK,SAACC,GAAD,OAAWA,EAAMC,gBAAgBvQ,UAAYmQ,EAAOvG,eACvD4G,IAAVJ,GAFQ,iCAKQpP,EAASmP,EAAOjP,OAAQiP,EAAOlG,QALvC,OAKjBwG,EALiB,OAMjBnF,EAAQ+D,GAAee,EAAMrG,WAAYqG,EAAMM,cAAeP,EAAOjG,YAAauG,GACxFd,EAAY5G,KAAK,CACf3J,OAAQ+Q,EAAOvG,KACf+G,WAAYR,EAAOpI,MACnBgC,WAAYqG,EAAMrG,WAClBuB,UAXqB,wBAcvB2E,EAAgBlH,KAAK,CACnB3J,OAAQ+Q,EAAOvG,KACf+G,WAAYR,EAAOpI,QAhBE,4CAArB,uDALA,OAyBN6H,EAAgBD,EAAYiB,KAAK7B,KACjCe,EAAgBG,GA1BV,4CA2BL,CAAClJ,EAAa1H,IAGf,oCACE,kBAAC,KAAD,CAASuJ,QAAS,cACjB7B,EACC,oCACG4I,EAAYxE,OAAS,EACpB,yBAAKhE,MAAO,CAAC0J,cAAe,OAC1B,kBAAC,GAAD,CAAc9I,MAAO,oBACrB,kBAAC,KAAD,CACEsC,OAAQ,CAAC,QAAS,WAAY,aAAc,QAAS,IACrDC,QAASqF,EACTpF,eAAgB,EAChBC,YAAa,YAA0D,IAAvDpL,EAAsD,EAAtDA,OAAQuR,EAA8C,EAA9CA,WAAY5G,EAAkC,EAAlCA,WAAYuB,EAAsB,EAAtBA,MAAsB,EAAflL,SACrD,MAAO,CACLuQ,EACA,kBAAC,KAAD,CAAelJ,OAAQrI,IACvBkO,GAAavM,GAAQgJ,GAAa,GAClCuD,GAAahC,EAAO,GACpB,kBAACS,GAAD,CAAmB3M,OAAQA,EAAQ0E,MAAOzE,SAMlD,qCAEDwQ,EAAa1E,OAAS,EAErB,6BACE,kBAAC,GAAD,CAAcpD,MAAO,oBACrB,kBAAC,KAAD,CACEsC,OAAQ,CAAC,QAAS,WAAY,UAC9BC,QAASuF,EACTrF,YAAa,YAA6B,IAA1BpL,EAAyB,EAAzBA,OACd,MAAO,CADgC,EAAjBuR,WAGpB,kBAAC,KAAD,CAAelJ,OAAQrI,EAAQqL,SAAS,IACxC,kBAACwB,GAAD,CAAiB7M,OAAQA,EAAQC,KAAMA,SAM/C,sCAKJ,yBAAK8H,MAAO,CAACK,QAAS,EAAGS,QAAQ,KAAjC,wCC2BO6I,OAtGf,YAA4F,IAAtE1R,EAAqE,EAArEA,OAAQ0E,EAA6D,EAA7DA,MAAOiG,EAAsD,EAAtDA,WAAYsB,EAA0C,EAA1CA,OAAQqF,EAAkC,EAAlCA,cAAepF,EAAmB,EAAnBA,MAAOlL,EAAY,EAAZA,SAAY,EAC7D0G,oBAAS,GADoD,mBAClFiK,EADkF,KAC1EC,EAD0E,OAEzDlK,mBAAS,GAFgD,mBAElFmK,EAFkF,KAExEC,EAFwE,OAGjDpK,mBAAS,GAHwC,mBAGlF/C,EAHkF,KAGpEoN,EAHoE,KAuBzF,OAhBA3I,qBAAU,WACR,IAAI4I,GAAc,EADJ,4CAEd,4BAAA9R,EAAA,yDACOyR,EADP,iEAEgC1Q,EAAmBjB,EAAQ0E,GAF3D,OAEQuN,EAFR,OAGOD,GACHD,EAAgBjD,GAAamD,EAAiBjR,IAJlD,4CAFc,sBAWd,OAXc,mCASdkR,GAEO,WACLF,GAAc,KAEf,CAAChR,EAAUhB,EAAQ2R,EAAQjN,IAG5B,oCACE,kBAAC,KAAD,CAAQwD,QArBC,kBAAM0J,GAAU,IAqBFrJ,MAAM,SAC7B,kBAAC,KAAD,CAAOwB,MAAO,IAAK3B,QAAS,GAAI+J,QAASR,EAAQS,QArBvC,kBAAMR,GAAU,KAsBxB,kBAAC,KAAD,CAAQpI,QAAS,oBACjB,kBAAC,KAAD,CAAK6I,QAAS,SACZ,kBAAC,KAAD,CAAehK,OAAQ3D,EAAO2G,SAAS,KAEzC,kBAAC,KAAD,CACEJ,OAAQ,CAAC,aAAc,SAAU,QAAS,UAC1CC,QAAS,CAAC,CAAEP,aAAYsB,SAAQqF,gBAAepF,UAC/Cf,eAAgB,EAChBC,YAAa,YAAmD,IAAhDT,EAA+C,EAA/CA,WAAYsB,EAAmC,EAAnCA,OAAQqF,EAA2B,EAA3BA,cAAepF,EAAY,EAAZA,MACjD,MAAO,CAACvB,EAAY2G,EAAepF,EAAOF,GAAS,CAAEC,SAAQC,cAIjE,6BACA,kBAAC,KAAD,CAAKmG,QAAS,kBACZ,kBAAC,KAAD,CACE7I,QACE,kBAAC,KAAD,CACE8I,KAAK,SACLC,MAAM,EACNC,UAAW,kBAAC,KAAD,MACXC,kBAAkB,MAClBhN,MAAOoM,EACPa,SAAU,SAACC,GACTb,EAAYa,EAAMC,OAAOnN,UAI/BmE,UACE,kBAAC,KAAD,CACErB,MAAM,iBACNgK,MAAM,EACNrK,QAAS,WACP3C,EAAiBvF,EAAQ0E,EAAOmN,SAO1C,6BACA,kBAAC,KAAD,CAAKQ,QAAS,aACZ,kBAAC,KAAD,CACE7I,QACE,oCAEE,kBAAC,KAAD,CACE+I,MAAM,EACND,KAAK,SACLE,UAAW,kBAAC,KAAD,MACXC,kBAAkB,MAClBhN,MAAOd,EACP+N,SAAU,SAACC,GACTZ,EAAgBY,EAAMC,OAAOnN,WAKrCmE,UACE,kBAAC,KAAD,CACE2I,MAAM,EACNM,SAAU5G,EACV1D,MAAM,YACNL,QAAS,WACP1D,EAAUxE,EAAQ0E,EAAOC,EAAY,SAAG,GAAM3D,aC9BjD8R,OAxEf,YAA2C,IAAjB9S,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAC1B8Q,EAASxG,GAAQ0G,MAAK,SAACF,GAAD,OAAYA,EAAOvG,OAASxK,KADhB,EAEN0H,oBAAS,GAFH,mBAEjCqL,EAFiC,KAEtBC,EAFsB,OAGZtL,mBAAS,IAHG,mBAGjCyF,EAHiC,KAGzB8F,EAHyB,KA0CxC,OArCA7J,qBAAU,WACR,IAAI4I,GAAc,EACZkB,EAAU,uCAAG,0CAAAhT,EAAA,sEACI4M,GAAsB9M,GAD1B,cACXmN,EADW,OAETtC,EAAoDkG,EAApDlG,OAAQ7J,EAA4C+P,EAA5C/P,SAAU+J,EAAkCgG,EAAlChG,SAAUD,EAAwBiG,EAAxBjG,YAAahJ,EAAWiP,EAAXjP,OAFhC,SAIaF,EAASE,EAAQ+I,GAJ9B,OAIXsI,EAJW,OAKXC,EAAcjG,EAAO2D,KAAI,SAACI,GAC9B,GAA4B,MAAxBA,EAAMI,cAGR,OAFAJ,EAAMhF,MAAQkE,IACdc,EAAMjF,QAAS,EACRiF,EAET,IAAMhF,EAAQ+D,GAAeiB,EAAMvG,WAAYuG,EAAMI,cAAexG,EAAaqI,GAC3E7B,EAAgBxC,GAAaoC,EAAMI,cAAetQ,GAKxD,OAJAkQ,EAAMI,cAAgBA,EACtBJ,EAAMhF,MAAQA,EACdgF,EAAMjF,OAASC,EAAQnB,EACvBmG,EAAMlR,OAASA,EACRkR,KACNM,KAAK7B,IAEHqC,IACHiB,EAAUG,GACVJ,GAAa,IAtBE,2CAAH,qDA0BhBE,IACA,IAAMG,EAAKC,YAAYJ,EAAY,MAEnC,OAAO,WACLlB,GAAc,EACduB,cAAcF,MAEf,CAACrT,EAAQ+Q,EAAQ9Q,IAGlB,oCACE,kBAAC,GAAD,CAAc0I,MAAO,eACrB,kBAAC,KAAD,CACE6K,OAAQT,EAAY,UAAY,UAChC9H,OAAQ,CAAC,QAAS,aAAc,SAAU,QAAS,SAAU,IAC7DC,QAASiC,EACThC,eAAgB,EAChBC,YAAa,YAA0D,IAAvD1G,EAAsD,EAAtDA,MAAOiG,EAA+C,EAA/CA,WAAY2G,EAAmC,EAAnCA,cAAepF,EAAoB,EAApBA,MAAOD,EAAa,EAAbA,OACvD,MAAO,CACL,kBAAC,KAAD,CAAe5D,OAAQ3D,EAAO2G,SAAS,IACvC6C,GAAavM,GAAQgJ,GAAa,GAClCuD,GAAaoD,EAAe,GAC5BpD,GAAahC,EAAO,GACpBF,GAAS,CAACC,SAAQC,UAClB,kBAAC,GAAD,CACElL,SAAU+P,EAAO/P,SACjBhB,OAAQA,EAAQ0E,MAAOA,EACvBiG,WAAYhJ,GAAQgJ,GACpBsB,OAAQA,EACRqF,cAAeA,EACfpF,MAAOA,UChBNuH,OAlDf,YAAgD,IAAtBzT,EAAqB,EAArBA,OAAQ0T,EAAa,EAAbA,UAC1B3C,EAASxG,GAAQ0G,MAAK,SAACF,GAAD,OAAYA,EAAOvG,OAASxK,KADX,EAEf0H,mBAAS,KAFM,mBAEtCjH,EAFsC,KAE7BkT,EAF6B,OAGPjM,mBAAS,KAHF,mBAGtC5G,EAHsC,KAGzB8S,EAHyB,KAsB7C,OAjBAxK,qBAAU,WACR,IAAI4I,GAAc,EADJ,4CAEd,oCAAA9R,EAAA,sEACqCmQ,QAAQwD,IAAI,CAACpS,EAAWzB,GAASW,EAAaX,KADnF,mCACSS,EADT,KACkBqT,EADlB,KAEUhT,EAAgBgT,EAAhBhT,YACHkR,IACH2B,EAAWlT,GACXmT,EAAe9S,IALnB,4CAFc,sBAYd,OAZc,mCAUdiT,GAEO,WACL/B,GAAc,KAEf,CAAChS,IAGF,oCACE,kBAAC,KAAD,CAAQwJ,QAASuH,EAAOrG,OACxB,kBAAC,KAAD,CACElB,QACE,kBAAC,KAAD,CACEA,QACE,kBAAC,KAAD,CAAK6I,QAAS,WAAYjK,QAAS,IACjC,kBAAC,KAAD,CAAeC,OAAQrI,EAAQqL,SAAS,KAG5CzB,UACE,kBAAC,KAAD,CAAKyI,QAAS,UAAWjK,QAAS,IAC/B3H,KAKTmJ,UACE,kBAAC,KAAD,CAAKyI,QAAS,eAAgBjK,QAAS,IACpCtH,EADH,IACiB4S,OC/BZM,OAVf,YAA4B,IAAR/T,EAAO,EAAPA,KACZuK,EAASyJ,cAATzJ,KACN,OACE,oCACE,kBAAC0J,GAAD,CAAelU,OAAQwK,EAAMvK,KAAMA,IACnC,kBAACkU,GAAD,CAAYnU,OAAQwK,EAAMvK,KAAMA,MCiHvBmU,OApHf,YAUI,IATFC,EASC,EATDA,QACAnD,EAQC,EARDA,MACAoD,EAOC,EAPDA,WACAzT,EAMC,EANDA,MACA6D,EAKC,EALDA,MACA6P,EAIC,EAJDA,YACAzJ,EAGC,EAHDA,YACAC,EAEC,EAFDA,SACAyJ,EACC,EADDA,YACC,EAC+C9M,mBAAS,GADxD,mBACM+M,EADN,KACwBC,EADxB,OAEqDhN,mBAAS,GAF9D,mBAEMiN,EAFN,KAE2BC,EAF3B,KAOKC,EAAiB,SAACC,GACtB,IAAIA,GAAiBA,GAAiB,EAAG,OAAO,EAChD,IAAMjJ,EAAMiJ,EAAcnP,WACpBoP,EAAW9E,GAAepE,EAAKqF,EAAMI,cAAexG,EAAayJ,GACvEC,EAAYtG,GAAa6G,EAAS,KAGpC,OACE,kBAAC,KAAD,CAAK1C,QAAS,cACZ,yBAAKtK,MAAO,CAAEoC,QAAS,SAErB,yBAAKpC,MAAO,CAAEgC,MAAO,QAClB0B,GAAa,CAAEC,MAAO,mBAAoBjL,QAASyN,GAAaoG,EAAW,MAG9E,yBAAKvM,MAAO,CAAEgC,MAAO,MAAO/B,WAAY,OACtC,yBAAKD,MAAO,CAAEoC,QAAS,SACrB,yBAAKpC,MAAO,CAAEgC,MAAO,QACnB,oCACE,kBAAC,KAAD,CACEuI,KAAK,SACLC,MAAM,EACN9M,MAAOgP,EACP/B,SAAU,SAACC,GACT,IAAM5M,EAAM4M,EAAMC,OAAOnN,MACzBiP,EAAoB3O,GACpB,IAAMiP,EAAqBtU,SAASwQ,EAAMvG,YAAcjK,SAASgF,GAAMK,IACvE8O,EAAeG,MAGnB,kBAAC,GAAD,CACE9M,QAAS,WACPwM,EAAoBJ,GACpB,IAAMQ,EAAgBpU,SAASwQ,EAAMvG,YAAcjK,SAASgF,GAAM4O,IAClEO,EAAeC,QAKvB,yBAAK/M,MAAO,CAAEgC,MAAO,QACnB,kBAAC,KAAD,CACEwI,MAAM,EACNjK,KAAM,kBAAC,KAAD,MACNC,MAAM,MACNL,QAAS,WACP3C,EAAiB1E,EAAO6D,EAAO+P,SAMzC,yBAAK1M,MAAO,CAAEgC,MAAO,QAErB,yBAAKhC,MAAO,CAAEgC,MAAO,MAAO/B,WAAY,OACtC,yBAAKD,MAAO,CAAEoC,QAAS,SACrB,yBAAKpC,MAAO,CAAEgC,MAAO,QACnB,oCACE,kBAAC,KAAD,CACEuI,KAAK,SACLC,MAAM,EACN9M,MAAOkP,EACPjC,SAAU,SAACC,GACT,IAAM5M,EAAM4M,EAAMC,OAAOnN,MACzBmP,EAAuB7O,GACvB,IAAMkP,EAAmBvU,SAASwQ,EAAMvG,YAAcjK,SAASgF,GAAMK,IACrE8O,EAAeI,MAGnB,kBAAC,GAAD,CACE/M,QAAS,WACP,KAAIqM,GAAe,GAAnB,CACA,IACMW,EADmBpK,EAAcoG,EAAMI,cAAgBvG,EACpBwJ,EACnCY,EAAiBzU,SAASwQ,EAAMvG,WAAauK,GAAevP,WAClEiP,EAAuBjT,GAAQwT,IAC/BX,EAAYzJ,SAKpB,yBAAKhD,MAAO,CAAEgC,MAAO,QACnB,kBAAC,KAAD,CACE8I,UAAWwB,EACX9B,MAAM,EACNjK,KAAM,kBAAC,KAAD,MACNC,MAAM,SACNL,QAAS,WACPtC,EAAoB/E,EAAO8T,YCsB9BS,OAjIf,YAWI,IAVFf,EAUC,EAVDA,QACAnD,EASC,EATDA,MACAmE,EAQC,EARDA,aACAxU,EAOC,EAPDA,MACA0T,EAMC,EANDA,YACAzJ,EAKC,EALDA,YACAC,EAIC,EAJDA,SACA/J,EAGC,EAHDA,SACAyJ,EAEC,EAFDA,OACA+J,EACC,EADDA,YACC,EAC+B9M,mBAAS,GADxC,mBACMrC,EADN,KACgBiQ,EADhB,OAE6B5N,mBAAS,GAFtC,mBAEMxC,EAFN,KAEeqQ,EAFf,KAQKV,EAAiB,SAACW,GACtB,KAAGA,GAAU,GAAb,CAEA,IAAMT,EAAW9E,GAAeiB,EAAMvG,WAAY6K,EAAQ1K,EAAayJ,GACvEC,EAAYO,KAuBd,OACE,kBAAC,KAAD,CAAK1C,QAAS,gBACZ,yBAAKtK,MAAO,CAAEoC,QAAS,SAErB,yBAAKpC,MAAO,CAAEgC,MAAO,QACnB,kBAAC,GAAD,CACE2B,MAAK,gBAAWjB,EAAX,aACLhK,QAAS4U,KAIb,yBAAKtN,MAAO,CAAEgC,MAAO,MAAO/B,WAAY,OACtC,yBAAKD,MAAO,CAAEoC,QAAS,SACrB,yBAAKpC,MAAO,CAAEgC,MAAO,QACnB,oCACE,kBAAC,KAAD,CACEuI,KAAK,SACLC,MAAM,EACN9M,MAAOJ,EACPqN,SAvCS,SAACC,GACxB,IAAM5M,EAAM4M,EAAMC,OAAOnN,MACzB6P,EAAYvP,GACZ8O,EAAenU,SAASwQ,EAAMI,eAAiBjD,GAAetI,EAAK/E,OAsCvD,kBAAC,GAAD,CACEkH,QAAS,WACP,KAAI4C,GAAe,GAAnB,CACA,IAAM2K,EACHvE,EAAMvG,YAAeI,EAAWD,EAAcyJ,GAE3CmB,GADgBhV,SAAS+U,GAAYvE,EAAMI,eACjB,SAAG,GAAMtQ,GACzCsU,EAAYI,GACZlB,EAAYzJ,SAKpB,yBAAKhD,MAAO,CAAEgC,MAAO,QACnB,kBAAC,KAAD,CACE8I,UAAWwB,EACX9B,MAAM,EACNjK,KAAM,kBAAC,KAAD,MACNC,MAAM,QACNL,QAtDY,WACxB9C,EAAYvE,EAAOwN,GAAehJ,EAAUrE,UA0DxC,yBAAK+G,MAAO,CAAEgC,MAAO,QAErB,yBAAKhC,MAAO,CAAEgC,MAAO,MAAO/B,WAAY,OACtC,yBAAKD,MAAO,CAAEoC,QAAS,SACrB,yBAAKpC,MAAO,CAAEgC,MAAO,QACnB,oCACE,kBAAC,KAAD,CACEuI,KAAK,SACLC,MAAM,EACN9M,MAAOP,EACPwN,SAjEQ,SAACC,GACvB,IAAM5M,EAAM4M,EAAMC,OAAOnN,MACzBoP,EAAenU,SAASwQ,EAAMI,eAAiBjD,GAAetI,EAAK/E,IACnEuU,EAAWxP,MAgEC,kBAAC,GAAD,CACEmC,QAAS,WACP,IAAMyN,EAASC,OAAO1E,EAAMI,eAAb,SAA8B,GAAMtQ,GAC7C6U,EAAY9O,KAAK+O,IAAIT,EAAcM,GACzCJ,EAAWM,GACXhB,EAAexG,GAAgBsH,EAASE,EAAW7U,SAK3D,yBAAK+G,MAAO,CAAEgC,MAAO,QACnB,kBAAC,KAAD,CACE8I,UAAWwB,EACX9B,MAAM,EACNjK,KAAM,kBAAC,KAAD,MACNC,MAAM,OACNL,QA7EW,WACvBjD,EAAWpE,EAAOwN,GAAenJ,EAASlE,aCyD/B+U,OAhGf,YAAyF,IAA3DrR,EAA0D,EAA1DA,MAAO7D,EAAmD,EAAnDA,MAAOwT,EAA4C,EAA5CA,QAASrF,EAAmC,EAAnCA,cAAegH,EAAoB,EAApBA,iBAAoB,EACxCtO,mBAAS,GAD+B,mBAC/EuK,EAD+E,KAC9DgE,EAD8D,OAEpDvO,oBAAS,GAF2C,mBAE/EqL,EAF+E,KAEpEC,EAFoE,OAGxDtL,mBAAS,IAH+C,mBAG/EwD,EAH+E,KAGtEgL,EAHsE,OAKvCxO,mBAAS,GAL8B,mBAK/EyO,EAL+E,KAK5DC,EAL4D,KA4BtF,OArBAhN,qBAAU,WAAM,4CACd,4BAAAlJ,EAAA,sEAC+Be,EAAmBJ,EAAO6D,GADzD,OACQ2R,EADR,OAEEJ,EAAmBnH,GAAauH,EAAgBrH,IAFlD,4CADc,uBAAC,WAAD,wBAMdsH,MAGF3F,kBAAO,sBAAC,4BAAAzQ,EAAA,0FAAAA,EAAA,MACN,8BAAAA,EAAA,sEACwBqN,GAAsB7I,GAD9C,OACQ4I,EADR,OAEQiJ,EAAsBjJ,EAAQkJ,QAClC,SAACxF,GAAD,OAAWA,EAAME,MAAMC,gBAAgBvQ,UAAYC,KAErDqV,EAAWK,GACXvD,GAAa,GANf,4CADM,iEASNyD,GATM,2CAUL,CAAC/R,EAAO7D,IAGT,oCACGwT,EAAU,qCACT,kBAAC,KAAD,CAAKhC,QAAS,aACZ,oCACE,yBAAKtK,MAAO,CAAEoC,QAAS,SAErB,yBAAKpC,MAAO,CAAEgC,MAAO,QACnB,kBAAC,GAAD,CAAc2B,MAAK,mBAAsBjL,QAASwR,KAEpD,yBAAKlK,MAAO,CAAEgC,MAAO,MAAO/B,WAAY,OACtC,yBAAKD,MAAO,CAAEoC,QAAS,SACrB,yBAAKpC,MAAO,CAAEgC,MAAO,QACnB,oCACE,kBAAC,KAAD,CACEuI,KAAK,SACLC,MAAM,EACN9M,MAAO0Q,EACPzD,SAAU,SAACC,GACTyD,EAAkBzD,EAAMC,OAAOnN,UAGnC,kBAAC,GAAD,CACEyC,QAAS,WACP,IAAMwO,EAAU3P,KAAK+O,IAAIE,EAAkB/D,GAC3CmE,EAAkBM,QAK1B,yBAAK3O,MAAO,CAAEgC,MAAO,QACnB,kBAAC,KAAD,CACE8I,SAAUZ,GAAmB,EAC7B1J,MAAM,YACNL,QAAS,WACP,IAAMyO,EAAiBtI,GAAe8H,EAAmBnH,GACzDxK,EAAU3D,EAAO6D,EAAOiS,YAY1C,kBAAC,KAAD,CAAKtE,QAAS,WACZ,kBAAC,KAAD,CACEmB,OAAQT,EAAY,UAAY,UAChC9H,OAAQ,CAAC,KAAM,SAAU,aAAc,QACvCC,QAASA,EACTC,eAAgB,EAChBC,YAAa,YAAkE,IAA/DwL,EAA8D,EAA9DA,gBAAiBC,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBACtD,MAAO,CACL,kBAAC,KAAD,CAAkBC,YAAaD,IAC/B7I,GAAavM,GAAQiV,GAAkB,GACvC,kBAAC,KAAD,CAAevO,OAAQwO,IACvB5H,GAAUvO,SAAqB,IAAZoW,WC5DlBG,GAhCS,SAAC,GAA4D,IAA1D/K,EAAyD,EAAzDA,MAAOnB,EAAkD,EAAlDA,SAAUN,EAAwC,EAAxCA,OAAQyG,EAAgC,EAAhCA,MAAOlQ,EAAyB,EAAzBA,SAAU+T,EAAe,EAAfA,SAC7DmC,EAAchG,EAAMI,cAAgBJ,EAAMI,cAAN,SAAsB,GAAMtQ,GAAW,EAC7EmW,EAAkB,IAItB,OAHGjG,EAAMvG,aACPwM,EAAkBxV,GAAQuP,EAAMvG,aAGhC,yBAAK5C,MAAO,CAAEK,QAAS,KAAM+B,QAAS,OAAQC,WAAY,WACxD,yBAAKrC,MAAO,CAAEgC,MAAO,QACnB,kBAAC,GAAD,CAAc2B,MAAM,mBAAmBjL,QAASyN,GAAaiJ,EAAiB,MAEhF,yBAAKpP,MAAO,CAAEgC,MAAO,QACnB,kBAAC,GAAD,CAAc2B,MAAK,UAAKjB,EAAL,WAAsBhK,QAASyW,KAEpD,yBAAKnP,MAAO,CAAEgC,MAAO,QACnB,oCACE,yBAAKhC,MAAO,CAAEe,SAAU,GAAIV,QAAS,IAArC,gBACgB,IACb8D,EAAQ,EAAI,kBAAC,GAAD,CAAUD,OAAQC,GAASnB,EAAUmB,MAAOA,IAAY,sCAEvE,yBAAKnE,MAAO,CAAEe,SAAU,GAAIV,QAAS,IACnC,0BAAML,MAAO,CAAEe,SAAU,KAAOoD,EAAMvG,WAAWmG,MAAM,KAAK,IAD9D,IAEE,0BAAM/D,MAAO,CAAEe,SAAU,KAAOoD,EAAMvG,WAAWmG,MAAM,KAAK,GAA5D,KACCf,EAAW,EAAI,0BAAMhD,MAAO,CAAEe,SAAU,KAAzB,MAAmCiC,EAAnC,KAAuD,IAEzE,wCAAIgK,IAAa7I,EAAQ,GAAK,kBAAC,GAAD,CAAY3D,MAAM,YAAYxC,IAAKgP,IAAjE,SCmIKqC,OAhJf,YAA8C,IAAvBvW,EAAsB,EAAtBA,MAAO6D,EAAe,EAAfA,MAAOzE,EAAQ,EAARA,KAC7B8Q,EAASxG,GAAQ0G,MAAK,SAACF,GAAD,OAAYA,EAAOvG,OAAS3J,KAChDG,EAA4D+P,EAA5D/P,SAAUyJ,EAAkDsG,EAAlDtG,OAAQ3I,EAA0CiP,EAA1CjP,OAAQ+I,EAAkCkG,EAAlClG,OAAQC,EAA0BiG,EAA1BjG,YAAaC,EAAagG,EAAbhG,SAFZ,EAILrD,mBAAS,GAJJ,mBAIpC2P,EAJoC,KAIvBC,EAJuB,OAMjB5P,mBAAS,IANQ,mBAMpCwJ,EANoC,KAM7BqG,EAN6B,OAQA7P,mBAAS,GART,mBAQpC8P,EARoC,KAQlBC,EARkB,OAUjB/P,mBAAS,GAVQ,mBAUpCwE,EAVoC,KAU7BwL,EAV6B,OAYOhQ,mBAAS,GAZhB,mBAYpCiQ,EAZoC,KAYjBC,EAZiB,OAaKlQ,mBAAS,GAbd,mBAapCsO,EAboC,KAalB6B,EAbkB,OAcCnQ,mBAAS,GAdV,mBAcpCoQ,EAdoC,KAcpBC,EAdoB,OAiBbrQ,oBAAS,GAjBI,mBAiBpCsQ,EAjBoC,KAiB3BC,EAjB2B,OAkBXvQ,mBAASwE,GAlBE,mBAkBpC6I,EAlBoC,KAkB1BP,GAlB0B,KAoB3CpL,qBAAU,WACR,IAAI4I,GAAc,EADJ,SAGCkB,IAHD,2EAGd,0CAAAhT,EAAA,sEACuBmN,GAAoB3I,GAD3C,eACwD,SAAAwM,GAAK,OAAIA,EAAMC,gBAAgBvQ,UAAYC,QAGnFuQ,KAHRF,EADR,OACmDD,KADnD,+DAOEgH,GAAW,GAPb,SAQsE5H,QAAQwD,IAAI,CAC9E9T,EAAgBc,EAAO6D,GACvB3E,EAAgBc,EAAOZ,GACvBwB,EAAWxB,KAXf,0CAQOiY,EARP,KAQ2BC,EAR3B,KAQ8CL,EAR9C,KAcEI,EAAqBpJ,GAAaoJ,EAAoBlX,GACtDmX,EAAoBrJ,GAAaqJ,EAAmBnX,GAftD,UAiBgCY,EAASE,EAAQ+I,GAjBjD,QAiBQuN,EAjBR,OAkBQlM,EAAQ+D,GAAeiB,EAAMvG,WAAYuG,EAAMI,cAAexG,EAAasN,GAW5EpG,IAEHyF,EAAeW,GACfb,EAASrG,GACT0G,EAAqBM,GACrBL,EAAoBM,GACpBJ,EAAkBD,GAClBJ,EAASxJ,GAAahC,EAAO,KApCjC,6CAHc,sBA0CdgH,IACA,IAAMG,EAAKC,YAAYJ,EAAY,KAEnC,OAAO,WACLlB,GAAc,EACduB,cAAcF,MAEf,CAACrS,EAAUc,EAAQ4C,EAAOmG,EAAQC,EAAajK,EAAOZ,IAEzD,IAAMoU,GAAUpU,IAASyE,EAEzB,OAAOsT,EACL,yBAAKjQ,MAAO,CAAEK,QAAS,IAAKiQ,UAAW,WAAvC,kCAEA,oCACE,kBAAC,KAAD,CAAQ7O,QAAS6K,GAAU,oBAAsB,iBAEjD,kBAAC,GAAD,CACE3P,MAAOA,EACPzE,KAAMA,EACNiM,MAAOA,EACPnB,SAAUA,EACVmG,MAAOA,EACPlQ,SAAUA,EACVyJ,OAAQA,EACRsK,SAAUA,IAGZ,kBAAC,KAAD,CACEuD,MAAO,CAAC,wBAAyB,iBAAkB,eACnDC,SAAUlB,EACV3E,SAAU4E,IAGK,IAAhBD,EACC,kBAAC,GAAD,CACEhD,QAASA,GACTnD,MAAOA,EACPoD,WAAYwD,EACZjX,MAAOA,EACP6D,MAAOA,EACP6P,YAAaiD,EACb1M,YAAaA,EACbC,SAAUA,EACVyJ,YAAaA,KAGf,qCAGe,IAAhB6C,EACC,kBAAC,GAAD,CACEhD,QAASA,GACTnD,MAAOA,EACPmE,aAAcsC,EACd9W,MAAOA,EACP0T,YAAaiD,EACb1M,YAAaA,EACbC,SAAUA,EACV/J,SAAUA,EACVyJ,OAAQA,EACR+J,YAAaA,KAGf,qCAGe,IAAhB6C,EACC,kBAACmB,GAAD,CACExC,iBAAkBA,EAClB3B,QAASA,GACT3P,MAAOA,EACP7D,MAAOA,EACPmO,cAAehO,IAGjB,uCC9HOoW,OAnBf,YAA8B,IAARnX,EAAO,EAAPA,KAAO,EACJgU,cAAjBpT,EADqB,EACrBA,MAAO6D,EADc,EACdA,MAEb,OACE,oCACE,kBAAC+T,GAAD,CAAe/T,MAAOA,EAAOzE,KAAMA,EAAMY,MAAOA,MCOvCoW,GAlBS,SAAC,GAAmE,IAAjExM,EAAgE,EAAhEA,OAAQiO,EAAwD,EAAxDA,eAAgBC,EAAwC,EAAxCA,iBAAkB9R,EAAsB,EAAtBA,gBACnE,OACE,yBAAKkB,MAAO,CAAEK,QAAS,KAAM+B,QAAS,OAASC,WAAY,WACzD,yBAAKrC,MAAO,CAAEgC,MAAO,QACnB,kBAAC,GAAD,CAAc2B,MAAM,sBAAsBjL,QAASiY,KAErD,yBAAK3Q,MAAO,CAAEgC,MAAO,QACnB,kBAAC,GAAD,CAAc2B,MAAK,UAAKjB,EAAL,cAAyBhK,QAASkY,KAEvD,yBAAK5Q,MAAO,CAAEgC,MAAO,QACnB,oCACE,kBAAC,GAAD,CAAcxB,MAAM,mBAAmB3H,QAASiG,QCuG1D,SAAS+R,GAAT,GAAoD,IAA5BrQ,EAA2B,EAA3BA,MAAOxC,EAAoB,EAApBA,IAAoB,IAAf0E,cAAe,MAAN,GAAM,EACjD,OAAIgC,WAAW1G,GAAO,EAElB,yBAAKgC,MAAO,CAAEK,QAAS,EAAGS,QAAS,KACjC,0BAAMd,MAAO,CAAEe,SAAU,KAAzB,IAAiCP,EAAjC,KAAgD,IAChD,0BAAMR,MAAO,CAAEe,SAAU,KAAzB,IAAiC2D,WAAW1G,GAAK2G,QAAQ,GAAzD,KAAqE,IACrE,0BAAM3E,MAAO,CAAEe,SAAU,KAAzB,IAAiC2B,EAAjC,MAGQ,yBAAK1C,MAAO,CAAEK,QAAS,EAAGS,QAAS,MAGpCgQ,OAxHf,YAA8E,IAApDpO,EAAmD,EAAnDA,OAAQ4K,EAA2C,EAA3CA,aAAcxU,EAA6B,EAA7BA,MAAOuB,EAAsB,EAAtBA,SAAUpB,EAAY,EAAZA,SAAY,EAC/C0G,mBAAS,GADsC,mBACpEvF,EADoE,KAC5D2W,EAD4D,OAE7CpR,mBAAS,GAFoC,mBAEpElF,EAFoE,KAE3DuW,EAF2D,OAGnCrR,mBAAS,GAH0B,mBAGpErF,EAHoE,KAGtD2W,EAHsD,OAI7BtR,mBAAS,GAJoB,mBAIpEjF,EAJoE,KAInDwW,EAJmD,KAMrEC,EAAkB,uCAAG,WAAO/W,GAAP,iBAAAjC,EAAA,yDACpBiC,GAAqB,IAAXA,EADU,uBAEvB6W,EAAgB,GAFO,iCAKnBG,EAAS9K,GAAelM,EAAQnB,GALb,SAMHgB,EAAgBI,EAAUvB,EAAOsY,GAN9B,OAMnBC,EANmB,OAOzBJ,EAAgBI,GAPS,2CAAH,sDAUlBC,EAAqB,uCAAG,WAAO7W,GAAP,iBAAAtC,EAAA,yDACvBsC,GAAuB,IAAZA,EADY,uBAE1ByW,EAAmB,GAFO,iCAKtBE,EAAS9K,GAAe7L,EAASxB,GALX,SAMNsB,EAAmBF,EAAUvB,EAAOsY,GAN9B,OAMtBC,EANsB,OAO5BH,EAAmBG,GAPS,2CAAH,sDAU3B,OACE,kBAAC,KAAD,CAAK/G,QAAS,YACZ,yBAAKtK,MAAO,CAAEoC,QAAS,SAErB,yBAAKpC,MAAO,CAAEgC,MAAO,QACnB,kBAAC,GAAD,CAAc2B,MAAK,UAAKjB,EAAL,YAAuBhK,QAAS4U,KAGrD,yBAAKtN,MAAO,CAAEgC,MAAO,MAAO/B,WAAY,OACtC,yBAAKD,MAAO,CAAEoC,QAAS,SACrB,yBAAKpC,MAAO,CAAEgC,MAAO,QACnB,oCACE,kBAAC,KAAD,CACEuI,KAAK,SACLC,MAAM,EACN9M,MAAOtD,EACPuQ,SAAU,SAACC,GACTmG,EAAUnG,EAAMC,OAAOnN,OACvByT,EAAmBvG,EAAMC,OAAOnN,YAKxC,yBAAKsC,MAAO,CAAEgC,MAAO,QACnB,kBAAC,KAAD,CACEwI,MAAM,EACNjK,KAAM,kBAAC,KAAD,MACNC,MAAM,MACNL,QAAS,WACPjC,EACEpF,EACAuB,EACAiM,GAAelM,EAAQnB,GACvBqB,QAMV,kBAACuW,GAAD,CAAcrQ,MAAM,QAAQxC,IAAK1D,EAAcoI,OAAO,MAExD,yBAAK1C,MAAO,CAAEgC,MAAO,QAErB,yBAAKhC,MAAO,CAAEgC,MAAO,MAAO/B,WAAY,OACtC,yBAAKD,MAAO,CAAEoC,QAAS,SACrB,yBAAKpC,MAAO,CAAEgC,MAAO,QACnB,oCACE,kBAAC,KAAD,CACEuI,KAAK,SACLC,MAAM,EACN9M,MAAOjD,EACPkQ,SAAU,SAACC,GACToG,EAAWpG,EAAMC,OAAOnN,OACxB4T,EAAsB1G,EAAMC,OAAOnN,UAGvC,kBAAC,GAAD,CACEyC,QAAS,WACP6Q,EAAW1D,GACXgE,EAAsBhE,QAK9B,yBAAKtN,MAAO,CAAEgC,MAAO,QACnB,kBAAC,KAAD,CACEwI,MAAM,EACNjK,KAAM,kBAAC,KAAD,MACNC,MAAM,OACNL,QAAS,WACP9B,EAAwBvF,EAAOuB,EAAUiM,GAAe7L,EAASxB,SAKzE,kBAAC4X,GAAD,CAAcrQ,MAAM,UAAUxC,IAAKtD,QCO7C,SAASmW,GAAT,GAAoD,IAA5BrQ,EAA2B,EAA3BA,MAAOxC,EAAoB,EAApBA,IAAoB,IAAf0E,cAAe,MAAN,GAAM,EACjD,OAAIgC,WAAW1G,GAAO,EAElB,yBAAKgC,MAAO,CAAEK,QAAS,EAAGS,QAAS,KACjC,0BAAMd,MAAO,CAAEe,SAAU,KAAzB,IAAiCP,EAAjC,KAAgD,IAChD,0BAAMR,MAAO,CAAEe,SAAU,KAAzB,IAAiC2D,WAAW1G,GAAK2G,QAAQ,GAAzD,KAAqE,IACrE,0BAAM3E,MAAO,CAAEe,SAAU,KAAzB,IAAiC2B,EAAjC,MAGQ,yBAAK1C,MAAO,CAAEK,QAAS,EAAGS,QAAS,MAGpCyQ,OAtHf,YAYI,IAXFC,EAWC,EAXDA,OACAC,EAUC,EAVDA,aACAC,EASC,EATDA,eACAzD,EAQC,EARDA,iBACA8B,EAOC,EAPDA,eACAjR,EAMC,EANDA,gBAEA8R,GAIC,EALD1Y,KAKC,EAJD0Y,kBACAD,EAGC,EAHDA,eACAgB,EAEC,EAFDA,uBACAC,EACC,EADDA,qBACC,EAIqCjS,mBAAS,GAJ9C,mBAIMkS,EAJN,KAImBC,EAJnB,OAKyCnS,mBAAS,GALlD,mBAKMoS,EALN,KAKqBC,EALrB,KAOKC,EAAmBL,EAAuBC,EAAelB,EACzDuB,EAAqC,GAAfD,EAA2C,IACjEE,EAAkBxB,EAAiBC,EACnCwB,EAAkBxB,EAAmBD,EAQrC0B,EAAyB,SAACC,GAE9BR,EADkBQ,EAAWH,GAE7BH,EAAiBM,IAGnB,OACE,kBAAC,KAAD,CAAKhI,QAAS,iBACZ,yBAAKtK,MAAO,CAAEoC,QAAS,SAErB,yBAAKpC,MAAO,CAAEgC,MAAO,QACnB,kBAAC,GAAD,CAAc2B,MAAK,cAAiBjL,QAASqX,KAG/C,yBAAK/P,MAAO,CAAEgC,MAAO,MAAO/B,WAAY,OACtC,yBAAKD,MAAO,CAAEoC,QAAS,SACrB,yBAAKpC,MAAO,CAAEgC,MAAO,MAAOM,YAAa,OACvC,oCACE,kBAAC,KAAD,CACEoI,kBAAkB,MAClBD,UAAWgH,EACXlH,KAAK,SACLC,MAAM,EACN9M,MAAOqU,EACPpH,SAAU,SAACC,GACTyH,EAAuBzH,EAAMC,OAAOnN,UAGxC,kBAAC,GAAD,CACEyC,QAAS,WACPkS,EAAuBpE,QAK/B,yBAAKjO,MAAO,CAAEgC,MAAO,MAAOM,YAAa,OACvC,kBAAC,KAAD,CACEoI,kBAAkB,MAClBD,UAAW,kBAAC,KAAD,MACXF,KAAK,SACLC,MAAM,EACN9M,MAAOmU,EACPlH,SAAU,SAACC,IAhDI,SAACzM,GAC5B,IAAMoU,EAAepU,EAASiU,EAC9BN,EAAe3T,GACf6T,EAAiBO,GA8CHC,CAAqB5H,EAAMC,OAAOnN,UAGtC,kBAAC,GAAD,CAAc8C,MAAM,OAAOxC,IAAKiU,EAAiBvP,OAAO,iBAE1D,yBAAK1C,MAAO,CAAEgC,MAAO,QACnB,kBAAC,KAAD,CACEwI,MAAM,EACNjK,KAAM,kBAAC,KAAD,MACNC,MAAM,gBACNL,QAAS,WACP,IAAMxB,EAAW2H,GAAeyL,EAAeL,GAAgB9T,WACzDgB,EAAe0H,GACnB4L,EACAP,GACA/T,SAAS,IACXa,EACE+S,EACA1S,EACAH,EACAC,EACA8H,GAAkBmL,aCVtC,SAAShB,GAAT,GAAoD,IAA5BrQ,EAA2B,EAA3BA,MAAOxC,EAAoB,EAApBA,IAAoB,IAAf0E,cAAe,MAAN,GAAM,EACjD,OAAIgC,WAAW1G,GAAO,EAElB,yBAAKgC,MAAO,CAAEK,QAAS,EAAGS,QAAS,KACjC,0BAAMd,MAAO,CAAEe,SAAU,KAAzB,IAAiCP,EAAjC,KAAgD,IAChD,0BAAMR,MAAO,CAAEe,SAAU,KAAzB,IAAiC2D,WAAW1G,GAAK2G,QAAQ,GAAzD,KAAqE,IACrE,0BAAM3E,MAAO,CAAEe,SAAU,KAAzB,IAAiC2B,EAAjC,MAGQ,yBAAK1C,MAAO,CAAEK,QAAS,EAAGS,QAAS,MAGpC2R,OAhGf,YAWG,EAVDjB,OAUE,IATFC,EASC,EATDA,aACAC,EAQC,EARDA,eAEAgB,GAMC,EAPDzE,iBAOC,EANDyE,2BACA5T,EAKC,EALDA,gBACA8R,EAIC,EAJDA,iBACAD,EAGC,EAHDA,eACAgB,EAEC,EAFDA,uBACAC,EACC,EADDA,qBACC,EAG6DjS,mBAAS,GAHtE,mBAGMgT,EAHN,KAG+BC,EAH/B,KAKKC,EAAeF,EAA2Bf,EAC1CkB,EAAiBnC,EAAiBkC,EAClCE,EAAoBnC,EAAmBiC,EAEvCG,EAA+B,GAAdF,EAAyC,IAC1DG,EAAoC,GAAjBF,EAA4C,IAMrE,OACE,kBAAC,KAAD,CAAKzI,QAAS,oBACZ,yBAAKtK,MAAO,CAAEoC,QAAS,SAErB,yBAAKpC,MAAO,CAAEgC,MAAO,QACnB,kBAAC,GAAD,CAAc2B,MAAK,qBAAwBjL,QAASga,KAGtD,yBAAK1S,MAAO,CAAEgC,MAAO,MAAO/B,WAAY,OACtC,yBAAKD,MAAO,CAAEoC,QAAS,SACrB,yBAAKpC,MAAO,CAAEgC,MAAO,MAAOM,YAAa,OACvC,kBAAC,KAAD,CACEoI,kBAAkB,MAClBD,UAAW,kBAAC,KAAD,MACXF,KAAK,SACLC,MAAM,EACN9M,MAAOiV,EACPhI,SAAU,SAACC,GArBM,IAAC0H,IAsBO1H,EAAMC,OAAOnN,MArBlDkV,EAA2BN,MAwBjB,kBAAC,GAAD,CACEnS,QAAS,kBAAIyS,EAA2BF,OAG5C,yBAAK1S,MAAO,CAAEgC,MAAO,MAAOM,YAAa,OACvC,oCACA,kBAAC,GAAD,CAAc9B,MAAM,UAAUxC,IAAK8U,EAAgBpQ,OAAO,QAC1D,kBAAC,GAAD,CAAclC,MAAM,IAAIxC,IAAK+U,EAAmBrQ,OAAQ+O,MAG1D,yBAAKzR,MAAO,CAAEgC,MAAO,QACnB,kBAAC,KAAD,CACEwI,MAAM,EACNjK,KAAM,kBAAC,KAAD,MACNC,MAAM,mBACNL,QAAS,WACP,IAAMnC,EAAMsI,GAAeqM,EAAyBhB,GAAwB/T,WACtE0B,EAAUoH,GAAkBsM,GAC5BE,EAAY5M,GAAe2M,EAAkBvB,GAEnDtS,EACEN,EACAd,EACAsB,EACA4T,YCyDLC,OA9Hf,YAA+B,IAATjb,EAAQ,EAARA,KAEdY,EAAUoT,cAAVpT,MAEAkQ,EAASxG,GAAQ0G,MAAK,SAACF,GAAD,OAAYA,EAAOvG,OAAS3J,KAChDgG,EAAgDkK,EAAhDlK,gBAAiB7F,EAA+B+P,EAA/B/P,SAAUyJ,EAAqBsG,EAArBtG,OAAQrI,EAAa2O,EAAb3O,SALf,EAOoBsF,mBAAS,GAP7B,mBAOrBiR,EAPqB,KAOHwC,EAPG,OAQoBzT,mBAAS,GAR7B,mBAQrBsO,EARqB,KAQH6B,EARG,OASgBnQ,mBAAS,GATzB,mBASrBgR,EATqB,KASL0C,EATK,OAUgB1T,mBAAS,GAVzB,mBAUrBoQ,EAVqB,KAULC,EAVK,OAYsCrQ,mBAAS,GAZ/C,mBAYrB+S,EAZqB,KAYMY,EAZN,OAagC3T,mBAAS,GAbzC,mBAarBgS,EAbqB,KAaG4B,EAbH,OAc4B5T,mBAAS,GAdrC,mBAcrBiS,EAdqB,KAcC4B,EAdD,KAuE5B,OAvDAnS,qBAAU,WACR,IAAI4I,GAAc,EADJ,SAGCwJ,IAHD,2EAGd,wCAAAtb,EAAA,sEAC6EmQ,QAAQwD,IAAI,CACrF9T,EAAgBc,EAAOgG,GACvBpF,EAAWoF,GACXlG,EAAakG,KAJjB,mCACO4U,EADP,KAC6BC,EAD7B,KACiDC,EADjD,KAMoBC,EAAsDD,EAAhE3a,SAAwC6a,EAAwBF,EAArC7a,YACnC2a,GAA2C,SAAG,GAAMza,GAC/CgR,IACHsJ,EAA0BM,GAC1BL,EAAwBM,GACxBT,EAAkBM,GAClBP,EAAoBM,IAZxB,6CAHc,sBAkBdD,IACA,IAAMnI,EAAKC,YAAYkI,EAAgB,KAEvC,OAAO,WACLxJ,GAAc,EACduB,cAAcF,MAEf,CAACrS,EAAUH,EAAOgG,IAErBuC,qBAAU,WACR,GAAa,KAATnJ,EAAJ,CACA,IAAI+R,GAAc,EAiBlB8J,IACA,IAAMzI,EAAKC,YAAYwI,EAAgB,KAEvC,OAAO,WACL9J,GAAc,EACduB,cAAcF,IAxBF,SAICyI,IAJD,2EAId,wCAAA5b,EAAA,sEAC8DmQ,QAAQwD,IAAI,CACtE9T,EAAgBc,EAAOZ,GACvBwB,EAAWxB,GACXF,EAAgB8G,EAAiB5G,KAJrC,mCACOoV,EADP,KACqByC,EADrB,KACqCiE,EADrC,KAOQ/F,EAAmBX,EAAY,SAAG,GAAMrU,GACxCgb,EAAsBD,EAAe,SAAG,GAAMrC,GAC/C1H,IACHqJ,EAA6BW,GAC7BjE,EAAkBD,GAClBD,EAAoB7B,IAZxB,6CAJc,yBA0Bb,CAAChV,EAAU0Y,EAAwB7Y,EAAOgG,EAAiB5G,IAG5D,oCACE,kBAAC,KAAD,CAAQuJ,QAAQ,aAEhB,kBAAC,GAAD,CACEvJ,KAAMA,EACNwK,OAAQA,EACRiO,eAAgBA,EAChBC,iBAAkBA,EAClB9R,gBAAiBA,IAGnB,kBAAC,GAAD,CACE4D,OAAQA,EACR4K,aAAcW,EACdnV,MAAOA,EACPuB,SAAUA,EACVpB,SAAUA,IAGZ,kBAAC,KAAD,CAAQwI,QAAQ,sBAEhB,kBAAC,GAAD,CACEvJ,KAAMA,EACNsZ,OAAQ1Y,EACR4Y,eAAgBzY,EAChBwY,aAAc/O,EACduL,iBAAkBA,EAClByE,0BAA2BA,EAC3B3C,eAAgBA,EAChBjR,gBAAiBA,EACjB6R,eAAgBA,EAChBC,iBAAkBA,EAClBe,uBAAwBA,EACxBC,qBAAsBA,IAGxB,kBAAC,GAAD,CACE1Z,KAAMA,EACNsZ,OAAQ1Y,EACR4Y,eAAgBzY,EAChBwY,aAAc/O,EACduL,iBAAkBA,EAClByE,0BAA2BA,EAC3B3C,eAAgBA,EAChBjR,gBAAiBA,EACjB6R,eAAgBA,EAChBC,iBAAkBA,EAClBe,uBAAwBA,EACxBC,qBAAsBA,MC3GfsC,OAxBf,YAA0B,IACpBlU,EAAQ,CACVmU,gBAA2B,UAFN,EAARnY,MAEwB,UAAY,UACjDsU,UAAW,SACXjQ,QAAS,OACT+T,SAAU,QACVC,KAAM,IACNC,OAAQ,IACR5S,OAAQ,OACRM,MAAO,OACPjB,SAAU,QAGZ,OACE,yBAAKf,MAAOA,GAAZ,cACc,IACZ,kBAAC,KAAD,CAAOuU,UAAU,EAAMC,KAAK,sBAA5B,QAA6D,KAC7D,kBAAC,KAAD,CAAOD,UAAU,EAAMC,KAAK,0BAA5B,aAAsE,KACtE,kBAAC,KAAD,CAAOD,UAAU,EAAMC,KAAK,gCAA5B,eAA8E,KAJhF,aAKY,kBAAC,KAAD,CAAOD,UAAU,EAAMC,KAAK,kDAA5B,UALZ,MC8BWC,OAjCf,WACE,IAAM1Z,EAAcC,OAAOC,aAAaC,QAAQ,UAAY,QAD/C,EAGWyE,mBAAS,IAHpB,mBAGNzH,EAHM,KAGAwH,EAHA,OAIaC,mBAAS5E,GAJtB,mBAINiB,EAJM,KAIC0Y,EAJD,KAYb,OACE,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAMC,UAAS,UAAKC,mBAAL,eAA0C5Y,MAAOA,GAC9D,kBAAC,GAAD,CAAQ9D,KAAMA,EAAMwH,QAASA,EAAS1D,MAAOA,EAAO0E,YATtC,SAAC1E,GACnB0Y,EAAS1Y,GACTD,EAAgBC,GAChBhB,OAAOC,aAAa4Z,QAAQ,QAAS7Y,MAQjC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8Y,KAAK,eAAeC,SAAU,kBAAC,GAAD,CAAW7c,KAAMA,MACtD,kBAAC,IAAD,CAAO4c,KAAK,YAAYC,SAAU,kBAAC,GAAD,QAClC,kBAAC,IAAD,CAAOD,KAAK,YAAYC,SAAU,kBAAC,GAAD,CAAU7c,KAAMA,MAClD,kBAAC,IAAD,CAAO4c,KAAK,wBAAwBC,SAAU,kBAAC,GAAD,CAAa7c,KAAMA,MACjE,kBAAC,IAAD,CAAO4c,KAAK,UAAUC,SAAU,kBAACC,GAAD,QAChC,kBAAC,IAAD,CAAOF,KAAK,oBAAoBC,SAAU,kBAAC,GAAD,CAAY7c,KAAMA,MAC5D,kBAAC,IAAD,CAAO4c,KAAK,IAAIC,SAAU,kBAAC,GAAD,SAE5B,kBAAC,GAAD,CAAQ/Y,MAAOA,OC7BHiZ,QACW,cAA7Bja,OAAOuG,SAAS2T,UAEe,UAA7Bla,OAAOuG,SAAS2T,UAEhBla,OAAOuG,SAAS2T,SAASzN,MACvB,2DCZN0N,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7458bd62.chunk.js","sourcesContent":["import Web3 from 'web3';\nimport Onboard from 'bnc-onboard';\n\nimport { notify } from './blockNative';\nimport { getAllowance } from './infura';\nimport BN from 'bn.js';\nconst oTokenABI = require('../constants/abi/OptionContract.json');\nconst exchangeABI = require('../constants/abi/OptionExchange.json');\nconst uniswapExchangeABI = require('../constants/abi/UniswapExchange.json');\n\nconst DEADLINE_FROM_NOW = 60 * 15;\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nconst storedTheme = window.localStorage.getItem('theme')\n\nconst onboard = Onboard({\n  darkMode: storedTheme==='dark',\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06', // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  walletSelect: {\n    description: \"Please select a wallet to connect to Opyn Dashboard\",\n    wallets: [\n      { walletName: 'metamask' },\n      {\n        walletName: 'walletConnect',\n        infuraKey: '44fd23cda65746a699a5d3c0e2fa45d5'\n      },\n      {\n        walletName: 'fortmatic',\n        apiKey: 'pk_live_3009900A5E842CD5'\n      },\n      { walletName: 'trust' },\n      { walletName: 'coinbase' },\n      { walletName: \"status\" },\n    ]\n  }\n});\n\nlet web3;\n\nexport const updateModalMode = async(theme) => {\n  const darkMode = theme === 'dark'\n  onboard.config({ darkMode })\n}\n\nexport const connect = async () => {\n  const selected = await onboard.walletSelect();\n  if (!selected) return false\n  const checked = await onboard.walletCheck();\n  if(!checked) return false\n  return onboard.getState().address;\n};\n\nexport const disconnect = async() => {\n  onboard.walletReset()\n}\n\nexport const checkConnectedAndGetAddress = async() => {\n  let checked = false\n  try {\n    checked = await onboard.walletCheck();\n  } catch (error) {\n    await onboard.walletSelect()\n    checked = await onboard.walletCheck();\n    \n  } finally {\n    if (checked) return onboard.getState().address;\n  }\n}\n\nexport const liquidate = async (oTokenAddr, owner, liquidateAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .liquidate(owner, parseInt(liquidateAmt))\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const burnOToken = async (oTokenAddr, burnAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .burnOTokens(burnAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const issueOToken = async (oTokenAddr, issueAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .issueOTokens(issueAmt, account)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmount) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .addETHCollateral(owner)\n    .send({ from: account, value: web3.utils.toWei(ethAmount.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const removeETHCollateral = async (oTokenAddr, ethAmount) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .removeCollateral(web3.utils.toWei(ethAmount.toString()))\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const approve = async (oTokenAddr, spender, amt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVault = async (oTokenAddr) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .openVault()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Option Exchange\n\nexport const buyOTokensFromExchange = async (oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .buyOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      buyAmt\n    )\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const sellOTokensFromExchange = async (oTokenAddr, exchangeAddr, sellAmt) => {\n  const account = await checkConnectedAndGetAddress()  \n  const allowance = await getAllowance(oTokenAddr, account, exchangeAddr);\n  if (new BN(allowance).lt(new BN(sellAmt))) {\n    await approve(oTokenAddr, exchangeAddr, UINT256_MAX);\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .sellOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      sellAmt\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Uniswap Exchange\n\n/**\n *\n */\nexport const addLiquidity = async (oToken, uniswapAddr, maxToken, minLiquidity, ethValue) => {\n  const account = await checkConnectedAndGetAddress()\n  const allowance = await getAllowance(oToken, account, uniswapAddr);\n  if (new BN(allowance).lt(new BN(maxToken))) {\n    await approve(oToken, uniswapAddr, UINT256_MAX);\n  }\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .addLiquidity(\n      minLiquidity, // min_liquidity\n      maxToken, // max_tokens\n      deadline // deadline\n    )\n    .send({ from: account, value: web3.utils.toWei(ethValue) - 1 })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n */\nexport const removeLiquidity = async (uniswapAddr, pool_token_amount, min_eth, min_tokens) => {\n  const account = await checkConnectedAndGetAddress()\n  const min_eth_wei = web3.utils.toWei(min_eth);\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .removeLiquidity(pool_token_amount, min_eth_wei, min_tokens, deadline)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","import Notify from \"bnc-notify\"\n\nexport const notify = Notify({\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06',\n  networkId: 1\n});\n\n","import Web3 from 'web3';\n\nconst optionContractABI = require('../constants/abi/OptionContract.json');\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json');\nconst oracleABI = require('../constants/abi/Oracle.json');\n\nconst Promise = require('bluebird');\nconst web3 = new Web3('https://mainnet.infura.io/v3/44fd23cda65746a699a5d3c0e2fa45d5');\n\n// ERC20 Info\n\nexport const getTokenBalance = async (oToken, user) => {\n  if (user === '') return '0'\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const balance = await oTokenContract.methods.balanceOf(user).call();\n  return parseInt(balance);\n};\n\nexport const getDecimals = async (oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const decimals = await oTokenContract.methods.decimals().call();\n  return parseInt(decimals);\n};\n\nexport const getERC20Info = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const totalSupplyDecimals = await token.methods.totalSupply().call();\n  const decimals = await token.methods.decimals().call();\n  const totalSupply = parseInt(totalSupplyDecimals) / 10 ** parseInt(decimals);\n  return { decimals, totalSupply };\n};\n\n// Option Contract\n\n/**\n * todo: use graph ql\n * @param {Array<string>} owners\n * @param {string} oToken\n */\nexport const getVaults = async (owners, oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n\n  const vaults = await Promise.map(owners, async (owner) => {\n    const res = await oTokenContract.methods.getVault(owner).call();\n    const collateral = web3.utils.fromWei(res[0]);\n    const oTokensIssued = res[1];\n    const underlying = res[2];\n    return { collateral, oTokensIssued, underlying, owner, oToken };\n  });\n  return vaults;\n};\n\n/**\n * Compare user balance with max liquidatable and decide max liquidatable\n * @param {string} oToken \n * @param {string} owner \n * @param {string} liquidator \n */\nexport const getMaxToLiquidate = async (oToken, owner, liquidator) => {\n  const maxVaultLiquidatable = await getMaxLiquidatable(oToken, owner)\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const userbalance = liquidator ? await oTokenContract.methods.balanceOf(liquidator).call() : 0;\n\n  const maxLiquidatable = Math.min(\n    parseInt(userbalance, 10),\n    parseInt(maxVaultLiquidatable, 10)\n  ).toString();\n\n  return parseInt(maxLiquidatable);\n};\n\n/**\n * Max liquidatable for given vault\n * @param {string} oToken \n * @param {string} owner \n * @return {Promise<number>}\n */\nexport const getMaxLiquidatable = async (oToken, vaultOwner) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable = await oTokenContract.methods.maxOTokensLiquidatable(vaultOwner).call();\n  return parseInt(maxVaultLiquidatable)\n}\n\nexport const getAssetsAndOracle = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const [oracle, underlying, strike, minRatioObj, strikePriceObj] = await Promise.all([\n    token.methods.COMPOUND_ORACLE().call(),\n    token.methods.underlying().call(),\n    token.methods.strike().call(),\n    token.methods.minCollateralizationRatio().call(),\n    token.methods.strikePrice().call(),\n  ]);\n  const strikePrice = strikePriceObj[0] * 10 ** strikePriceObj[1];\n  const minRatio = minRatioObj[0] * 10 ** minRatioObj[1];\n  return { underlying, strike, minRatio, strikePrice, oracle };\n};\n\nexport const getAllowance = async (contract, user, spender) => {\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call();\n  return allowance;\n};\n\n/**\n * Get balance of accounts\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  if (address === '') return '0'\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\n/**\n * Get price of token in unit of wei\n * @param {string} oracleAddr \n * @param {string} token \n */\nexport const getPrice = async (oracleAddr, token) => {\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return price; // unit: wei/ per token\n};\n\n// Option Exchange\nexport const getPremiumToPay = async (exchangeAddr, tokenToBuy, buyAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const paymentToken = '0x0000000000000000000000000000000000000000';\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call();\n  return web3.utils.fromWei(premiumToPay);\n};\n\nexport const getPremiumReceived = async (exchangeAddr, tokenToSell, sellAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const payoutToken = '0x0000000000000000000000000000000000000000';\n  const premiumReceived = await exchange.methods\n    .premiumReceived(tokenToSell, payoutToken, sellAmt)\n    .call();\n  return web3.utils.fromWei(premiumReceived);\n};\n\n// uniswapExchange","import React, { useState } from 'react';\nimport { Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase } from '@aragon/ui';\n\nimport { connect, disconnect } from '../../utils/web3';\n\nfunction ConnectButton({ user, setUser }) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n    return true;\n  };\n\n  const disconnectWeb3 = async () => {\n    await disconnect();\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{paddingTop: 5, paddingRight: 5}}>\n      <LinkBase onClick={disconnectWeb3} size='small' > <IconPower /> </LinkBase>\n      </div>\n      <Box padding={6}>\n        <IdentityBadge entity={user} />\n      </Box>\n      \n    </>\n  ) : (\n    <Button icon={<IconConnect />} label={'Connect'} onClick={connectWeb3} />\n  );\n}\n\nexport default ConnectButton;\n","import React from 'react';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\nfunction ChangeMode({theme, updateTheme}) {\n\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark')\n    else updateTheme('light')\n  }\n\n    return (\n      <Button \n      icon={ theme === 'dark' ? <IconStar/> : <IconStarFilled/>} \n      onClick={handleChangeTheme}\n      label={ 'Theme' }\n      />\n    );\n  \n}\n\nexport default ChangeMode;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SettingsButton';\nimport { Bar, BackButton, LinkBase } from '@aragon/ui';\n\nfunction NavBar({ theme, updateTheme, user, setUser }) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n\n  return (\n    <Bar\n      primary={\n        isHome ? (\n          <></>\n        ) : (\n          <>\n            <div style={{ height: '100%' }}>\n              <BackButton onClick={()=>{\n                history.goBack();\n              }} />\n            </div>\n            <LinkButton title='My Vaults' onClick={()=>{history.push('/myvaults/')}} />\n            <LinkButton title='All Contracts' onClick={()=>{history.push('/options/')}} />\n            <LinkButton title='Trade' onClick={()=>{history.push('/trade/')}} />\n          </>\n        )\n      }\n      secondary={\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      }\n    ></Bar>\n  );\n}\n\nfunction LinkButton ({title, onClick}){\n  return(\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}> \n        <div style={{padding: '1%', opacity:0.5, fontSize: 17}}>\n            {title}\n        </div>\n        </LinkBase>\n    </div>\n  )\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Header, Box, LinkBase } from '@aragon/ui';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header primary='Welcome to Opyn Dashboard' />\n      <div style={{ padding: 5, opacity: 0.5 }}> Tools for DeFi Risk Management. </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%', marginRight: '3%' }}>\n          <MainButton title='My Vaults' description='Manage collateral, Mint/Burn oTokens' iconUrl='https://opyn.co/static/media/1.68813886.svg'  onClick={()=>{\n            history.push('/myvaults')\n          }} />\n        </div>\n\n        <div style={{ width: '30%' }}>\n          <MainButton title='All Contracts' description=' Monitor and liquidate vaults.' iconUrl='https://opyn.co/static/media/2.18d22be0.svg'  onClick={()=>{\n            history.push('/options/')\n          }} />\n        </div>\n\n        <div style={{ width: '30%', marginLeft: '3%' }}>\n          <MainButton title='Trade' description='Buy, Sell or Provided Liquidity.' iconUrl='https://opyn.co/static/media/3.4da8b24d.svg'  onClick={()=>{\n            history.push('./trade')\n          }} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction MainButton({ title, description, iconUrl, onClick }) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding:10, fontSize: 18 }}>{title}</div>\n        <img alt='icon' style={{ padding:10, height:64 }} src={iconUrl}></img>\n        <div style={{ paddingTop: 5, opacity: 0.5 }}> {description} </div>\n        \n      </Box>\n    </LinkBase>\n  );\n}\n\nexport default HomePage;\n","export const options = [\n  {\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    title: 'cDai Insurance',\n\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xA6923533A6362008e9b536271C2Bdc0FF1467D3c'\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\",\n    strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xE3A0a2431a093fed99037987eD0A88550e5E79AA'\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n     // constants in contract\n     symbol: 'oCRV',\n     name: 'Opyn y.curve.fi Insurance',\n     decimals: 8,\n     oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n     collateral: '0x0000000000000000000000000000000000000000',\n     underlying: \"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8\",\n     strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n     strikePrice: 9.2e-16,\n     minRatio: 1.6,\n     exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n     uniswapExchange: '0x21f5E9D4Ec20571402A5396084B1634314A68c97'\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 2e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x8a0976500EED661202810bAB030a057DF15c4CC9'\n  },\n]","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/options';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToToken = (addr) => {\n    history.push(`/token/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='All Contracts' />\n      <div style={{padding: 5, opacity:0.5}}> Choose an option contract to proceed </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/options';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToTrade = (addr) => {\n    history.push(`/exchange/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='Trade' />\n      <div style={{padding: 5, opacity:0.5}}> Choose an option contract to proceed </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToTrade(addr)}> Start Trading </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React from 'react'\n\nimport { IdentityBadge } from '@aragon/ui'\n\nfunction AddressBlock({label, address}){\n\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}> {label} </div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten={true} />\n      </div>\n    </>\n  );\n};\n\nexport default AddressBlock","import React from 'react'\n\nfunction BalanceBlock({asset, balance}){\n  let integer = '0',\n    digits = '0';\n  if (balance > 0) {\n    const str = balance.toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}> {asset} </div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>.\n        <span style={{ fontSize: 18 }}> {digits} </span>\n      </div>\n    </>\n  );\n};\n\nexport default BalanceBlock","import React from 'react'\n\nimport { Tag } from '@aragon/ui';\n\nfunction RatioTag ({isSafe, ratio}) {\n  return isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background='#FFEBAD' color='#FEC100'>\n        {' '}\n        Danger{' '}\n      </Tag>\n    ) : (\n      <Tag mode='new'> safe </Tag>\n    )\n  ) : (\n    <Tag color='#E34343' background='#FFC6C6'>\n      Unsafe!\n    </Tag>\n  );\n};\n\nexport default RatioTag","import React from 'react';\n\nfunction SectionTitle({ title }) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n\nexport default SectionTitle","import React from 'react'\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nexport default MaxButton","import React from 'react'\n\nfunction HelperText({ label, amt }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default HelperText","import React from 'react'\nimport { Button } from '@aragon/ui'\nimport { useHistory } from 'react-router-dom';\nimport { openVault } from '../../utils/web3'\n\nfunction ManageVaultButton({ oToken, owner }) {\n  const history = useHistory();\n  const goToManagePage = (oToken, owner) => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n  return <Button onClick={() => goToManagePage(oToken, owner)} label='Manage'></Button>;\n}\n\nfunction OpenVaultButton({ oToken, user }) {\n  const history = useHistory();\n\n  const openAndGoToVault = () => {\n    openVault(oToken)\n    history.push(`/manage/${oToken}/${user}`);\n  }\n\n  return <Button \n    onClick={() => openAndGoToVault(oToken)} \n    label='Open Vault'\n    />;\n}\n\nexport { ManageVaultButton, OpenVaultButton }","// const prefix = 'https://cors-anywhere-anton.herokuapp.com/';\nconst opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn'\n\n/**\n * @return {Promise<Array<{colalteral: string, oTokensIssued: string, owner: string}>>}\n */\nexport async function getAllVaultsForOption(optionAddress){\n  const query = `\n  {\n    vaults(where: {\n      optionsContract: \"${optionAddress}\"\n    }) {\n      owner\n      oTokensIssued,\n      collateral,\n    }\n  }`\n  const response = await postQuery(query)\n  const vaults = response.data.vaults\n  return vaults\n}\n\nexport async function getAllVaultsForUser(owner){\n  const query = `{\n    vaults (where: {owner: \"${owner}\"}) {\n      optionsContract {\n        address\n      }\n      oTokensIssued,\n      collateral,\n    }\n  }`\n  const response = await postQuery(query)\n  const actions = response.data.vaults\n  return actions\n}\n\nexport async function getLiquidationHistory(owner) {\n  const query = liquidationActionsQuery(owner);\n  const response = await postQuery(query)\n  return response.data.liquidateActions\n}\n\nconst liquidationActionsQuery = (owner) => `{\n  liquidateActions(where: {\n    vault_contains: \"${owner}\"\n  }) {\n    vault {\n      owner,\n      optionsContract {\n        address\n      }\n    },\n    liquidator,\n    collateralToPay,\n    timestamp\n    transactionHash\n  }\n}\n\n`\n\n\nconst postQuery = async (query) => {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  }\n  const res = await fetch(opynGraphEndpoint,  options)\n  return await res.json()\n}","import Web3 from 'web3'\nconst web3 = new Web3()\n\nexport function formatDigits(num, percision) {\n  return parseFloat(num).toFixed(percision)\n}\n\nexport const handleDecimals = (rawAmt, decimal) => {\n  return Math.round(parseFloat(rawAmt) * 10 ** decimal);\n};\n\nexport const fromWei = web3.utils.fromWei\nexport const toWei = web3.utils.toWei\n\n/**\n * \n * @param {string | number} amtInEth \n */\nexport const formatETHAmtToStr = (amtInEth) => {\n  const strETHSegments = amtInEth.toString().split('.')\n  const int = strETHSegments[0]\n  if (strETHSegments.length === 1) return int\n  let digits = strETHSegments[1]\n  if(digits.length > 18) digits = digits.slice(0, 18)\n  const result = `${int}.${digits}`\n  return result\n}\n\nexport const toTokenUnits = (tokenAmount, tokenDecimals) => {\n  return tokenAmount / 10 ** tokenDecimals\n}\n\nexport function timeSince(timeStamp) {\n  var now = new Date(),\n    secondsPast = (now.getTime() - timeStamp) / 1000;\n  if (secondsPast < 60) {\n    return parseInt(secondsPast) + 's ago';\n  }\n  if (secondsPast < 3600) {\n    return parseInt(secondsPast / 60) + 'm ago';\n  }\n  if (secondsPast <= 86400) {\n    return parseInt(secondsPast / 3600) + 'h ago';\n  }\n  if (secondsPast > 86400) {\n    const ts = new Date(timeStamp)\n    const day = ts.getDate();\n    const month = ts.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \", \"\");\n    const year = ts.getFullYear() === now.getFullYear() ? \"\" : \" \" + ts.getFullYear();\n    return day + \" \" + month + year;\n  }\n}\n\nexport function compareVaultRatio(vaultA, vaultB) {\n  const rateA = vaultA.ratio;\n  const rateB = vaultB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n\n/**\n * \n * @param {string} collateral \n * @param {string} tokenIssued \n * @param {number} strikePrice \n * @param {number} strikeValueInWei \n * @return {number}\n */\nexport const calculateRatio = (collateral, tokenIssued, strikePrice, strikeValueInWei) => {\n  if (tokenIssued === '0') return Infinity\n  return parseInt(collateral) / ( parseInt(tokenIssued) * strikePrice * strikeValueInWei  )\n}","import React, { useState, useMemo } from 'react';\n\nimport { Header, DataView, IdentityBadge } from '@aragon/ui';\nimport { SectionTitle, ManageVaultButton, OpenVaultButton } from '../common';\n\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { getPrice } from '../../utils/infura'\nimport { options } from '../../constants/options';\nimport { fromWei, formatDigits, calculateRatio, compareVaultRatio } from '../../utils/number';\n\nconst Promise = require('bluebird');\n\nfunction MyVaults({ user }) {\n  const [opendVaults, setOpenedVaults] = useState([]);\n  const [tokensToOpen, setTokensToOpen] = useState([]);\n  const isConnected = user !== '';\n\n  // Only request all vaults once\n  useMemo(async () => {\n    if (!isConnected) return;\n    const userVaults = await getAllVaultsForUser(user);\n    const opendVaults = [];\n    const notOpenedTokens = [];\n    await Promise.map(options, async(option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      const isOpened = entry !== undefined;\n      if (isOpened) {\n\n        const strikePriceInWei = await getPrice(option.oracle, option.strike);\n        const ratio = calculateRatio(entry.collateral, entry.oTokensIssued, option.strikePrice, strikePriceInWei)\n        opendVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          ratio,\n        });\n      } else {\n        notOpenedTokens.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n        });\n      }\n    })\n    setOpenedVaults(opendVaults.sort(compareVaultRatio));\n    setTokensToOpen(notOpenedTokens);\n  }, [isConnected, user]);\n\n  return (\n    <>\n      <Header  primary={'My Vaults'} />\n      {isConnected ? (\n        <>\n          {opendVaults.length > 0 ? (\n            <div style={{paddingBottom: '3%'}}>\n              <SectionTitle title={'Existing Vaults'} />\n              <DataView\n                fields={['Token', 'contract', 'collateral', 'Ratio', '']}\n                entries={opendVaults}\n                entriesPerPage={6}\n                renderEntry={({ oToken, oTokenName, collateral, ratio, decimals }) => {\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} />,\n                    formatDigits(fromWei(collateral), 5),\n                    formatDigits(ratio, 4),\n                    <ManageVaultButton oToken={oToken} owner={user} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n          {tokensToOpen.length > 0 ? (\n            // Show vaults to open\n            <div >\n              <SectionTitle title={'Open new vaults'} />\n              <DataView\n                fields={['Token', 'contract', 'manage']}\n                entries={tokensToOpen}\n                renderEntry={({ oToken, oTokenName }) => {\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} shorten={false} />,\n                    <OpenVaultButton oToken={oToken} user={user} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </>\n      ) : (\n        // Not connected to wallet\n        <div style={{padding: 5, opacity:0.5}}> Please connect wallet to proceed </div>\n      )}\n    </>\n  );\n}\n\nexport default MyVaults;\n","import React, { useState, useEffect } from 'react';\n\nimport { addETHCollateral, liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { toTokenUnits } from '../../utils/number';\nimport { RatioTag } from '../common';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconFundraising,\n  DataView,\n} from '@aragon/ui';\n\nfunction VaultModal({ oToken, owner, collateral, isSafe, oTokensIssued, ratio, decimals }) {\n  const [opened, setOpened] = useState(false);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function getData() {\n      if (!opened) return;\n      const maxLiquidatable = await getMaxLiquidatable(oToken, owner);\n      if (!isCancelled) {\n        setLiquidateAmt(toTokenUnits(maxLiquidatable, decimals));\n      }\n    }\n    getData();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [decimals, oToken, opened, owner]);\n\n  return (\n    <>\n      <Button onClick={open} label='More'></Button>\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header primary={'Access Position'} />\n        <Box heading={'Owner'}>\n          <IdentityBadge entity={owner} shorten={false} />\n        </Box>\n        <DataView\n          fields={['Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[{ collateral, isSafe, oTokensIssued, ratio }]}\n          entriesPerPage={1}\n          renderEntry={({ collateral, isSafe, oTokensIssued, ratio }) => {\n            return [collateral, oTokensIssued, ratio, RatioTag({ isSafe, ratio })];\n          }}\n        />\n\n        <br></br>\n        <Box heading={'Add Collateral'}>\n          <Split\n            primary={\n              <TextInput\n                type='number'\n                wide={true}\n                adornment={<IconEthereum />}\n                adornmentPosition='end'\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            }\n            secondary={\n              <Button\n                label='Add Collateral'\n                wide={true}\n                onClick={() => {\n                  addETHCollateral(oToken, owner, addValue);\n                }}\n              />\n            }\n          />\n        </Box>\n\n        <br></br>\n        <Box heading={'Liquidate'}>\n          <Split\n            primary={\n              <>\n                {/* <BalanceBlock /> */}\n                <TextInput\n                  wide={true}\n                  type='number'\n                  adornment={<IconFundraising />}\n                  adornmentPosition='end'\n                  value={liquidateAmt}\n                  onChange={(event) => {\n                    setLiquidateAmt(event.target.value);\n                  }}\n                />\n              </>\n            }\n            secondary={\n              <Button\n                wide={true}\n                disabled={isSafe}\n                label='Liquidate'\n                onClick={() => {\n                  liquidate(oToken, owner, liquidateAmt * 10 ** decimals);\n                }}\n              />\n            }\n          />\n        </Box>\n      </Modal>\n    </>\n  );\n}\n\nexport default VaultModal;\n","import React, { useState, useEffect } from 'react';\nimport { DataView, IdentityBadge } from '@aragon/ui';\nimport { getAllVaultsForOption } from '../../utils/graph';\nimport { getPrice } from '../../utils/infura';\nimport { options } from '../../constants/options';\nimport VaultModal from './VaultModal'\nimport { SectionTitle, RatioTag } from '../common';\nimport { formatDigits, fromWei, compareVaultRatio, calculateRatio, toTokenUnits } from '../../utils/number';\n\nfunction VaultOwnerList({ oToken, user }) {\n  const option = options.find((option) => option.addr === oToken);\n  const [isLoading, setIsLoading] = useState(true);\n  const [vaults, setVaults] = useState([]);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      const vaults = await getAllVaultsForOption(oToken)\n      const { strike, decimals, minRatio, strikePrice, oracle } = option;\n\n      const tokenPriceInWei = await getPrice(oracle, strike);\n      const vaultDetail = vaults.map((vault) => {\n        if (vault.oTokensIssued === '0') {\n          vault.ratio = Infinity\n          vault.isSafe = true\n          return vault\n        } \n        const ratio = calculateRatio(vault.collateral, vault.oTokensIssued, strikePrice, tokenPriceInWei) \n        const oTokensIssued = toTokenUnits(vault.oTokensIssued, decimals);\n        vault.oTokensIssued = oTokensIssued;\n        vault.ratio = ratio;\n        vault.isSafe = ratio > minRatio;\n        vault.oToken = oToken\n        return vault;\n      }).sort(compareVaultRatio);\n\n      if (!isCancelled) {\n        setVaults(vaultDetail);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 12000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [oToken, option, user]);\n\n  return (    \n    <>\n      <SectionTitle title={'All Vaults'} />\n      <DataView\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaults}\n        entriesPerPage={5}\n        renderEntry={({ owner, collateral, oTokensIssued, ratio, isSafe }) => {\n          return [\n            <IdentityBadge entity={owner} shorten={true} />,\n            formatDigits(fromWei(collateral), 6),\n            formatDigits(oTokensIssued, 6),\n            formatDigits(ratio, 5),\n            RatioTag({isSafe, ratio}),\n            <VaultModal \n              decimals={option.decimals}\n              oToken={oToken} owner={owner} \n              collateral={fromWei(collateral)}\n              isSafe={isSafe}\n              oTokensIssued={oTokensIssued}\n              ratio={ratio}\n            />\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Split, Header, IdentityBadge } from '@aragon/ui';\nimport { getERC20Info, getBalance } from '../../utils/infura';\n\nimport { options } from '../../constants/options';\n\nfunction OptionOverview({ oToken, tokenName }) {\n  const option = options.find((option) => option.addr === oToken);\n  const [balance, setBalance] = useState('0');\n  const [totalSupply, setTotalSupply] = useState('0');\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      const [balance, tokenInfo] = await Promise.all([getBalance(oToken), getERC20Info(oToken)]);\n      const { totalSupply } = tokenInfo;\n      if (!isCancelled) {\n        setBalance(balance);\n        setTotalSupply(totalSupply);\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [oToken]);\n\n  return (\n    <>\n      <Header primary={option.name} />\n      <Split\n        primary={\n          <Split\n            primary={\n              <Box heading={'contract'} padding={15}>\n                <IdentityBadge entity={oToken} shorten={false} />\n              </Box>\n            }\n            secondary={\n              <Box heading={'balance'} padding={15}>\n                {balance}\n              </Box>\n            }\n          />\n        }\n        secondary={\n          <Box heading={'total supply'} padding={15}>\n            {totalSupply} {tokenName}\n          </Box>\n        }\n      />\n    </>\n  );\n}\n\nexport default OptionOverview;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nfunction TokenView({user}) {\n  let { addr } = useParams();\n  return (\n    <>\n      <OptionInfoBox oToken={addr} user={user} />\n      <VaultsList oToken={addr} user={user}/>\n    </>\n  );\n}\n\nexport default TokenView;\n","import React, { useState } from 'react';\n\nimport { addETHCollateral, removeETHCollateral } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\nimport { formatDigits, calculateRatio, toWei, fromWei } from '../../utils/number'\n\nfunction CollateralManagement({\n  isOwner,\n  vault,\n  ethBalance,\n  token,\n  owner,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  setNewRatio\n}) {\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0);\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0);\n\n  /**\n   * @param {number} newCollateral in wei\n   */\n  const updateNewRatio = (newCollateral) => {\n    if(!newCollateral || newCollateral <= 0) return 0\n    const str = newCollateral.toString()\n    const newRatio = calculateRatio(str, vault.oTokensIssued, strikePrice, strikeValue)\n    setNewRatio(formatDigits(newRatio,5))\n  }\n\n  return (\n    <Box heading={'Collateral'}>\n      <div style={{ display: 'flex' }}>\n        {/* balance */}\n        <div style={{ width: '30%' }}>\n          {BalanceBlock({ asset: 'Your ETH Balance', balance: formatDigits(ethBalance,6) })}\n        </div>\n        {/* Add collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={addCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value\n                    setAddCollateralAmt(amt);\n                    const newCollateralInWei = parseInt(vault.collateral) + parseInt(toWei(amt))\n                    updateNewRatio(newCollateralInWei)\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setAddCollateralAmt(ethBalance);\n                    const newCollateral = parseInt(vault.collateral) + parseInt(toWei(ethBalance))\n                    updateNewRatio(newCollateral)\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Add'\n                onClick={() => {\n                  addETHCollateral(token, owner, addCollateralAmt);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={removeCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value\n                    setRemoveCollateralAmt(amt);\n                    const newCollateralWei = parseInt(vault.collateral) - parseInt(toWei(amt))\n                    updateNewRatio(newCollateralWei)\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikeValue <= 0) return;\n                    const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                    const minCollateral = minValueInStrike * strikeValue;\n                    const maxToRemoveWei = parseInt(vault.collateral - minCollateral).toString();\n                    setRemoveCollateralAmt(fromWei(maxToRemoveWei));\n                    setNewRatio(minRatio)\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Remove'\n                onClick={() => {\n                  removeETHCollateral(token, removeCollateralAmt);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\n\nexport default CollateralManagement","import React, { useState } from 'react';\nimport { burnOToken, issueOToken } from '../../utils/web3';\nimport { BalanceBlock, MaxButton } from '../common';\nimport { handleDecimals, calculateRatio } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\nfunction IssuedTokenManagement({\n  isOwner,\n  vault,\n  tokenBalance,\n  token,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  decimals,\n  symbol,\n  setNewRatio,\n}) {\n  const [issueAmt, setIssueAmt] = useState(0);\n  const [burnAmt, setBurnAmt] = useState(0);\n\n  /**\n   * \n   * @param {number} newAmt in raw amt\n   */\n  const updateNewRatio = (newAmt) => {\n    if(newAmt <= 0) return\n    // const newTokenAmt = handleDecimals(newAmt, decimals)\n    const newRatio = calculateRatio(vault.collateral, newAmt, strikePrice, strikeValue)\n    setNewRatio(newRatio);\n  };\n\n  const onChangeIssueAmt = (event) => {\n    const amt = event.target.value;\n    setIssueAmt(amt);\n    updateNewRatio(parseInt(vault.oTokensIssued) + handleDecimals(amt, decimals));\n  }\n\n  const onClickIssueToken = () => {\n    issueOToken(token, handleDecimals(issueAmt, decimals));\n  }\n\n  const onChangeBurnAmt = (event) => {\n    const amt = event.target.value;\n    updateNewRatio(parseInt(vault.oTokensIssued) - handleDecimals(amt, decimals));\n    setBurnAmt(amt);\n  }\n\n  const onClickBurnToken = () => {\n    burnOToken(token, handleDecimals(burnAmt, decimals));\n  }\n\n  return (\n    <Box heading={'Total Issued'}>\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock\n            asset={`Owner ${symbol} Balance `}\n            balance={tokenBalance}\n          />\n        </div>\n        {/* Issue More Token */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={issueAmt}\n                  onChange={onChangeIssueAmt}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikePrice <= 0) return;\n                    const maxTotal =\n                      (vault.collateral) / (minRatio * strikePrice * strikeValue);\n                    const maxToIssueRaw = parseInt(maxTotal) - vault.oTokensIssued;\n                    const maxToIssue = maxToIssueRaw / 10 ** decimals;\n                    setIssueAmt(maxToIssue);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Issue'\n                onClick={onClickIssueToken}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={burnAmt}\n                  onChange={onChangeBurnAmt}\n                />\n                <MaxButton\n                  onClick={() => {\n                    const issued = Number(vault.oTokensIssued) / 10 ** decimals;\n                    const maxToBurn = Math.min(tokenBalance, issued)\n                    setBurnAmt(maxToBurn);\n                    updateNewRatio(handleDecimals( issued - maxToBurn, decimals))\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Burn'\n                onClick={onClickBurnToken}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default IssuedTokenManagement;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport { Box, DataView, IdentityBadge, TransactionBadge, TextInput, Button } from '@aragon/ui';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { getLiquidationHistory } from '../../utils/graph';\nimport { formatDigits, fromWei, toTokenUnits, timeSince, handleDecimals } from '../../utils/number';\n\nfunction LiquidationHistory({ owner, token, isOwner, tokenDecimals, userTokenBalance }) {\n  const [maxLiquidatable, setMaxLiquidatable] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  const [amountToLiquidate, setAmtToLiquidate] = useState(0);\n\n  useEffect(() => {\n    async function updateLiquidatable() {\n      const maxToLiquidate = await getMaxLiquidatable(token, owner);\n      setMaxLiquidatable(toTokenUnits(maxToLiquidate, tokenDecimals));\n    }\n\n    updateLiquidatable();\n  });\n\n  useMemo(async () => {\n    async function updateList() {\n      const actions = await getLiquidationHistory(owner);\n      const actionsForThisVault = actions.filter(\n        (entry) => entry.vault.optionsContract.address === token\n      );\n      setEntries(actionsForThisVault);\n      setIsLoading(false);\n    }\n    updateList();\n  }, [owner, token]);\n\n  return (\n    <>\n      {isOwner ? <></> : (\n        <Box heading={'Liquidate'}>\n          <>\n            <div style={{ display: 'flex' }}>\n              {/* balance */}\n              <div style={{ width: '30%' }}>\n                <BalanceBlock asset={`Max To Liquidate`} balance={maxLiquidatable} />\n              </div>\n              <div style={{ width: '70%', paddingTop: '2%' }}>\n                <div style={{ display: 'flex' }}>\n                  <div style={{ width: '60%' }}>\n                    <>\n                      <TextInput\n                        type='number'\n                        wide={true}\n                        value={amountToLiquidate}\n                        onChange={(event) => {\n                          setAmtToLiquidate(event.target.value);\n                        }}\n                      />\n                      <MaxButton\n                        onClick={() => {\n                          const maximum = Math.min(userTokenBalance, maxLiquidatable);\n                          setAmtToLiquidate(maximum);\n                        }}\n                      />\n                    </>\n                  </div>\n                  <div style={{ width: '40%' }}>\n                    <Button\n                      disabled={maxLiquidatable <= 0}\n                      label='Liquidate'\n                      onClick={() => {\n                        const amtToLiquidate = handleDecimals(amountToLiquidate, tokenDecimals);\n                        liquidate(token, owner, amtToLiquidate);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        </Box>\n      )}\n\n      {/* History Section */}\n      <Box heading={'History'}>\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Liquidator', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({ collateralToPay, liquidator, timestamp, transactionHash }) => {\n            return [\n              <TransactionBadge transaction={transactionHash} />,\n              formatDigits(fromWei(collateralToPay), 5),\n              <IdentityBadge entity={liquidator} />,\n              timeSince(parseInt(timestamp * 1000)),\n            ];\n          }}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default LiquidationHistory;\n","import React from 'react';\n\nimport { BalanceBlock, RatioTag, HelperText } from '../common';\nimport { formatDigits, fromWei } from '../../utils/number';\n\nconst HeaderDashboard = ({ ratio, minRatio, symbol, vault, decimals, newRatio }) => {\n  const tokenInUnit = vault.oTokensIssued ? vault.oTokensIssued / 10 ** decimals : 0;\n  let collateralInETH = '0'\n  if(vault.collateral)\n    collateralInETH = fromWei(vault.collateral)\n  \n  return (\n    <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset='Total Collateral' balance={formatDigits(collateralInETH, 6)} />\n      </div>\n      <div style={{ width: '50%' }}>\n        <BalanceBlock asset={`${symbol} Issued`} balance={tokenInUnit} />\n      </div>\n      <div style={{ width: '20%' }}>\n        <>\n          <div style={{ fontSize: 14, padding: 3 }}>\n            Current Ratio{' '}\n            {ratio > 0 ? <RatioTag isSafe={ratio >= minRatio} ratio={ratio} /> : <></>}\n          </div>\n          <div style={{ fontSize: 24, padding: 3 }}>\n            <span style={{ fontSize: 24 }}>{ratio.toString().split('.')[0]}</span>.\n            <span style={{ fontSize: 18 }}>{ratio.toString().split('.')[1]} </span>\n            {minRatio > 0 ? <span style={{ fontSize: 16 }}> / {minRatio} </span> : ''}\n          </div>\n          <> {newRatio === ratio ? '' : <HelperText label='New Ratio' amt={newRatio} />} </>\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState, useEffect } from 'react';\n\nimport { getTokenBalance, getBalance, getPrice } from '../../utils/infura';\n\nimport { getAllVaultsForUser } from '../../utils/graph'\n\nimport { Header, Tabs } from '@aragon/ui';\n\nimport CollateralManagement from './CollateralManagement';\nimport IssuedTokenManagement from './IssuedTokenManagement';\nimport LiquidationHistory from './Liquidation';\n\nimport { options } from '../../constants/options';\nimport { formatDigits, calculateRatio, toTokenUnits } from '../../utils/number';\n\nimport HeaderDashboard from './HeaderDashboard';\n\nfunction ManageVault({ token, owner, user }) {\n  const option = options.find((option) => option.addr === token);\n  const { decimals, symbol, oracle, strike, strikePrice, minRatio } = option;\n\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const [vault, setVault] = useState({});\n  // const [lastETHValueInStrike, setLastETHValue] = useState(0);\n  const [strikeVauleInWei, setStrikeValue] = useState(0)\n\n  const [ratio, setRatio] = useState(0);\n\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(0);\n  const [userTokenBalance, setUserTokenBalance] = useState(0)\n  const [userETHBalance, setUserETHBalance] = useState(0);\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n  const [newRatio, setNewRatio] = useState(ratio);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateInfo() {\n      const vault = (await getAllVaultsForUser(owner)).find(vault => vault.optionsContract.address === token)\n      // const vault = (await getVaults([owner], token))[0];\n      // vault.collateral here in unit of eth.\n      if (vault === undefined) {\n        return;\n      }\n      setNoVault(false);\n      let [_ownerTokenBalance, _userTokenBalance, userETHBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getTokenBalance(token, user),\n        getBalance(user),\n      ]);\n\n      _ownerTokenBalance = toTokenUnits(_ownerTokenBalance, decimals);\n      _userTokenBalance = toTokenUnits(_userTokenBalance, decimals)\n\n      const lastStrikeValue = await getPrice(oracle, strike);\n      const ratio = calculateRatio(vault.collateral, vault.oTokensIssued, strikePrice, lastStrikeValue)\n\n      // const lastStrikeValue = await getPrice(oracle, strike);\n      // const ethValueInStrike = 1 / lastStrikeValue;\n      // const valueProtectingInEth = parseFloat(strikePrice) * vault.oTokensIssued;\n\n      // const ratio = formatDigits(\n      //   (parseFloat(vault.collateral) * ethValueInStrike) / valueProtectingInEth,\n      //   5\n      // );\n\n      if (!isCancelled) {\n        // setLastETHValue(ethValueInStrike);\n        setStrikeValue(lastStrikeValue)\n        setVault(vault);\n        setOwnerTokenBalance(_ownerTokenBalance);\n        setUserTokenBalance(_userTokenBalance)\n        setUserETHBalance(userETHBalance);\n        setRatio(formatDigits(ratio, 5));\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, oracle, owner, strike, strikePrice, token, user]);\n\n  const isOwner = user === owner;\n\n  return noVault ? (\n    <div style={{ padding: 100, textAlign: 'center' }}> No Vault Found for this user </div>\n  ) : (\n    <>\n      <Header primary={isOwner ? 'Manage Your Vault' : 'Vault Detail'} />\n\n      <HeaderDashboard\n        owner={owner}\n        user={user}\n        ratio={ratio}\n        minRatio={minRatio}\n        vault={vault}\n        decimals={decimals}\n        symbol={symbol}\n        newRatio={newRatio}\n      />\n\n      <Tabs\n        items={['Collateral Management', 'Token Issuance', 'Liquidation']}\n        selected={tabSelected}\n        onChange={setTabSelected}\n      />\n\n      {tabSelected === 0 ? (\n        <CollateralManagement\n          isOwner={isOwner}\n          vault={vault}\n          ethBalance={userETHBalance}\n          token={token}\n          owner={owner}\n          strikeValue={strikeVauleInWei}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 1 ? (\n        <IssuedTokenManagement\n          isOwner={isOwner}\n          vault={vault}\n          tokenBalance={ownerTokenBalance}\n          token={token}\n          strikeValue={strikeVauleInWei}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          decimals={decimals}\n          symbol={symbol}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 2 ? (\n        <LiquidationHistory\n          userTokenBalance={userTokenBalance}\n          isOwner={isOwner}\n          owner={owner}\n          token={token}\n          tokenDecimals={decimals}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default ManageVault;\n","import React from 'react';\n\nimport { \n  useParams, \n  // useHistory \n} from 'react-router-dom';\n\nimport ManageMyVault from './Manage'\n// import { Button } from '@aragon/ui';\n\nfunction ManageVault({user}) {\n  let { token, owner } = useParams();\n  // const history = useHistory()\n  return (\n    <>\n      <ManageMyVault owner={owner} user={user} token={token}/>\n      {/* <div style={{ padding: 60, textAlign: 'center' }}>\n        <h4 style={{padding: '1%'}}> Buy, Sell or Invest your oToken?</h4>\n        {<Button \n          label={'Exchange'}\n          onClick={()=>{\n            history.push(`/exchange/${token}`)\n          }}\n        />}\n      </div> */}\n    </>\n  );\n}\n\nexport default ManageVault;\n","import React from 'react';\n\nimport { BalanceBlock, AddressBlock } from '../common';\n\nconst HeaderDashboard = ({ symbol, poolETHBalance, poolTokenBalance, uniswapExchange }) => {\n  return (\n    <div style={{ padding: '2%', display: 'flex',  alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset='Total ETH Liquidity' balance={poolETHBalance} />\n      </div>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset={`${symbol} Liquidity`} balance={poolTokenBalance} />\n      </div>\n      <div style={{ width: '40%' }}>\n        <>\n          <AddressBlock label=\"Uniswap Contract\" address={uniswapExchange} />\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState } from 'react';\n\nimport { buyOTokensFromExchange, sellOTokensFromExchange } from '../../utils/web3';\n\nimport { getPremiumToPay, getPremiumReceived } from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { handleDecimals } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\nfunction OptionExchange({ symbol, tokenBalance, token, exchange, decimals }) {\n  const [buyAmt, setBuyAmt] = useState(0);\n  const [sellAmt, setSellAmt] = useState(0);\n  const [premiumToPay, setPremiumToPay] = useState(0);\n  const [premiumReceived, setPremiumReceived] = useState(0);\n\n  const updatePremiumToPay = async (buyAmt) => {\n    if (!buyAmt || buyAmt === 0) {\n      setPremiumToPay(0);\n      return;\n    }\n    const amount = handleDecimals(buyAmt, decimals);\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(premium);\n  };\n\n  const updatePremiumReceived = async (sellAmt) => {\n    if (!sellAmt || sellAmt === 0) {\n      setPremiumReceived(0);\n      return;\n    }\n    const amount = handleDecimals(sellAmt, decimals);\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(premium);\n  };\n\n  return (\n    <Box heading={'Exchange'}>\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`${symbol} Balance`} balance={tokenBalance} />\n        </div>\n        {/* Buy Token from Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={buyAmt}\n                  onChange={(event) => {\n                    setBuyAmt(event.target.value);\n                    updatePremiumToPay(event.target.value);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Buy'\n                onClick={() => {\n                  buyOTokensFromExchange(\n                    token,\n                    exchange,\n                    handleDecimals(buyAmt, decimals),\n                    premiumToPay\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label='Cost:' amt={premiumToPay} symbol='' />\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={sellAmt}\n                  onChange={(event) => {\n                    setSellAmt(event.target.value);\n                    updatePremiumReceived(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setSellAmt(tokenBalance);\n                    updatePremiumReceived(tokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Sell'\n                onClick={() => {\n                  sellOTokensFromExchange(token, exchange, handleDecimals(sellAmt, decimals));\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label='Premium' amt={premiumReceived} />\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default OptionExchange;\n","import React, { useState } from 'react';\n\nimport { addLiquidity } from '../../utils/web3';\n\nimport {\n  // getTokenBalance,\n} from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { handleDecimals, formatETHAmtToStr } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconEthereum } from '@aragon/ui';\n\nfunction AddLiquidity({ \n  otoken, \n  otokenSymbol, \n  otokenDecimals, \n  userTokenBalance, \n  userETHBalance,\n  uniswapExchange, \n  user, \n  poolTokenBalance, \n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply\n}) {\n  const SLIPPAGE_RATE = 2;\n\n\n  const [amtETHToAdd, setAmtETHToAdd] = useState(0);\n  const [amtTokenToAdd, setAmtTokenToAdd] = useState(0);\n\n  const liquidityMinted = (liquidityTokenSupply * amtETHToAdd) / poolETHBalance;\n  const liquidityMintedMin = (liquidityMinted * (100 - SLIPPAGE_RATE)) / 100;\n  const ethToTokenRatio = poolETHBalance / poolTokenBalance;\n  const tokenToEthRatio = poolTokenBalance / poolETHBalance;\n\n  const onChangeETHAmtToSend = (ethAmt) => {\n    const newTokenAmt = (ethAmt * tokenToEthRatio);\n    setAmtETHToAdd(ethAmt);\n    setAmtTokenToAdd(newTokenAmt);\n  };\n\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    const newEthAmt = tokenAmt * ethToTokenRatio;\n    setAmtETHToAdd(newEthAmt);\n    setAmtTokenToAdd(tokenAmt);\n  };\n\n  return (\n    <Box heading={'Add Liquidity'}>\n      <div style={{ display: 'flex' }}>\n        {/* Pool Status */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`ETH Balance`} balance={userETHBalance} />\n        </div>\n        {/* Add Liquidity too pool */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <TextInput\n                  adornmentPosition='end'\n                  adornment={otokenSymbol}\n                  type='number'\n                  wide={true}\n                  value={amtTokenToAdd}\n                  onChange={(event) => {\n                    onChangeTokenAmtToSend(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    onChangeTokenAmtToSend(userTokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition='end'\n                adornment={<IconEthereum />}\n                type='number'\n                wide={true}\n                value={amtETHToAdd}\n                onChange={(event) => {\n                  onChangeETHAmtToSend(event.target.value);\n                }}\n              />\n              <PriceSection label='Mint' amt={liquidityMinted} symbol='Pool Tokens' />\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Add Liquidity'\n                onClick={() => {\n                  const maxToken = handleDecimals(amtTokenToAdd, otokenDecimals).toString();\n                  const minLiquidity = handleDecimals(\n                    liquidityMintedMin,\n                    liquidityTokenDecimals\n                  ).toString(10);\n                  addLiquidity(\n                    otoken,\n                    uniswapExchange,\n                    maxToken,\n                    minLiquidity,\n                    formatETHAmtToStr(amtETHToAdd)\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default AddLiquidity;\n","import React, { useState } from 'react';\n\nimport { removeLiquidity } from '../../utils/web3';\n\nimport {\n  // getTokenBalance,\n} from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { handleDecimals, formatETHAmtToStr } from '../../utils/number';\nimport { Box, TextInput, Button, IconCircleMinus, IconFundraising } from '@aragon/ui';\n\nfunction RemoveLiquidity({ \n  otoken, \n  otokenSymbol, \n  otokenDecimals, \n  userTokenBalance, \n  userliquidityTokenBalance,\n  uniswapExchange, \n  poolTokenBalance, \n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply\n}) {\n  const SLIPPAGE_RATE = 3;\n\n  const [amtLiquidityTokenToSell, setAmtLiquidityTokenToSell] = useState(0);\n\n  const poolPortion = (amtLiquidityTokenToSell) / liquidityTokenSupply\n  const estETHRecieved = poolETHBalance * poolPortion\n  const estOTokenReceived = poolTokenBalance * poolPortion\n\n  const minETHReceived = estETHRecieved * (100 - SLIPPAGE_RATE) / 100\n  const minTokenReceived = estOTokenReceived * (100 - SLIPPAGE_RATE) / 100\n  \n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    setAmtLiquidityTokenToSell(tokenAmt)\n  };\n\n  return (\n    <Box heading={'Remove Liquidity'}>\n      <div style={{ display: 'flex' }}>\n        {/* Pool Token in Hold */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`Pool Token Balance`} balance={userliquidityTokenBalance} />\n        </div>\n        {/* Remove */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition='end'\n                adornment={<IconFundraising />}\n                type='number'\n                wide={true}\n                value={amtLiquidityTokenToSell}\n                onChange={(event) => {\n                  onChangeTokenAmtToSend(event.target.value);\n                }}\n              />\n              <MaxButton\n                onClick={()=>setAmtLiquidityTokenToSell(userliquidityTokenBalance)}\n              />\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n              <PriceSection label='You get' amt={estETHRecieved} symbol='ETH' />\n              <PriceSection label='+' amt={estOTokenReceived} symbol={otokenSymbol} />\n              </>\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Remove Liquidity'\n                onClick={() => {\n                  const amt = handleDecimals(amtLiquidityTokenToSell, liquidityTokenDecimals).toString()\n                  const min_eth = formatETHAmtToStr(minETHReceived)\n                  const min_token = handleDecimals(minTokenReceived, otokenDecimals)\n                  \n                  removeLiquidity(\n                    uniswapExchange,\n                    amt,\n                    min_eth,\n                    min_token\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default RemoveLiquidity;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getTokenBalance, getBalance, getERC20Info } from '../../utils/infura';\n\nimport { Header } from '@aragon/ui';\n\nimport { options } from '../../constants/options';\n\nimport DashBoard from './Header';\nimport OptionExchange from './OptionExchange'\n\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity'\n\nfunction ManagePool({ user }) {\n\n  let { token } = useParams();\n\n  const option = options.find((option) => option.addr === token);\n  const { uniswapExchange, decimals, symbol, exchange } = option;\n\n  const [poolTokenBalance, setPoolTokenBalance] = useState(0);\n  const [userTokenBalance, setUserTokenBalance] = useState(0);\n  const [poolETHBalance, setPoolETHBalance] = useState(0);\n  const [userETHBalance, setUserETHBalance] = useState(0);\n\n  const [userliquidityTokenBalance, setUserLiquidityTokenBalance] = useState(0);\n  const [liquidityTokenDecimals, setLiquidityTokenDecimals] = useState(0);\n  const [liquidityTokenSupply, setLiquidityTokenSupply] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      let [exchangeTokenBalance, exchagneETHBalance, liquidityTokenInfo] = await Promise.all([\n        getTokenBalance(token, uniswapExchange),\n        getBalance(uniswapExchange),\n        getERC20Info(uniswapExchange),\n      ]);\n      const { decimals: liqTokenDecimal, totalSupply: liqTokenTotalSupply } = liquidityTokenInfo;\n      exchangeTokenBalance = exchangeTokenBalance / 10 ** decimals;\n      if (!isCancelled) {\n        setLiquidityTokenDecimals(liqTokenDecimal);\n        setLiquidityTokenSupply(liqTokenTotalSupply);\n        setPoolETHBalance(exchagneETHBalance);\n        setPoolTokenBalance(exchangeTokenBalance);\n      }\n    }\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, token, uniswapExchange]);\n\n  useEffect(() => {\n    if (user === '') return;\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      let [tokenBalance, userETHBalance, liqTokenBalance] = await Promise.all([\n        getTokenBalance(token, user),\n        getBalance(user),\n        getTokenBalance(uniswapExchange, user),\n      ]);\n\n      const userTokenBalance = tokenBalance / 10 ** decimals;\n      const userLiqTokenBalance = liqTokenBalance / 10 ** liquidityTokenDecimals;\n      if (!isCancelled) {\n        setUserLiquidityTokenBalance(userLiqTokenBalance);\n        setUserETHBalance(userETHBalance);\n        setUserTokenBalance(userTokenBalance);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, liquidityTokenDecimals, token, uniswapExchange, user]);\n\n  return (\n    <>\n      <Header primary='Exchange' />\n\n      <DashBoard\n        user={user}\n        symbol={symbol}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        uniswapExchange={uniswapExchange}\n      />\n\n      <OptionExchange\n        symbol={symbol}\n        tokenBalance={userTokenBalance}\n        token={token}\n        exchange={exchange}\n        decimals={decimals}\n      />\n\n      <Header primary='Provide Liquidity' />\n\n      <AddLiquidity\n        user={user}\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n\n      <RemoveLiquidity\n        user={user}\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n    </>\n  );\n}\n\nexport default ManagePool;\n","import React from 'react'\n\nimport { Link } from '@aragon/ui'\n\nfunction Footer({theme}) {\n  var style = {\n    backgroundColor: theme === 'light' ? \"#F8F8F8\" : '#35425e' ,\n    textAlign: \"center\",\n    padding: \"17px\",\n    position: \"fixed\",\n    left: \"0\",\n    bottom: \"0\",\n    height: \"50px\",\n    width: \"100%\",\n    fontSize: \"12px\"\n  }\n\n  return (  \n    <div style={style}>\n      Powered By {' '}\n      <Link  external={true} href=\"https://opyn.co/#/\">Opyn</Link>{', '} \n      <Link  external={true} href=\"https://ui.aragon.org/\">Aragon UI</Link>{', '}  \n      <Link  external={true} href=\"https://www.blocknative.com/\">Blocknative</Link>{'. '}  \n      Hosted on <Link  external={true} href=\"https://github.com/antoncoding/opyn-liquidator\">GitHub</Link>.\n    </div>\n  )\n}\n\nexport default Footer","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { updateModalMode } from './utils/web3'\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage'\nimport AllOptoins from './components/AllContracts';\nimport Trade from './components/Trade'\nimport MyVaults from './components/MyVaults'\nimport TokenView from './components/TokenView';\nimport ManageVault from './components/ManageVault'\nimport ManagePool from './components/ManagePool'\nimport Footer from './components/Footer';\nimport { Main } from '@aragon/ui';\n\nfunction App() {\n  const storedTheme = window.localStorage.getItem('theme') || 'light';\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (theme) => {\n    setTheme(theme);\n    updateModalMode(theme)\n    window.localStorage.setItem('theme', theme);\n  };\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          <Route path='/token/:addr' children={<TokenView user={user} />} />\n          <Route path='/options/' children={<AllOptoins />} />\n          <Route path='/myvaults' children={<MyVaults user={user} />} />\n          <Route path='/manage/:token/:owner' children={<ManageVault user={user}/>} />\n          <Route path='/trade/' children={<Trade/>} />\n          <Route path='/exchange/:token/' children={<ManagePool user={user} />} />\n          <Route path='/' children={<HomePage/>} />\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}