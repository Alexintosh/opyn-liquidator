{"version":3,"sources":["utils/blockNative.js","utils/infura.js","utils/storage.js","constants/contracts.js","utils/web3.js","components/NavBar/ConnectButton.js","components/NavBar/SettingsButton.js","components/NavBar/index.js","components/HomePage/index.js","constants/tokens.js","constants/options/calls.js","constants/options/puts.js","constants/options/insurances.js","constants/options/index.js","components/common/AddressBlock.js","components/common/BalanceBlock.js","components/common/RatioTag.js","components/common/SectionTitle.js","components/common/MaxButton.js","components/common/HelpText.js","components/common/PriceSection.js","components/common/Comment.js","components/common/VaultButton.js","components/common/Wrapper.js","components/common/CheckBox.js","utils/tracker.js","components/AllContracts/index.js","components/Trade/index.js","components/OptionTrading/styled.js","utils/number.js","utils/0x.js","components/types/index.js","components/OptionTrading/OptionBoard.js","components/OptionTrading/MyOrders.js","components/OptionTrading/OrderBook.js","components/OptionTrading/TabBoard.js","components/OptionTrading/WrapETHSidePanel.js","components/OptionTrading/BuyAndSell.js","utils/graph.js","components/OptionTrading/index.js","components/MyVaults/NoWallet.js","utils/calculation.js","components/MyVaults/OpenVaultModal.js","components/MyVaults/index.js","components/OptionPage/ExerciseModal.js","components/OptionPage/VaultModal.js","components/OptionPage/VaultsList.js","components/OptionPage/OptionInfoBox.js","components/OptionPage/index.js","components/ManageVault/HeaderDashboard.js","components/ManageVault/CollateralManagement.js","components/ManageVault/IssuedTokenManagement.js","components/ManageVault/Liquidation.js","components/ManageVault/Exercise.js","components/ManageVault/UnderlyingManagement.js","components/ManageVault/index.js","components/UniswapTrade/Header.js","components/UniswapTrade/OptionExchange.js","components/UniswapTrade/AddLiquidity.js","components/UniswapTrade/RemoveLiquidity.js","components/UniswapTrade/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["notify","Notify","dappId","process","networkId","optionContractABI","require","optionExchangeABI","oracleABI","web3","Web3","ens","ENS","ETH_ADDR","resolveENS","ensName","a","console","log","resolver","addr","address","toLowerCase","getTokenBalance","erc20Token","user","oTokenContract","eth","Contract","methods","balanceOf","call","balance","getTotalSupply","erc20","token","totalSupply","getMaxLiquidatable","oToken","vaultOwner","maxOTokensLiquidatable","maxVaultLiquidatable","getUnderlyingRequiredToExercise","tokenToExercise","underlyingRequiredToExercise","underlyringRequired","getAllowance","contract","spender","allowance","getBalance","utils","fromWei","getPrice","oracleAddr","oracle","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","paymentToken","exchange","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","getPreference","key","defaultValue","localStorage","getItem","storePreference","value","setItem","checkAddressAndAddToStorage","watch_addrs","usedAddresses","JSON","parse","includes","push","stringify","ETH_ADDRESS","WETH","KETH","ZeroX_ERC20Proxy","oTokenABI","exchangeABI","uniswapExchangeABI","invokerABI","ZX_ExchagneABI","wrapETHABI","UINT256_MAX","onboard","Onboard","darkMode","subscriptions","wallet","provider","walletSelect","description","wallets","walletName","infuraKey","apiKey","updateModalMode","theme","config","connect","walletCheck","getState","disconnect","walletReset","checkConnectedAndGetAddress","checked","liquidate","oTokenAddr","owner","liquidateAmt","account","send","from","on","hash","kollateralLiquidate","optionExchange","amountOTokens","BigNumber","lte","Error","kollateralInvoker","data","abi","encodeParameters","invoke","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmt","toWei","toString","addERC20Collateral","collateral","collateralAmt","collateralAmtBN","lt","collateralToken","approve","removeCollateral","redeem","redeemVaultBalance","removeUnderlying","tokenAddr","amt","exercise","underlying","amountToExercise","vaults","underlyingRequired","underlyingIsETH","openVault","openVaultAddCollateralAndMint","collateralAsset","tokenAmount","createETHCollateralOption","createERC20CollateralOption","buyOTokensFromExchange","buyOTokens","sellOTokensFromExchange","sellOTokens","addLiquidity","uniswapAddr","maxToken","minLiquidity","ethInWei","uniswapExchange","deadline","Math","ceil","Date","now","removeLiquidity","pool_token_amount","min_eth_wei","min_tokens","wrapETH","amountInWei","weth","deposit","unwrapETH","withdraw","signOrder","order","MetamaskSubprovider","currentProvider","signatureUtils","ecSignOrderAsync","fillOrders","orders","amts","signatures","gasPrice","batchFillOrders","cancelOrders","batchCancelOrders","ConnectButton","setUser","useState","isConnected","setIsConnected","connectWeb3","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","padding","entity","icon","label","ChangeMode","updateTheme","LinkButton","title","isSelected","paddingLeft","opacity","fontSize","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","height","goBack","secondary","MainButton","iconUrl","width","alt","src","HomePage","display","alignItems","marginRight","marginLeft","USDC","decimals","symbol","OPYN_ETH","cDAI","eth_calls","name","tokens","strike","strikePrice","strikePriceInUSD","minRatio","expiry","eth_puts","insurances","eth_options","allOptions","concat","AddressBlock","shorten","BalanceBlock","asset","integer","digits","gt","str","split","length","RatioTag","isSafe","ratio","useCollateral","background","color","mode","defaultProps","SectionTitle","MaxButton","HelperText","parseFloat","toFixed","PriceSection","forceDisplay","amtBN","toNumber","Comment","text","ManageVaultButton","OpenVaultButton","goToMangePage","openAndGoToVault","styled","div","MyCheckBox","onCheck","useTheme","CheckBoxWrapper","onChange","paddingBottom","props","surfaceContentSecondary","ReactGA","initialize","AllContracts","tracker","pageview","storedOptionTab","storedShowExpired","parseInt","tabSelected","setTabSelected","showExpired","setShowExpired","goToToken","CheckBox","items","selected","choice","fields","entries","filter","option","entriesPerPage","renderEntry","header","toDateString","TradeLanding","goToTrade","BidText","AskText","toBaseUnitBN","rawAmt","raw","base","decimalsBN","times","pow","integerValue","toTokenUnitsBN","tokenDecimals","formatDigits","num","percision","timeSince","timeStamp","secondsPast","getTime","ts","day","getDate","month","match","replace","year","getFullYear","compareVaultRatio","vaultA","vaultB","rateA","rateB","comparison","compareVaultIssued","amountA","oTokensIssued","amountB","isAddress","Promise","endpoint","getOrderBook","quote","baseAsset","assetDataUtils","encodeERC20AssetData","quoteAsset","request","getBasePairAskAndBids","options","map","asks","bids","bestAskPrice","bestBidPrice","validAsks","records","record","isValid","askTokenAmt","makerAssetAmount","askWETHAmt","takerAssetAmount","bestAsk","validBids","bidWETHAmt","bidTokenAmt","bestBid","bestAskAndBids","path","fetch","res","json","entry","notExpired","expirationTimeSeconds","notDust","getOrderFillRatio","createOrder","maker","makerAsset","takerAsset","salt","random","senderAddress","makerAddress","takerAddress","makerFee","takerFee","makerAssetData","takerAssetData","exchangeAddress","feeRecipientAddress","makerFeeAssetData","chainId","takerFeeAssetData","broadcastOrders","url","method","headers","body","status","validationErrors","reason","getBidPrice","bid","makerAssetDecimals","takerAssetDecimals","getAskPrice","ask","minus","metaData","remainingFillableTakerAssetAmount","getRemainingMakerAndTakerAmount","remainingTakerAssetAmount","makerAssetAmountBN","takerAssetAmountBN","remainingMakerAssetAmount","multipliedBy","getGasPrice","getFillAmountsOfOrders","selectedOrders","targetTakerAstAmount","targetMakerAstAmount","sumTakerAmount","sumMakerAmount","takerAmountArray","makerAmount","takerAmount","undefined","plus","takerAmountNeeded","makerAmountNeeded","PropTypes","shape","string","isRequired","number","signature","orderHash","OptionBoard","calls","puts","setBaseAsset","setTradeType","setSelectedOrders","putStats","setPutStats","callStats","setCallStats","selectedExpiryIdx","setExpiryIdx","optionsByDate","result","distinctExpirys","Set","optionsExpiresThisDay","o","strikePrices","put","find","putDetail","p","callDetail","c","sort","b","expiryText","groupByDate","isCancelled","updateBoardStats","all","callData","putData","id","setInterval","clearInterval","item","align","callAsk","callBid","callOnclick","callBidOnclick","callAskOnclick","putAsk","putBid","putOnclick","putBidOnclick","putAskOnclick","Cell","type","disabled","textAlign","MyOrders","myOrdersPage","setMyOrdersPage","userAsks","userBids","statusEmpty","page","onPageChange","onSelectEntries","slice","zeroXUtil","end","OrderBook","tradeType","askPage","setAskPage","bidPage","setBidPage","askSelectedIndexs","setAskSelectedIndexes","bidSelectedIndexs","setBidSelectedIndexes","selectedIdxs","i","indexes","selection","renderSelectionCount","x","format","showIcon","Orders","selectedTab","setSelectedTab","WrapETHModal","wethBalance","opened","setOpen","helperText","setHelperText","wrapAmount","setWrapAmount","unWrapAmount","setUnwrapAmount","ethBalance","setETHBalance","updateETHBalance","quoteBalance","idETHBalance","onClose","warning","wide","event","amount","target","BuyAndSell","baseAssetBalance","quoteAssetBalance","toast","useToast","quoteAssetAmount","setQuoteAssetAmount","fillingtakerAmounts","setFillingTakerAmounts","baseAmountToFill","setBaseAmountToFill","baseAmountToCreate","setBaseAmountToCreate","rate","setRate","fastGasPrice","setFastGasPrice","totalFillableMakerAmount","totalFillableTakerAmount","selectedOrderFillables","setSelectedOrdersFillable","isFillingAndCreating","setIsFillingAndCreating","hasSelectedOrders","feeInETH","panelOpend","setPanelOpended","wethPanelHelperText","setPanelHelperText","activeButton","setActiveButton","expirySeconds","isCanceled","fetchGasPrice","fast","selectedFillables","reduce","prev","next","fillableTakerAmounts","baseMaxFillingAmount","quoteMaxFillingAmount","aggregateRate","checkAndAllowQuoteAsset","quoteAssetAmountBase","checkAndAllowBaseAsset","baseAssetAmountBase","clickCreateOrder","quoteAssetInBaseUnit","baseAssetInBaseUnit","signedOrder","clickFillOrders","takerAmountBase","cur","clickFillAndCreate","BuyAndSellBlock","Header","TopPart","TopPartText","toFormat","Flex","hint","TabWrapper","Tab","active","LowerPart","Label","e","amountBN","totalOtokenInSelectedOrders","gte","quoteAmountTotal","baseAmountTotal","fillingAmounts","quoteAmountTk","quoteAmount","onChangeBaseAmount","adornmentPosition","adornment","newrate","rateBN","onChangeRate","GroupButtonWrapper","GroupButton","index","isActive","BottomTextWrapper","BottomText","FlexWrapper","border","surface","contentSecondary","content","Wrapper","surfaceHighlight","getAllVaultsForOption","optionAddress","query","postQuery","response","getAllVaultsForUser","actions","getVault","vault","getLiquidationHistory","liquidationActionsQuery","liquidateActions","getExerciseHistory","exerciseActions","getRemoveUnderlyingHistory","removeUnderlyingActions","LeftPart","RightPart","WholeScreen","OptionTrading","setAsks","setBids","setBaseAssetBalance","setQuoteAssetBalance","setVault","updateOrderBook","updateBaseBalance","baseBalance","updateVaultData","userVault","idOrderBook","idBaseBalance","idUpdateVault","updateQuoteBalance","idQuoteAssetBalance","TabBoard","PleaseLogin","setWatchAddress","InAddress","setAddress","placeholder","reverse","scale","radius","fontFamily","calculateStrikeValueInCollateral","collateralDecimals","strikeValueInWei","strikeValueInCollateral","collateralValueInWei","calculateRatio","tokenIssued","Infinity","colalteralBN","tokenIssuedBN","strikePriceBN","OpenVaultModal","setOpened","setCollateralAmt","mintTokenAmt","setMintTokenAmt","setStrikeValueInCollateral","setRatio","useMemo","strikeValueInColltrl","newRatio","mint","visible","amtBn","onCollateralChange","MyVaults","opendVaults","setOpenedVaults","tokensToOpen","setTokensToOpen","isLoading","setIsLoading","watchAddress","isWatchMode","hasAddressConnected","showEmpty","setShowEmpty","displayVaults","userVaults","openedVaults","notOpenedTokens","optionsContract","oTokenName","NoWallet","ExerciseModal","userUnderlyingBalance","setUserUnderlyingBalance","userOTokenBalance","setUserOTokenBalance","exerciseAmount","setExerciseAmount","setUnderlyringRequired","nonEmptyVaults","selectedIndexes","setSelectedIndexes","selectedHasEnoughCollateral","setHasEnoughCollateral","userUnderlying","userOTkns","checkHasEnoughToken","sumIssued","accumulator","current","onChangeExerciseAmt","exeAmtBN","underlyingRawAmt","heading","count","vaultowners","VaultModal","collateralIsETH","addValue","setAddValue","setLiquidateAmt","maxLiquidatable","getData","catch","error","justifyContent","VaultOwnerList","vaultUsesCollateral","vaultsWithDetail","setVaultDetail","setPage","updateInfo","vaultDetail","OptionOverview","totalCollateral","setTotalCollateral","setTotalSupply","totalCollt","rawCollateralBalance","supply","init","OptionPage","useParams","setVaults","allVaults","OptionInfoBox","VaultsList","HeaderDashboard","tokenInUnit","collateralBalance","CollateralManagement","isOwner","collateralAssetBalance","strikeValue","setNewRatio","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","updateNewRatio","newCollateral","amtRaw","newCollateralInWei","collateralBalanceRaw","newCollateralWei","minRatioBN","minCollateral","maxToRemove","maxToRemoveInTokenUnit","IssuedTokenManagement","tokenBalance","setIssueAmt","setBurnAmt","newAmt","intputAmt","onChangeIssueAmt","maxToIssueRaw","maxToIssue","onChangeBurnAmt","issued","maxToBurn","LiquidationHistory","userTokenBalance","setMaxLiquidatable","setEntries","amountToLiquidate","setAmtToLiquidate","maxToLiquidate","updateLiquidatable","actionsForThisVault","actionA","actionB","timestamp","updateList","maximum","min","amtToLiquidate","collateralToPay","liquidator","transactionHash","transaction","ExerciseHistory","amtCollateralToPay","oTokensToExercise","exerciser","RemoveUnderlying","underlyingDecimals","underlyingAmount","ManageVault","setStrikeValue","ownerTokenBalance","setOwnerTokenBalance","setUserTokenBalance","userCollateralAssetBalance","setUserCollateralAssetBalance","noVault","setNoVault","vaultToManage","_ownerTokenBalance","_userTokenBalance","userColltBalance","ownerTokenBalanceBN","userTokenBalanceBN","strikeValInCollt","currentRatio","Liquidation","Exercise","UnderlyingManagement","TradePageHeader","poolETHBalance","poolTokenBalance","OptionExchange","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","updatePremiumToPay","butAmountBN","premium","updatePremiumReceived","sellAmountBN","AddLiquidity","otoken","otokenSymbol","otokenDecimals","userETHBalance","liquidityTokenDecimals","liquidityTokenSupply","amtETHToAdd","setAmtETHToAdd","amtTokenToAdd","setAmtTokenToAdd","liquidityMinted","liquidityMintedMin","ethToTokenRatio","tokenToEthRatio","onChangeTokenAmtToSend","tokenAmt","newEthAmt","newTokenAmt","onChangeETHAmtToSend","ethWei","RemoveLiquidity","userliquidityTokenBalance","amtLiquidityTokenToSell","setAmtLiquidityTokenToSell","poolPortion","estETHRecieved","estOTokenReceived","minETHReceived","minTokenReceived","tokenAmtBN","min_eth","min_token","UniswapPool","setPoolTokenBalance","setPoolETHBalance","setUserETHBalance","setUserLiquidityTokenBalance","setLiquidityTokenSupply","updatePoolInfo","exTokenBalance","exchagneETHBalance","liqTokenTotalSupply","exchangeTokenBalance","updateUserInfo","userEthBalance","liqTokenBalance","userOTknBalanceBN","userLiqTknBalanceBN","Footer","backgroundColor","position","left","bottom","external","href","App","storedTheme","setTheme","assetsUrl","newTheme","Trade","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.76837992.chunk.js","sourcesContent":["import Notify from 'bnc-notify';\n\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY;\n\n// eslint-disable-next-line import/prefer-default-export\nexport const notify = Notify({\n  dappId: BLOCKNATIVE_KEY,\n  networkId: 1,\n});\n","import Web3 from 'web3';\n\nimport ENS from 'ethereum-ens';\n\nconst optionContractABI = require('../constants/abi/OptionContract.json');\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json');\nconst oracleABI = require('../constants/abi/Oracle.json');\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\n\nconst web3 = new Web3(`https://mainnet.infura.io/v3/${INFURA_KEY}`);\nconst ens = new ENS(web3);\n\nconst ETH_ADDR = '0x0000000000000000000000000000000000000000';\n\n// ENS\nexport const resolveENS = async (ensName) => {\n  console.log('infura resolve ETNS');\n  const address = await ens.resolver(ensName).addr();\n  return address.toLowerCase();\n};\n\n/**\n *\n * @param {string} erc20Token address\n * @param {string} user address\n * @return {Promise<string>}\n */\nexport const getTokenBalance = async (erc20Token, user) => {\n  if (user === '') return '0';\n  console.log(`infura getTokenBalance ${erc20Token} for ${user}`);\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const balance = await oTokenContract.methods.balanceOf(user).call();\n  return balance;\n};\n\nexport const getDecimals = async (erc20Token) => {\n  console.log(`infura getDecimals ${erc20Token}`);\n  if (erc20Token === ETH_ADDR) return 18;\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const decimals = await oTokenContract.methods.decimals().call();\n  return parseInt(decimals, 10);\n};\n\nexport const getERC20Symbol = async (erc20Token) => {\n  console.log(`infura getERC20Symbol ${erc20Token}`);\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  return oTokenContract.methods.symbol().call();\n};\n\nexport const getTotalSupply = async (erc20) => {\n  console.log('get total supply');\n  const token = new web3.eth.Contract(optionContractABI, erc20);\n  const totalSupply = await token.methods.totalSupply().call();\n  return totalSupply;\n};\n\n// Option Contract\n\n/**\n * Max liquidatable for given vault\n * @param {string} oToken\n * @param {string} owner\n * @return {Promise<number>}\n */\nexport const getMaxLiquidatable = async (oToken, vaultOwner) => {\n  console.log(`infura getMaxLiquidatable ${oToken}`);\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable = await oTokenContract.methods\n    .maxOTokensLiquidatable(vaultOwner)\n    .call();\n  return maxVaultLiquidatable;\n};\n\n/**\n *\n * @param {string} oToken\n * @param {string} tokenToExercise\n * @return {Promise<string>}\n */\nexport const getUnderlyingRequiredToExercise = async (oToken, tokenToExercise) => {\n  console.log(`infura getUnderlyingRequiredToExercise ${oToken}`);\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const underlyringRequired = await oTokenContract.methods\n    .underlyingRequiredToExercise(tokenToExercise)\n    .call();\n  // console.log(`what `, underlyringRequired)\n  return underlyringRequired;\n};\n\n/**\n *\n * @param {string} contract\n * @param {string} user\n * @param {string} spender\n * @return {Promise<string>}\n */\nexport const getAllowance = async (contract, user, spender) => {\n  console.log('infura get Allowance');\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call();\n  return allowance;\n};\n\n/**\n * Get balance in eth for the account\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  if (address === '') return '0';\n  console.log(`infura getBalance ${address}`);\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\n/**\n * Get price of token in unit of wei\n * @param {string} oracleAddr\n * @param {string} token\n * @returns {Promise<string>}\n */\nexport const getPrice = async (oracleAddr, token) => {\n  console.log(`infura getPrice ${token}`);\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return price; // unit: wei/ per token\n};\n\n// Option Exchange\nexport const getPremiumToPay = async (\n  exchangeAddr,\n  tokenToBuy,\n  buyAmt,\n  paymentToken = ETH_ADDR,\n) => {\n  console.log('infura getPremiumToPay');\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call();\n  return premiumToPay;\n};\n\nexport const getPremiumReceived = async (exchangeAddr, tokenToSell, sellAmt) => {\n  console.log('infura getPremiumReceived');\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const payoutToken = ETH_ADDR;\n  const premiumReceived = await exchange.methods\n    .premiumReceived(tokenToSell, payoutToken, sellAmt)\n    .call();\n  return web3.utils.fromWei(premiumReceived);\n};\n\n// uniswapExchange\n","/**\n * Get value by key\n * @param {string} key\n * @param {string} defaultValue\n */\nexport function getPreference(key, defaultValue) {\n  return localStorage.getItem(key) || defaultValue;\n}\n\n/**\n * store value to storage\n * @param {string} key\n * @param {string} value\n */\nexport function storePreference(key, value) {\n  localStorage.setItem(key, value);\n}\n\nexport function checkAddressAndAddToStorage(address) {\n  const watch_addrs = getPreference('watch_addresses', '[]');\n  const usedAddresses = JSON.parse(watch_addrs);\n  if (!usedAddresses.includes(address.toLowerCase()) && !usedAddresses.includes(address)) {\n    usedAddresses.push(address);\n    storePreference('watch_addresses', JSON.stringify(usedAddresses));\n  }\n}\n","/* eslint-disable camelcase */\n\nexport const ETH_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const ERC20_Liquidator = '0xF8cE4E70F52FdDBc72547Ce9616ed3E7d4525e8A';\nexport const Kollateral_Liquidator = '0xfBaB30f79bbbC92C708E7e9b01E329e003d8Ce48';\n\nexport const AAVE_LENDING = '0x398eC7346DcD622eDc5ae82352F02bE94C62d119';\nexport const Kollateral_Invoker = '0x06d1f34fd7c055ae5ca39aa8c6a8e10100a45c01';\n\nexport const WETH = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\nexport const DAI = '0x6b175474e89094c44da98b954eedeac495271d0f';\nexport const USDC = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48';\nexport const KETH = '0x0000000000000000000000000000000000000001';\n\n// 0x contracts\nexport const ZeroX_Exchange = '0x61935cbdd02287b511119ddb11aeb42f1593b7ef';\nexport const ZeroX_ERC20Proxy = '0x95e6f48254609a6ee006f7d493c8e5fb97094cef';\nexport const ZeroX_ERC721Proxy = '0xefc70a1b18c432bdc64b596838b4d138f6bc6cad';\nexport const ZeroX_Forwarder = '0x4aa817c6f383c8e8ae77301d18ce48efb16fd2be';\nexport const ZeroX_ZRXToken = '0xe41d2489571d322189246dafa5ebde1f4699f498';\n","/* eslint-disable camelcase */\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport { MetamaskSubprovider } from '@0x/subproviders';\nimport { signatureUtils } from '@0x/order-utils';\nimport Onboard from 'bnc-onboard';\n\n// import { ContractWrappers } from '@0x/contract-wrappers';\n// import { getContractAddressesForChainOrThrow } from '@0x/contract-addresses';\n\n// import {} from '@'\nimport { notify } from './blockNative';\nimport { getAllowance, getPremiumToPay } from './infura';\nimport { getPreference } from './storage';\nimport {\n  ETH_ADDRESS, Kollateral_Liquidator, Kollateral_Invoker, KETH, ZeroX_Exchange, WETH,\n} from '../constants/contracts';\n\nconst oTokenABI = require('../constants/abi/OptionContract.json');\nconst exchangeABI = require('../constants/abi/OptionExchange.json');\nconst uniswapExchangeABI = require('../constants/abi/UniswapExchange.json');\nconst invokerABI = require('../constants/abi/KollateralInvoker.json');\nconst ZX_ExchagneABI = require('../constants/abi/ZeroX_Exchange.json');\nconst wrapETHABI = require('../constants/abi/WETH.json');\n\nconst DEADLINE_FROM_NOW = 60 * 15;\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\nconst BLOCKNATIVE_KEY = process.env.REACT_APP_BLOCKNATIVE_KEY;\nconst FORTMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY;\n\nlet web3;\n\nconst onboard = Onboard({\n  darkMode: getPreference('theme', 'light') === 'dark',\n  dappId: BLOCKNATIVE_KEY, // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  walletSelect: {\n    description: 'Please select a wallet to connect to Opyn Monitor',\n    wallets: [\n      { walletName: 'metamask' },\n      {\n        walletName: 'walletConnect',\n        infuraKey: INFURA_KEY,\n      },\n      {\n        walletName: 'fortmatic',\n        apiKey: FORTMATIC_KEY,\n      },\n      { walletName: 'trust' },\n      { walletName: 'coinbase' },\n      { walletName: 'status' },\n    ],\n  },\n});\n\n\nexport const updateModalMode = async (theme) => {\n  const darkMode = theme === 'dark';\n  onboard.config({ darkMode });\n};\n\nexport const connect = async () => {\n  const selected = await onboard.walletSelect();\n  if (!selected) return false;\n  const checked = await onboard.walletCheck();\n  if (!checked) return false;\n  return onboard.getState().address;\n};\n\nexport const disconnect = async () => {\n  onboard.walletReset();\n};\n\n// eslint-disable-next-line consistent-return\nexport const checkConnectedAndGetAddress = async () => {\n  let checked = false;\n  try {\n    checked = await onboard.walletCheck();\n  } catch (error) {\n    await onboard.walletSelect();\n    checked = await onboard.walletCheck();\n  } finally {\n    // eslint-disable-next-line no-unsafe-finally\n    if (checked) return onboard.getState().address;\n  }\n};\n\nexport const liquidate = async (oTokenAddr, owner, liquidateAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .liquidate(owner, liquidateAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} oTokenAddr\n * @param {string} optionExchange\n * @param {string} owner\n * @param {string} paymentToken payment token address\n */\nexport const kollateralLiquidate = async (oTokenAddr, optionExchange, owner, paymentToken) => {\n  const account = await checkConnectedAndGetAddress();\n\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const amountOTokens = await oToken.methods.maxOTokensLiquidatable(owner).call();\n\n  if (new BigNumber(amountOTokens).lte(new BigNumber(0))) {\n    throw new Error('Nothing to liquidate');\n  }\n\n  const premiumToPay = await getPremiumToPay(\n    optionExchange, // exchange\n    oTokenAddr,\n    amountOTokens,\n    paymentToken === KETH ? ETH_ADDRESS : paymentToken,\n  );\n\n  const kollateralInvoker = new web3.eth.Contract(invokerABI, Kollateral_Invoker);\n\n  const data = web3.eth.abi.encodeParameters(['address', 'address'], [owner, oTokenAddr]);\n  await kollateralInvoker.methods\n    .invoke(\n      Kollateral_Liquidator, // invokeTo\n      data, // invokeData\n      paymentToken, // tokenAddress: Dai, ETH,\n      premiumToPay,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const burnOToken = async (oTokenAddr, burnAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .burnOTokens(burnAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const issueOToken = async (oTokenAddr, issueAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .issueOTokens(issueAmt, account)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .addETHCollateral(owner)\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collaral\n * @param {string} oTokenAddr\n * @param {string} owner\n * @param {number|string} collateralAmt in min unit\n */\nexport const addERC20Collateral = async (collateral, oTokenAddr, owner, collateralAmt) => {\n  const collateralAmtBN = new BigNumber(collateralAmt);\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const allowance = await getAllowance(collateral, account, oTokenAddr);\n  // Approve to move collateral\n  if (new BigNumber(allowance).lt(collateralAmtBN)) {\n    const collateralToken = new web3.eth.Contract(oTokenABI, collateral);\n    await collateralToken.methods\n      .approve(oTokenAddr, UINT256_MAX)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n  await oToken.methods\n    .addERC20Collateral(owner, collateralAmtBN.toString())\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} collateral\n * @param {string} oTokenAddr\n * @param {string} collateralAmt in base unit\n */\nexport const removeCollateral = async (collateral, oTokenAddr, collateralAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if (collateral === ETH_ADDRESS) {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\nexport const redeem = async (token) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .redeemVaultBalance()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n * @param {string} token\n */\nexport const removeUnderlying = async (token) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .removeUnderlying()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const approve = async (tokenAddr, spender, amt = UINT256_MAX) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, tokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * Exercise your oTokens\n * @param {string} oTokenAddr\n * @param {string} underlying asset type\n * @param {string} amountToExercise\n * @param {string[]} vaults vault owners\n */\nexport const exercise = async (oTokenAddr, underlying, amountToExercise, vaults) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const underlyingRequired = await oToken.methods\n    .underlyingRequiredToExercise(amountToExercise)\n    .call();\n\n  const underlyingIsETH = underlying === ETH_ADDRESS;\n\n  if (!underlyingIsETH) {\n    const allowance = await getAllowance(underlying, account, oTokenAddr);\n    if (new BigNumber(allowance).lt(new BigNumber(underlyingRequired))) {\n      await approve(underlying, oTokenAddr, UINT256_MAX);\n    }\n  }\n\n  await oToken.methods\n    .exercise(amountToExercise, vaults)\n    .send({ from: account, value: underlyingIsETH ? underlyingRequired : '0' })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVault = async (oTokenAddr) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .openVault()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVaultAddCollateralAndMint = async (oTokenAddr, collateralAsset, collateralAmt, tokenAmount) => {\n  const account = await checkConnectedAndGetAddress();\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if (collateralAsset === ETH_ADDRESS) {\n    await oToken.methods\n      .createETHCollateralOption(tokenAmount, account)\n      .send({\n        from: account,\n        value: collateralAmt,\n      })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    // check allowance\n    const allowance = await getAllowance(collateralAsset, account, oTokenAddr);\n    if (new BigNumber(allowance).lt(new BigNumber(collateralAmt))) {\n      await approve(collateralAsset, oTokenAddr, UINT256_MAX);\n    }\n    await oToken.methods\n      .createERC20CollateralOption(tokenAmount, collateralAmt, account)\n      .send({\n        from: account,\n      })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\n\n// Option Exchange\n\nexport const buyOTokensFromExchange = async (oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .buyOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      buyAmt,\n    )\n    .send({ from: account, value: ethAmt })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const sellOTokensFromExchange = async (oTokenAddr, exchangeAddr, sellAmt) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oTokenAddr, account, exchangeAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(sellAmt))) {\n    await approve(oTokenAddr, exchangeAddr, UINT256_MAX);\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .sellOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      sellAmt,\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Uniswap Exchange\n\n/**\n *\n */\nexport const addLiquidity = async (oToken, uniswapAddr, maxToken, minLiquidity, ethInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const allowance = await getAllowance(oToken, account, uniswapAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(maxToken))) {\n    await approve(oToken, uniswapAddr, UINT256_MAX);\n  }\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .addLiquidity(\n      minLiquidity, // min_liquidity\n      maxToken, // max_tokens\n      deadline, // deadline\n    )\n    .send({ from: account, value: ethInWei })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n */\nexport const removeLiquidity = async (uniswapAddr, pool_token_amount, min_eth_wei, min_tokens) => {\n  const account = await checkConnectedAndGetAddress();\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .removeLiquidity(pool_token_amount, min_eth_wei, min_tokens, deadline)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/*\n * 0x Protocols\n */\nexport const wrapETH = async (amountInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const weth = new web3.eth.Contract(wrapETHABI, WETH);\n  await weth.methods\n    .deposit()\n    .send({\n      from: account,\n      value: amountInWei,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const unwrapETH = async (amountInWei) => {\n  const account = await checkConnectedAndGetAddress();\n  const weth = new web3.eth.Contract(wrapETHABI, WETH);\n  await weth.methods\n    .withdraw(amountInWei)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n* Sign Order\n* @param {*} order\n*/\nexport const signOrder = async (order) => {\n  const account = await checkConnectedAndGetAddress();\n  const provider = new MetamaskSubprovider(web3.currentProvider);\n  return signatureUtils.ecSignOrderAsync(provider, order, account);\n};\n\n\nexport const fillOrders = async (orders, amts, signatures, value, gasPrice) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(ZX_ExchagneABI, ZeroX_Exchange);\n  await exchange.methods\n    .batchFillOrders(orders, amts, signatures)\n    .send({\n      from: account,\n      value, // Protocol fee: gas to be gas price * 150\n      gasPrice: web3.utils.toWei(gasPrice, 'gwei'), // gwei to wei\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const cancelOrders = async (orders) => {\n  const account = await checkConnectedAndGetAddress();\n  const exchange = new web3.eth.Contract(ZX_ExchagneABI, ZeroX_Exchange);\n  await exchange.methods\n    .batchCancelOrders(orders)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase,\n} from '@aragon/ui';\n\nimport { connect, disconnect } from '../../utils/web3';\nimport { checkAddressAndAddToStorage } from '../../utils/storage';\n\nfunction ConnectButton({ user, setUser }) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n    checkAddressAndAddToStorage(address);\n  };\n\n  const disconnectWeb3 = async () => {\n    await disconnect();\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{ paddingTop: 5, paddingRight: 5 }}>\n        <LinkBase onClick={disconnectWeb3} size=\"small\">\n          {' '}\n          <IconPower />\n          {' '}\n        </LinkBase>\n      </div>\n      <Box padding={6}>\n        <IdentityBadge entity={user} />\n      </Box>\n\n    </>\n  ) : (\n    <Button icon={<IconConnect />} label=\"Connect\" onClick={connectWeb3} />\n  );\n}\n\nConnectButton.propTypes = {\n  user: PropTypes.string.isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n\nexport default ConnectButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\nfunction ChangeMode({ theme, updateTheme }) {\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark');\n    else updateTheme('light');\n  };\n\n  return (\n    <Button\n      icon={theme === 'dark' ? <IconStar /> : <IconStarFilled />}\n      onClick={handleChangeTheme}\n      label=\"Theme\"\n    />\n  );\n}\n\nChangeMode.propTypes = {\n  theme: PropTypes.string.isRequired,\n  updateTheme: PropTypes.func.isRequired,\n};\n\nexport default ChangeMode;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, BackButton, LinkBase } from '@aragon/ui';\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SettingsButton';\n\nfunction NavBar({\n  theme, updateTheme, user, setUser,\n}) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n  return (\n    <Bar\n      primary={\n        isHome ? (\n          <></>\n        ) : (\n          <>\n            <div style={{ height: '100%' }}>\n              <BackButton\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n            <LinkButton\n              title=\"Home\"\n              onClick={() => {\n                history.push('/');\n              }}\n              isSelected={history.location.pathname === '/'}\n            />\n            <LinkButton\n              title=\"My Vaults\"\n              onClick={() => {\n                history.push('/myvaults/');\n              }}\n              isSelected={history.location.pathname === '/myvaults/'}\n            />\n            <LinkButton\n              title=\"All Contracts\"\n              onClick={() => {\n                history.push('/options/');\n              }}\n              isSelected={history.location.pathname === '/options/'}\n            />\n            <LinkButton\n              title=\"Trade\"\n              onClick={() => {\n                history.push('/trade/');\n              }}\n              isSelected={history.location.pathname.includes('/trade/')}\n            />\n          </>\n        )\n      }\n      secondary={(\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      )}\n    />\n  );\n}\n\n\nNavBar.propTypes = {\n  theme: PropTypes.string.isRequired,\n  updateTheme: PropTypes.func.isRequired,\n  user: PropTypes.string.isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n\nfunction LinkButton({ title, onClick, isSelected = false }) {\n  return (\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}>\n        <div style={{ padding: '1%', opacity: isSelected ? 1 : 0.5, fontSize: 17 }}>{title}</div>\n      </LinkBase>\n    </div>\n  );\n}\n\nLinkButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n};\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Header, Box, LinkBase } from '@aragon/ui';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header primary=\"Welcome to Opyn Monitor\" />\n      <div style={{ padding: 5, opacity: 0.5 }}> Tools for DeFi Risk Management. </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%', marginRight: '3%' }}>\n          <MainButton\n            title=\"My Vaults\"\n            description=\"Manage collateral, Mint/Burn oTokens\"\n            iconUrl=\"https://opyn.co/static/media/1.68813886.svg\"\n            onClick={() => {\n              history.push('/myvaults');\n            }}\n          />\n        </div>\n\n        <div style={{ width: '30%' }}>\n          <MainButton\n            title=\"All Contracts\"\n            description=\" Monitor and liquidate vaults.\"\n            iconUrl=\"https://opyn.co/static/media/2.18d22be0.svg\"\n            onClick={() => {\n              history.push('/options/');\n            }}\n          />\n        </div>\n\n        <div style={{ width: '30%', marginLeft: '3%' }}>\n          <MainButton\n            title=\"Trade\"\n            description=\"Buy, Sell or Provided Liquidity.\"\n            iconUrl=\"https://opyn.co/static/media/3.4da8b24d.svg\"\n            onClick={() => {\n              history.push('./trade');\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction MainButton({\n  title, description, iconUrl, onClick,\n}) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding: 10, fontSize: 18 }}>{title}</div>\n        <img alt=\"icon\" style={{ padding: 10, height: 64 }} src={iconUrl} />\n        <div style={{ paddingTop: 5, opacity: 0.5 }}>\n          {' '}\n          {description}\n          {' '}\n        </div>\n\n      </Box>\n    </LinkBase>\n  );\n}\n\nMainButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  iconUrl: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default HomePage;\n","export const USDC = {\n  addr: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  decimals: 6,\n  symbol: 'USDC',\n};\n\nexport const OPYN_ETH = {\n  addr: '0x0000000000000000000000000000000000000000',\n  decimals: 18,\n  symbol: 'ETH',\n};\n\nexport const cDAI = {\n  addr: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n  decimals: 8,\n  symbol: 'cDai',\n};\n\nexport const cUSDC = {\n  addr: '0x39AA39c021dfbaE8faC545936693aC917d5E7563',\n  decimals: 8,\n  symbol: 'cUSDC',\n};\n\nexport const CurveFi = {\n  addr: '0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8',\n  decimals: 18,\n  symbol: 'yDAI+yUSDC+yUSDT+yTUSD',\n};\n\nexport const WETH = {\n  addr: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n  decimals: 18,\n  symbol: 'WETH',\n};\n","/* eslint-disable import/prefer-default-export */\nimport * as tokens from '../tokens';\n\nexport const eth_calls = [\n  {\n    addr: '0x6ba566e667bdefcec27955689e30a56872cacf98',\n    title: '(test) ETH Call $200 04/24/20',\n\n    // constants in contract\n    symbol: 'oETH $200 Call',\n    name: 'Opyn ETH Call $200 04/24/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.USDC,\n    strike: tokens.OPYN_ETH,\n    strikePrice: 5e-9,\n    strikePriceInUSD: 200,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x30651Fc7F912f5E40AB22F3D34C2159431Fb1c4F', // wrong\n    expiry: 1587715200,\n  },\n];\n","/* eslint-disable import/prefer-default-export */\nimport * as tokens from '../tokens';\n\nexport const eth_puts = [\n  {\n    addr: '0x48ab8a7d3bf2eb942e153e4275ae1a8988238dc7',\n    title: 'ETH Put $100 04/03/20',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/03/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1e-6,\n    strikePriceInUSD: 100,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x30651Fc7F912f5E40AB22F3D34C2159431Fb1c4F',\n    expiry: 1585958340,\n  },\n  {\n    addr: '0x6c79f10543c7886c6946b8a996f824e474bac8f2',\n    title: 'ETH Put $100 04/24/20',\n\n    // constants in contract\n    symbol: 'oETH $100 Put',\n    name: 'Opyn ETH Put $100 04/24/20',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1e-6,\n    strikePriceInUSD: 100,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0x5734a78b1985B47dF3fbf1736c278F57c2C30983',\n    expiry: 1587715200,\n  },\n  {\n    addr: '0xaefc7b368f7b536c9e5e3f342bf534931ce58584',\n    title: 'ETH Put $150 04/24/20',\n    // constants in contract\n    symbol: 'oETH $150 Put',\n    name: 'Opyn ETH Put $150 04/24/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.5e-5,\n    strikePriceInUSD: 150,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xD2840757B0DeF8fBC2A7DC990CEF75975C2d3F0e',\n    expiry: 1587715200,\n  },\n  {\n    addr: '0x461cd647add2159e85ad57141cb5371566fceed3',\n    title: 'ETH Put $160 05/01/20',\n\n    // constants in contract\n    symbol: 'oETH $160 Put',\n    name: 'Opyn ETH Put $160 05/01/20',\n    decimals: 7,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.USDC,\n    underlying: tokens.OPYN_ETH,\n    strike: tokens.USDC,\n    strikePrice: 1.6e-5,\n    strikePriceInUSD: 160,\n    minRatio: 1,\n    exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n    uniswapExchange: '0xd03f7298aE74a8618711Ec43F45Ad2225F141aa4',\n    expiry: 1588320000,\n  },\n];\n","import * as tokens from '../tokens';\n\n/* eslint-disable import/prefer-default-export */\nexport const insurances = [\n  {\n    title: 'cDai Insurance',\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.cDAI,\n    strike: tokens.USDC,\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xA6923533A6362008e9b536271C2Bdc0FF1467D3c',\n    expiry: 1612915200,\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.cUSDC,\n    strike: tokens.USDC,\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xE3A0a2431a093fed99037987eD0A88550e5E79AA',\n    expiry: 1612915200,\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n    // constants in contract\n    symbol: 'oCRV',\n    name: 'Opyn y.curve.fi Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.CurveFi,\n    strike: tokens.USDC,\n    strikePrice: 9.2e-16,\n    minRatio: 1.6,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x21f5E9D4Ec20571402A5396084B1634314A68c97',\n    expiry: 1585440000,\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance ',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: tokens.OPYN_ETH,\n    underlying: tokens.cDAI,\n    strike: tokens.USDC,\n    strikePrice: 2e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x8a0976500EED661202810bAB030a057DF15c4CC9',\n    expiry: 1612915200,\n  },\n];\n","import { eth_calls } from './calls';\nimport { eth_puts } from './puts';\nimport { insurances } from './insurances';\n\n\nexport const eth_options = eth_puts; // eth_calls.concat(eth_puts);\nexport const allOptions = insurances.concat(eth_options); // .concat(eth_calls).concat(eth_puts);\nexport {\n  eth_calls, eth_puts, insurances,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IdentityBadge } from '@aragon/ui';\n\nfunction AddressBlock({ label, address }) {\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}>{label}</div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten />\n      </div>\n    </>\n  );\n}\n\nAddressBlock.propTypes = {\n  label: PropTypes.string.isRequired,\n  address: PropTypes.string.isRequired,\n};\n\nexport default AddressBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BigNumber from 'bignumber.js';\n\nfunction BalanceBlock({ asset, balance }) {\n  let integer = '0';\n  let digits = '0';\n  if (new BigNumber(balance).gt(new BigNumber(0))) {\n    const str = new BigNumber(balance).toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}>{asset}</div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>\n        .\n        <span style={{ fontSize: 18 }}>\n          {' '}\n          {digits}\n          {' '}\n        </span>\n      </div>\n    </>\n  );\n}\n\nBalanceBlock.propTypes = {\n  asset: PropTypes.string.isRequired,\n  balance: PropTypes.oneOfType([\n    PropTypes.instanceOf(BigNumber),\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n};\n\nexport default BalanceBlock;\n","import React from 'react';\nimport { Tag } from '@aragon/ui';\nimport Proptypes from 'prop-types';\n\nfunction RatioTag({ isSafe, ratio, useCollateral = true }) {\n  return !useCollateral ? (\n    <Tag color=\"#78827a\" background=\"#c0c2c0\">\n      Cool\n    </Tag>\n  ) : isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background=\"#FFEBAD\" color=\"#FEC100\">\n        {' '}\n        Danger\n        {' '}\n      </Tag>\n    ) : (\n      <Tag mode=\"new\"> safe </Tag>\n    )\n  ) : (\n    <Tag color=\"#E34343\" background=\"#FFC6C6\">\n      Unsafe!\n    </Tag>\n  );\n}\n\nRatioTag.propTypes = {\n  isSafe: Proptypes.bool.isRequired,\n  ratio: Proptypes.number.isRequired,\n  useCollateral: Proptypes.bool,\n};\n\nRatioTag.defaultProps = {\n  useCollateral: true,\n};\n\nexport default RatioTag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SectionTitle({ title }) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SectionTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nMaxButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default MaxButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction HelperText({ label, amt }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>\n          {label}\n        </span>\n        <span style={{ fontSize: 13 }}>\n          {parseFloat(amt).toFixed(5)}\n        </span>\n      </div>\n    );\n  } return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\nHelperText.propTypes = {\n  label: PropTypes.string.isRequired,\n  amt: PropTypes.string.isRequired,\n};\n\nexport default HelperText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\n\nfunction PriceSection({\n  label, amt, symbol = '', forceDisplay = false,\n}) {\n  const amtBN = new BigNumber(amt);\n  if (amtBN.gt(new BigNumber(0)) || forceDisplay) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}>{label}</span>\n        <span style={{ fontSize: 13 }}>{amtBN.toNumber().toFixed(5)}</span>\n        <span style={{ fontSize: 13 }}>{symbol}</span>\n      </div>\n    );\n  }\n  return <div style={{ padding: 3, opacity: 0.5 }} />;\n}\n\nPriceSection.propTypes = {\n  label: PropTypes.string.isRequired,\n  symbol: PropTypes.string,\n  amt: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.instanceOf(BigNumber),\n  ]).isRequired,\n  forceDisplay: PropTypes.bool,\n};\n\nPriceSection.defaultProps = {\n  symbol: '',\n  forceDisplay: false,\n};\n\nexport default PriceSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Comment({ text }) {\n  return (\n    <div style={{ padding: 5, opacity: 0.5 }}>\n      {text}\n    </div>\n  );\n}\n\nComment.propTypes = {\n  text: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n  ]).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport { Button } from '@aragon/ui';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { openVault } from '../../utils/web3';\n\n\nfunction ManageVaultButton({ oToken, owner }) {\n  const history = useHistory();\n\n  const goToManagePage = () => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n\n  return <Button onClick={() => goToManagePage(oToken, owner)} label=\"Manage\" />;\n}\n\nManageVaultButton.propTypes = {\n  oToken: PropTypes.string.isRequired,\n  owner: PropTypes.string.isRequired,\n};\n\n\nfunction OpenVaultButton({ oToken, user, goToMangePage = true }) {\n  const history = useHistory();\n\n  const openAndGoToVault = async () => {\n    await openVault(oToken);\n    if (goToMangePage) history.push(`/manage/${oToken}/${user}`);\n  };\n\n  return (\n    <Button\n      onClick={() => openAndGoToVault(oToken)}\n      label=\"Open\"\n    />\n  );\n}\n\nOpenVaultButton.propTypes = {\n  oToken: PropTypes.string.isRequired,\n  user: PropTypes.string.isRequired,\n  goToMangePage: PropTypes.bool,\n};\n\nOpenVaultButton.defaultProps = {\n  goToMangePage: true,\n};\n\nexport { ManageVaultButton, OpenVaultButton };\n","import styled from 'styled-components';\n\nconst FlexWrapper = styled.div`\n  // display: flex;\n  padding-left: 20%;\n  padding-right: 20%;\n`;\n\nexport default FlexWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, useTheme } from '@aragon/ui';\nimport styled from 'styled-components';\n\nfunction MyCheckBox({ text, checked, onCheck }) {\n  const theme = useTheme();\n  return (\n    <CheckBoxWrapper theme={theme}>\n      <Checkbox\n        checked={checked}\n        onChange={onCheck}\n      />\n      <span style={{ paddingBottom: '5px' }}>\n        {text}\n      </span>\n      <br />\n    </CheckBoxWrapper>\n  );\n}\n\nMyCheckBox.propTypes = {\n  text: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onCheck: PropTypes.func.isRequired,\n};\n\nexport default MyCheckBox;\n\nconst CheckBoxWrapper = styled.div`{\n  padding: 5px;\n  font-size: 14px;\n  color: ${(props) => props.theme.surfaceContentSecondary}\n}`;\n","import ReactGA from 'react-ga';\n\nReactGA.initialize(process.env.REACT_APP_GA_PROJECT_ID);\n\nexport default ReactGA;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, DataView, IdentityBadge, Button, Tabs,\n} from '@aragon/ui';\n\nimport { insurances, eth_options } from '../../constants/options';\nimport { Comment, CheckBox } from '../common';\nimport { getPreference, storePreference } from '../../utils/storage';\n\nimport tracker from '../../utils/tracker';\n\nfunction AllContracts() {\n  tracker.pageview('/options/');\n  const storedOptionTab = getPreference('optionTab', '0');\n  const storedShowExpired = getPreference('showExpired', '0');\n\n  const [tabSelected, setTabSelected] = useState(parseInt(storedOptionTab, 10));\n  const [showExpired, setShowExpired] = useState(storedShowExpired === '1'); // whether to show expired options\n\n  const history = useHistory();\n  const goToToken = (addr) => {\n    history.push(`/option/${addr}`);\n  };\n  return (\n    <>\n      <Header primary=\"All Contracts\" />\n      <div style={{ display: 'flex' }}>\n        <Comment text=\"Choose an option contract to proceed.\" />\n        <div style={{ marginLeft: 'auto' }}>\n          <CheckBox\n            text=\"Expired\"\n            onCheck={(checked) => {\n              storePreference('showExpired', checked ? '1' : '0');\n              setShowExpired(checked);\n            }}\n            checked={showExpired}\n          />\n        </div>\n      </div>\n      <Tabs\n        items={['DeFi Insurance', 'ETH Options']}\n        selected={tabSelected}\n        onChange={(choice) => {\n          setTabSelected(choice);\n          storePreference('optionTab', choice.toString());\n        }}\n      />\n\n      {tabSelected === 0 ? (\n        <DataView\n          fields={['Name', 'Contract', '']}\n          entries={insurances.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n          entriesPerPage={6}\n          renderEntry={({ addr, title }) => [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ]}\n        />\n      ) : (\n        <DataView\n          header=\"Options\"\n          fields={['Name', 'Contract', 'Expiry', '']}\n          entries={eth_options.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n          entriesPerPage={6}\n          renderEntry={({ addr, title, expiry }) => [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            new Date(parseInt(expiry * 1000, 10)).toDateString(),\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ]}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Header, DataView, IdentityBadge, Button,\n} from '@aragon/ui';\nimport { insurances, eth_options } from '../../constants/options';\n\nimport { Comment, CheckBox } from '../common';\nimport { storePreference, getPreference } from '../../utils/storage';\nimport tracker from '../../utils/tracker';\n\nfunction TradeLanding() {\n  const history = useHistory();\n  tracker.pageview('/trade/');\n  const goToTrade = (addr) => {\n    history.push(`/trade/${addr}`);\n  };\n\n  const [showExpired, setShowExpired] = useState(getPreference('showExpired', '0') === '1');\n\n  return (\n    <>\n      <Header primary=\"Trade\" />\n      <div style={{ display: 'flex' }}>\n        <Comment text=\"Buy or Sell DeFi Insurance\" />\n        <div style={{ marginLeft: 'auto' }}>\n          <CheckBox\n            text=\"Expired\"\n            checked={showExpired}\n            onCheck={(checked) => {\n              storePreference('showExpired', checked ? '1' : '0');\n              setShowExpired(checked);\n            }}\n          />\n        </div>\n      </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={insurances.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => [\n          <>{title}</>,\n          <IdentityBadge entity={addr} shorten={false} />,\n          <Button onClick={() => goToTrade(addr)}> Start Trading </Button>,\n        ]}\n      />\n      <br />\n      <Comment text=\"Trade Options\" />\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={eth_options.filter((option) => showExpired || option.expiry * 1000 > Date.now())}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => [\n          <>{title}</>,\n          <IdentityBadge entity={addr} shorten={false} />,\n          <Button onClick={() => goToTrade(addr)}> Start Trading </Button>,\n        ]}\n      />\n    </>\n  );\n}\n\nexport default TradeLanding;\n","import styled from 'styled-components';\n\nexport const BidText = styled.div`{\n  color: #7aae1a;\n  font-size: 17px;\n}`;\n\nexport const AskText = styled.div`{\n  color: #da5750;\n  font-size: 17px;\n}`;\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\nconst web3 = new Web3();\n\n/**\n * Convert 10.999 to 10999000\n * @param {number|string|BigNumber} rawAmt\n * @param {number} decimals\n * @returns {BigNumber}\n */\nexport function toBaseUnitBN(rawAmt, decimals) {\n  const raw = new BigNumber(rawAmt);\n  const base = new BigNumber(10);\n  const decimalsBN = new BigNumber(decimals);\n  return raw.times(base.pow(decimalsBN)).integerValue();\n}\n\n/**\n * Convert 10999000 to 10.999\n * @param {string | number | BigNumber} tokenAmount in base unit\n * @param {number} tokenDecimals\n * @return {BigNumber}\n */\nexport const toTokenUnitsBN = (tokenAmount, tokenDecimals) => {\n  const amt = new BigNumber(tokenAmount);\n  const digits = new BigNumber(10).pow(new BigNumber(tokenDecimals));\n  return amt.div(digits);\n};\n\nexport function formatDigits(num, percision) {\n  return parseFloat(num).toFixed(percision);\n}\n\nexport const fromWei = web3.utils.fromWei;\nexport const toWei = web3.utils.toWei;\n\nexport function timeSince(timeStamp) {\n  const now = new Date();\n  const secondsPast = (now.getTime() - timeStamp) / 1000;\n  if (secondsPast < 60) {\n    return `${parseInt(secondsPast, 10)}s ago`;\n  }\n  if (secondsPast < 3600) {\n    return `${parseInt(secondsPast / 60, 10)}m ago`;\n  }\n  if (secondsPast <= 86400) {\n    return `${parseInt(secondsPast / 3600, 10)}h ago`;\n  }\n  if (secondsPast > 86400) {\n    const ts = new Date(timeStamp);\n    const day = ts.getDate();\n    const month = ts\n      .toDateString()\n      .match(/ [a-zA-Z]*/)[0]\n      .replace(' ', '');\n    const year = ts.getFullYear() === now.getFullYear() ? '' : ` ${ts.getFullYear()}`;\n    return `${day} ${month}${year}`;\n  }\n\n  return timeStamp;\n}\n\nexport function compareVaultRatio(vaultA, vaultB) {\n  const rateA = vaultA.ratio;\n  const rateB = vaultB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n\nexport function compareVaultIssued(vaultA, vaultB) {\n  const amountA = vaultA.oTokensIssued;\n  const amountB = vaultB.oTokensIssued;\n\n  let comparison = 0;\n  if (parseInt(amountA, 10) > parseInt(amountB, 10)) {\n    comparison = -1;\n  } else if (parseInt(amountA, 10) < parseInt(amountB, 10)) {\n    comparison = 1;\n  }\n  return comparison;\n}\n\nexport const isAddress = web3.utils.isAddress;\n","/* eslint-disable no-restricted-syntax */\nimport { assetDataUtils } from '@0x/order-utils';\nimport BigNumber from 'bignumber.js';\nimport { USDC } from '../constants/tokens';\n\nimport { toTokenUnitsBN } from './number';\n\nconst Promise = require('bluebird');\n\nconst endpoint = 'https://api.0x.org/';\n\n/**\n * get orderbook: BASE:QUOTE\n * @param {string} base\n * @param {string} quote\n * @return {Promise<{\n  bids: {total: number, page: number, perPage: number, records: {\n    order: {\n      signature: string,\n      senderAddress: string,\n      makerAddress: string,\n      takerAddress: string,\n      makerFee: string,\n      takerFee: string,\n      makerAssetAmount: string,\n      takerAssetAmount: string,\n      makerAssetData: string,\n      takerAssetData: string,\n      salt: string,\n      exchangeAddress: string,\n      feeRecipientAddress: string,\n      expirationTimeSeconds: string,\n      makerFeeAssetData: string,\n      chainId: number,\n      takerFeeAssetData: string\n    },\n    metaData: {\n      orderHash: string,\n      remainingFillableTakerAssetAmount: string\n    }\n  }[]},\n  asks: {total: number, page: number, perPage: number, records: {\n    order: {\n      signature: string,\n      senderAddress: string,\n      makerAddress: string,\n      takerAddress: string,\n      makerFee: string,\n      takerFee: string,\n      makerAssetAmount: string,\n      takerAssetAmount: string,\n      makerAssetData: string,\n      takerAssetData: string,\n      salt: string,\n      exchangeAddress: string,\n      feeRecipientAddress: string,\n      expirationTimeSeconds: string,\n      makerFeeAssetData: string,\n      chainId: number,\n      takerFeeAssetData: string\n    },\n    metaData: {\n      orderHash: string,\n      remainingFillableTakerAssetAmount: string\n    }\n  }[]}\n}>}\n */\nexport async function getOrderBook(base, quote) {\n  const baseAsset = assetDataUtils.encodeERC20AssetData(base);\n  const quoteAsset = assetDataUtils.encodeERC20AssetData(quote);\n  return request(`sra/v3/orderbook?baseAssetData=${baseAsset}&quoteAssetData=${quoteAsset}&perPage=${100}`);\n}\n\n/**\n * get oToken:WETH stats (v1) for all options\n * @param {Array<{addr:string, decimals:number}>} options\n * @param {{addr:string, decimals:number}} quoteAsset\n * @return {Promise<Arrya< option: address, bestAskPrice: BigNumber, bestAskPrice:BigNumber, bestAsk:{}, bestBid:{} >>}\n */\nexport async function getBasePairAskAndBids(options, quoteAsset) {\n  const bestAskAndBids = await Promise.map(options, async ({ addr: option, decimals }) => {\n    const { asks, bids } = await getOrderBook(option, USDC.addr);\n    let bestAskPrice = 0;\n    let bestBidPrice = 0;\n    let bestAsk; let bestBid;\n    const validAsks = asks.records.filter((record) => isValid(record, decimals));\n    if (validAsks.length > 0) {\n      // const validAsks = asks.records.filter((record) => isValid(record, decimals));\n      const { makerAssetAmount: askTokenAmt, takerAssetAmount: askWETHAmt } = validAsks[0].order;\n      bestAskPrice = toTokenUnitsBN(askWETHAmt, quoteAsset.decimals).div(toTokenUnitsBN(askTokenAmt, decimals));\n      bestAsk = validAsks[0];\n    }\n    const validBids = bids.records.filter((record) => isValid(record, decimals));\n    if (validBids.length > 0) {\n      // const validBids = bids.records.filter((record) => isValid(record, decimals));\n      const { makerAssetAmount: bidWETHAmt, takerAssetAmount: bidTokenAmt } = validBids[0].order;\n      bestBidPrice = toTokenUnitsBN(bidWETHAmt, quoteAsset.decimals).div(toTokenUnitsBN(bidTokenAmt, decimals));\n      bestBid = validBids[0];\n    }\n\n    return {\n      option, bestAskPrice, bestBidPrice, bestAsk, bestBid,\n    };\n  });\n  return bestAskAndBids;\n}\n\n/**\n *\n * @param {string} path\n */\nasync function request(path) {\n  const res = await fetch(`${endpoint}${path}`);\n  return res.json();\n}\n\n/**\n *\n * @param {*} entry\n * @param {*} decimals\n */\nexport const isValid = (entry) => {\n  const notExpired = parseInt(entry.order.expirationTimeSeconds, 10) > Date.now() / 1000;\n  // notDust: not very good\n  const notDust = getOrderFillRatio(entry) < 100;\n  //   .gt(new BigNumber(0.0001).times(new BigNumber(10).pow(takerAssetDecimals)));\n  return notExpired && notDust;\n};\n\n/**\n * Create Order Object\n * @param {string} maker\n * @param {string} makerAsset Bid: quoteAsset, Ask: baseAsset\n * @param {string} takerAsset Bid: baseAsset, Ask: quoteAsset\n * @param {BigNumber} makerAssetAmount\n * @param {BigNumber} takerAssetAmount\n * @param {number} expiry\n */\nexport const createOrder = (maker, makerAsset, takerAsset, makerAssetAmount, takerAssetAmount, expiry) => {\n  const salt = BigNumber.random(20).times(new BigNumber(10).pow(new BigNumber(20))).integerValue().toString(10);\n  const order = {\n    senderAddress: '0x0000000000000000000000000000000000000000',\n    makerAddress: maker,\n    takerAddress: '0x0000000000000000000000000000000000000000',\n    makerFee: '0',\n    takerFee: '0',\n    makerAssetAmount: makerAssetAmount.toString(),\n    takerAssetAmount: takerAssetAmount.toString(),\n    makerAssetData: assetDataUtils.encodeERC20AssetData(makerAsset),\n    takerAssetData: assetDataUtils.encodeERC20AssetData(takerAsset),\n    salt,\n    exchangeAddress: '0x61935cbdd02287b511119ddb11aeb42f1593b7ef',\n    feeRecipientAddress: '0x1000000000000000000000000000000000000011',\n    expirationTimeSeconds: expiry.toString(), // 4/20\n    makerFeeAssetData: '0x',\n    chainId: 1,\n    takerFeeAssetData: '0x',\n  };\n  return order;\n};\n\nexport const broadcastOrders = async (orders) => {\n  const url = `${endpoint}sra/v3/orders`;\n  const res = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(orders),\n  });\n  if (res.status === 200) return;\n  const jsonRes = await res.json();\n  throw jsonRes.validationErrors[0].reason;\n};\n\n/**\n *\n * @param {{}} bid\n * @param {number} makerAssetDecimals WETH decimals\n * @param {number} takerAssetDecimals oTokenDecimals\n */\nexport const getBidPrice = (bid, makerAssetDecimals, takerAssetDecimals) => {\n  const makerAssetAmount = toTokenUnitsBN(bid.order.makerAssetAmount, makerAssetDecimals);\n  const takerAssetAmount = toTokenUnitsBN(bid.order.takerAssetAmount, takerAssetDecimals);\n  return makerAssetAmount.div(takerAssetAmount);\n};\n\n/**\n * Calculate price of an ask order\n * @param {{}} ask\n * @param {number} makerAssetDecimals oToken Decimal\n * @param {number} takerAssetDecimals WETH decimals\n * @description maker want to sell oToken\n * takerAssetAmount 100 weth\n * makerAssetAmount 1 oToken\n */\nexport const getAskPrice = (ask, makerAssetDecimals, takerAssetDecimals) => {\n  const makerAssetAmount = toTokenUnitsBN(ask.order.makerAssetAmount, makerAssetDecimals);\n  const takerAssetAmount = toTokenUnitsBN(ask.order.takerAssetAmount, takerAssetDecimals);\n  return takerAssetAmount.div(makerAssetAmount);\n};\nnew BigNumber()\n  .div(new BigNumber());\n\nexport const getOrderFillRatio = (order) => new BigNumber(100)\n  .minus(new BigNumber(order.metaData.remainingFillableTakerAssetAmount)\n    .div(new BigNumber(order.order.takerAssetAmount))\n    .times(100)).toFixed(2);\n\n/**\n *\n * @param {*} order\n * @return { {remainingTakerAssetAmount: BigNumber, remainingMakerAssetAmount: BigNumber} }\n */\nexport const getRemainingMakerAndTakerAmount = (order) => {\n  const remainingTakerAssetAmount = new BigNumber(order.metaData.remainingFillableTakerAssetAmount);\n  const makerAssetAmountBN = new BigNumber(order.order.makerAssetAmount);\n  const takerAssetAmountBN = new BigNumber(order.order.takerAssetAmount);\n  const remainingMakerAssetAmount = remainingTakerAssetAmount.multipliedBy(makerAssetAmountBN).div(takerAssetAmountBN);\n  return { remainingTakerAssetAmount, remainingMakerAssetAmount };\n};\n\n/**\n *\n * @param {{}[]} orders\n * @return {{totalFillableTakerAmount: BigNumber,totalFillableMakerAmount:BigNumber, fillableTakerAmounts: string[]}}\n */\nexport const getOrdersTotalFillables = (orders) => {\n  const totalFillableTakerAmount = orders\n    .map((order) => new BigNumber(order.metaData.remainingFillableTakerAssetAmount))\n    .reduce((prev, next) => prev.plus(new BigNumber(next)), new BigNumber(0));\n\n  const totalFillableMakerAmount = orders\n    .map((order) => getRemainingMakerAndTakerAmount(order).remainingMakerAssetAmount)\n    .reduce((prev, next) => prev.plus(new BigNumber(next)), new BigNumber(0));\n\n  const fillableTakerAmounts = orders.map((o) => o.metaData.remainingFillableTakerAssetAmount);\n\n  return { totalFillableTakerAmount, totalFillableMakerAmount, fillableTakerAmounts };\n};\n\n/**\n * @return {Promise<{\n * fast:number, fastest:number, safeLow:number, average:number,\n * block_time:number, blockNum:number speed:number,\n * safeLowWait:number, avgWait:number, fastWait:number, fastestWait:number}>}\n */\nexport const getGasPrice = async () => {\n  const url = 'https://ethgasstation.info/json/ethgasAPI.json';\n  const res = await fetch(url);\n  return res.json();\n};\n\n\n/**\n * Return Minimal orders needed for target amount\n * @param {{order: {\n      makerAssetAmount: string,\n      takerAssetAmount: string,\n    }}[]} selectedOrders\n * @param {BigNumber} targetAmount\n * @param {string} targetAsset maker or taker\n */\nexport const findMinOrdersForAmount = (selectedOrders, targetAmount, targetAsset) => {\n  let sum = new BigNumber(0);\n  const requiredOrders = [];\n  // eslint-disable-next-line no-restricted-syntax\n  for (const order of selectedOrders) {\n    const amount = targetAsset === 'maker'\n      ? new BigNumber(order.order.makerAssetAmount)\n      : new BigNumber(order.order.takerAssetAmount);\n    sum = sum.plus(amount);\n    requiredOrders.push(order);\n\n    if (sum.gt(targetAmount)) {\n      break;\n    }\n  }\n  return requiredOrders;\n};\n\n/**\n * @description Loop through selected orders and see what's the exact taker amount\n * and maker amount fulfilling the requirement\n * @param {Array} selectedOrders\n * @param {BigNumber | undefined} targetTakerAstAmount\n * @param {BigNumber | undefined} targetMakerAstAmount\n * @return {{\n *  sumTakerAmount: BigNumber,\n *  sumMakerAmount:BigNumber\n *  takerAmountArray: string[]}}\n */\nexport const getFillAmountsOfOrders = (selectedOrders, targetTakerAstAmount, targetMakerAstAmount) => {\n  // const fillables = getRemainingMakerAndTakerAmount(selectedOrders);\n  let sumTakerAmount = new BigNumber(0);\n  let sumMakerAmount = new BigNumber(0);\n  const takerAmountArray = [];\n  for (const order of selectedOrders) {\n    const {\n      remainingMakerAssetAmount: makerAmount,\n      remainingTakerAssetAmount: takerAmount,\n    } = getRemainingMakerAndTakerAmount(order);\n    if (targetTakerAstAmount !== undefined) {\n      if (sumTakerAmount.plus(takerAmount).lte(targetTakerAstAmount)) {\n        sumTakerAmount = sumTakerAmount.plus(takerAmount);\n        sumMakerAmount = sumMakerAmount.plus(makerAmount);\n        takerAmountArray.push(takerAmount.toString());\n      } else {\n        const takerAmountNeeded = targetTakerAstAmount.minus(sumTakerAmount);\n        const makerAmountNeeded = takerAmountNeeded.div(takerAmount).times(makerAmount);\n        sumTakerAmount = sumTakerAmount.plus(takerAmountNeeded);\n        sumMakerAmount = sumMakerAmount.plus(makerAmountNeeded);\n        takerAmountArray.push(takerAmountNeeded.toString());\n        break;\n      }\n    } else if (targetMakerAstAmount !== undefined) {\n      // user enter mekr ast amount\n      if (sumMakerAmount.plus(makerAmount).lte(targetMakerAstAmount)) {\n        sumTakerAmount = sumTakerAmount.plus(takerAmount);\n        sumMakerAmount = sumMakerAmount.plus(makerAmount);\n        takerAmountArray.push(takerAmount.toString());\n      } else {\n        const makerAmountNeeded = targetMakerAstAmount.minus(sumMakerAmount);\n        const takerAmountNeeded = makerAmountNeeded.div(makerAmount).multipliedBy(takerAmount);\n        sumTakerAmount = sumTakerAmount.plus(takerAmountNeeded);\n        sumMakerAmount = sumMakerAmount.plus(makerAmountNeeded);\n        takerAmountArray.push(takerAmountNeeded.toString());\n        break;\n      }\n    } else {\n      throw new Error('wrong input to CalculateMixRate');\n    }\n  }\n  return { sumTakerAmount, sumMakerAmount, takerAmountArray };\n};\n","import PropTypes from 'prop-types';\n\nexport const vault = PropTypes.shape({\n  owner: PropTypes.string,\n  oTokensIssued: PropTypes.string,\n  collateral: PropTypes.string,\n  underlying: PropTypes.string,\n});\n\n// export const detailVault = PropTypes.shape({\n//   oTokensIssued: PropTypes.string,\n//   collateral: PropTypes.string,\n// });\n\nexport const token = PropTypes.shape({\n  addr: PropTypes.string.isRequired,\n  decimals: PropTypes.number.isRequired,\n  symbol: PropTypes.string.isRequired,\n});\n\nexport const option = PropTypes.shape({\n  addr: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  symbol: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  decimals: PropTypes.number.isRequired,\n  oracle: PropTypes.string.isRequired,\n  collateral: token.isRequired,\n  underlying: token.isRequired,\n  strike: token.isRequired,\n  strikePrice: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  exchange: PropTypes.string.isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n  expiry: PropTypes.number.isRequired,\n});\n\nexport const order = PropTypes.shape({\n  order: PropTypes.shape({\n    signature: PropTypes.string.isRequired,\n    senderAddress: PropTypes.string.isRequired,\n    makerAddress: PropTypes.string.isRequired,\n    takerAddress: PropTypes.string.isRequired,\n    makerFee: PropTypes.string.isRequired,\n    takerFee: PropTypes.string.isRequired,\n    makerAssetAmount: PropTypes.string.isRequired,\n    takerAssetAmount: PropTypes.string.isRequired,\n    makerAssetData: PropTypes.string.isRequired,\n    takerAssetData: PropTypes.string.isRequired,\n    salt: PropTypes.string.isRequired,\n    exchangeAddress: PropTypes.string.isRequired,\n    feeRecipientAddress: PropTypes.string.isRequired,\n    expirationTimeSeconds: PropTypes.string.isRequired,\n    makerFeeAssetData: PropTypes.string.isRequired,\n    chainId: PropTypes.number.isRequired,\n    takerFeeAssetData: PropTypes.string.isRequired,\n  }),\n  metaData: PropTypes.shape({\n    orderHash: PropTypes.string.isRequired,\n    remainingFillableTakerAssetAmount: PropTypes.string.isRequired,\n  }),\n});\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataView, DropDown, LinkBase, Radio, Header,\n} from '@aragon/ui';\nimport { AskText, BidText } from './styled';\n\nimport { SectionTitle } from '../common';\n\nimport { getBasePairAskAndBids } from '../../utils/0x';\nimport { option as OptionType, token as TokenType } from '../types';\n\nfunction OptionBoard({\n  calls, puts, baseAsset, quoteAsset, setBaseAsset, setTradeType, setSelectedOrders,\n}) {\n  const [putStats, setPutStats] = useState([]);\n  const [callStats, setCallStats] = useState([]);\n\n  const [selectedExpiryIdx, setExpiryIdx] = useState(0);\n\n  const optionsByDate = groupByDate(puts, calls, putStats, callStats);\n\n  // get option status\n  useEffect(() => {\n    let isCancelled = false;\n    const updateBoardStats = async () => {\n      // console.log('update board');\n      const [callData, putData] = await Promise.all([\n        getBasePairAskAndBids(calls, quoteAsset),\n        getBasePairAskAndBids(puts, quoteAsset),\n      ]);\n\n      // console.log(putData);\n\n      if (!isCancelled) {\n        setCallStats(callData);\n        setPutStats(putData);\n      }\n    };\n    updateBoardStats();\n    const id = setInterval(updateBoardStats, 5000);\n\n    return () => {\n      clearInterval(id);\n      isCancelled = true;\n    };\n  }, [calls, puts, quoteAsset]);\n\n  return (\n    <div>\n      <Header primary=\"ETH Option Trading\" />\n      {/* <div style={{ display: 'flex' }}> */}\n      <DropDown\n        items={optionsByDate.map((item) => item.expiryText)}\n        selected={selectedExpiryIdx}\n        onChange={setExpiryIdx}\n      />\n      {/* </div> */}\n      <div style={{ display: 'flex', padding: '0px' }}>\n        <SectionTitle title=\"Calls\" />\n        <div\n          style={{\n            marginLeft: 'auto',\n            marginRight: 0,\n          }}\n        >\n          <SectionTitle title=\"Puts\" />\n        </div>\n      </div>\n      {/* Calls */}\n      <DataView\n        mode=\"table\"\n        fields={[\n\n          { label: 'last', align: 'start' },\n          { label: 'bid', align: 'start' },\n          { label: 'ask', align: 'start' },\n          { label: ' ', align: 'start' },\n          { label: 'strike', align: 'start' },\n          { label: ' ', align: 'start' },\n          { label: 'last', align: 'start' },\n          { label: 'bid', align: 'start' },\n          { label: 'ask', align: 'start' },\n\n        ]}\n        entries={optionsByDate[selectedExpiryIdx] ? optionsByDate[selectedExpiryIdx].entry : []}\n        renderEntry={({\n          call,\n          put,\n          putDetail,\n          callDetail,\n          strikePrice,\n        }) => {\n          const lastCallPrice = '-';\n          let callAsk = '-';\n          let callBid = '-';\n          let callOnclick = () => {};\n          let callBidOnclick = () => {};\n          let callAskOnclick = () => {};\n\n          const lastPutPrice = '-';\n          let putAsk = '-';\n          let putBid = '-';\n          let putOnclick = () => {};\n          let putBidOnclick = () => {};\n          let putAskOnclick = () => {};\n\n          if (callDetail !== undefined) {\n            // have call option has this strike price\n            callAsk = callDetail.bestAskPrice.toFixed(6);\n            callBid = callDetail.bestBidPrice.toFixed(6);\n            callOnclick = () => { setBaseAsset(call); };\n\n            callBidOnclick = () => {\n              setTradeType('sell');\n              setBaseAsset(call);\n              setSelectedOrders(callDetail.bestBid ? [callDetail.bestBid] : []);\n            };\n            callAskOnclick = () => {\n              setTradeType('buy');\n              setBaseAsset(call);\n              setSelectedOrders(callDetail.bestAsk ? [callDetail.bestAsk] : []);\n            };\n          }\n          if (putDetail !== undefined) {\n            // has put option has this strike price\n            putAsk = putDetail.bestAskPrice.toFixed(6);\n            putBid = putDetail.bestBidPrice.toFixed(6);\n            putOnclick = () => { setBaseAsset(put); };\n\n            putBidOnclick = () => {\n              setBaseAsset(put);\n              setTradeType('sell');\n              setSelectedOrders(putDetail.bestBid ? [putDetail.bestBid] : []);\n            };\n            putAskOnclick = () => {\n              setBaseAsset(put);\n              setTradeType('buy');\n              setSelectedOrders(putDetail.bestAsk ? [putDetail.bestAsk] : []);\n            };\n          }\n\n          return [\n            <Cell onClick={callOnclick} text={lastCallPrice} type=\"normal\" />,\n            <Cell onClick={callBidOnclick} text={callBid} type=\"bid\" />,\n            <Cell onClick={callAskOnclick} text={callAsk} type=\"ask\" />,\n            <div style={{ width: '30px' }}>\n              <Radio\n                disabled={!call}\n                onChange={() => setBaseAsset(call)}\n                checked={call && call.addr === baseAsset.addr}\n              />\n            </div>,\n            <div style={{ fontSize: 20, width: '50px', padding: '10px' }}>{strikePrice}</div>,\n            <div style={{ width: '30px' }}>\n              <Radio\n                disabled={!put}\n                onChange={() => (setBaseAsset(put))}\n                checked={put && put.addr === baseAsset.addr}\n              />\n            </div>,\n            <Cell onClick={putOnclick} text={lastPutPrice} type=\"normal\" />,\n            <Cell onClick={putBidOnclick} text={putBid} type=\"bid\" />,\n            <Cell onClick={putAskOnclick} text={putAsk} type=\"ask\" />,\n\n          ];\n        }}\n      />\n    </div>\n  );\n}\n\nOptionBoard.propTypes = {\n  calls: PropTypes.arrayOf(OptionType).isRequired,\n  puts: PropTypes.arrayOf(OptionType).isRequired,\n  baseAsset: TokenType.isRequired,\n  quoteAsset: TokenType.isRequired,\n  setBaseAsset: PropTypes.func.isRequired,\n  setTradeType: PropTypes.func.isRequired,\n  setSelectedOrders: PropTypes.func.isRequired,\n};\n\nexport default OptionBoard;\n\n/**\n *\n * @param {Array<{strikePriceInUSD:number, addr:string, expiry:number}>} puts\n * @param {Array<{strikePriceInUSD:number, addr:string, expiry:number}>} calls\n * @param {Array<{option: string, bestBidPrice: BigNumber, bestAskPrice: BigNumber}>} putStats\n * @param {Array<{option: string, bestBidPrice: BigNumber, bestAskPrice: BigNumber}>} callStats\n * @returns {} key: expiry in string, value: array of { call, put, callDetail, putDetail, strikePrice}\n */\nfunction groupByDate(puts, calls, putStats, callStats) {\n  const result = [];\n  const allOptions = puts.concat(calls).filter((option) => option.expiry > Date.now() / 1000);\n  const distinctExpirys = [...new Set(allOptions.map((option) => option.expiry))];\n\n  for (const expiry of distinctExpirys) {\n    const optionsExpiresThisDay = allOptions.filter((o) => o.expiry === expiry);\n    const strikePrices = [\n      ...new Set(optionsExpiresThisDay.map((option) => option.strikePriceInUSD)),\n    ];\n\n    // const allStrikesForThisDay = {};\n    const entries = [];\n    for (const strikePrice of strikePrices) {\n      const put = puts.find((o) => o.strikePriceInUSD === strikePrice && o.expiry === expiry);\n      const call = calls.find((o) => o.strikePriceInUSD === strikePrice && o.expiry === expiry);\n      const putDetail = put ? putStats.find((p) => p.option === put.addr) : undefined;\n      const callDetail = call ? callStats.find((c) => c.option === call.addr) : undefined;\n      entries.push({\n        strikePrice,\n        call,\n        put,\n        callDetail,\n        putDetail,\n      });\n    }\n    entries.sort((a, b) => (a.strikePrice > b.strikePrice ? 1 : -1));\n    const expiryText = new Date(expiry * 1000).toDateString();\n    result.push({\n      expiryText,\n      entry: entries,\n    });\n    // result[expiryKey] = entryRow;\n  }\n  return result;\n}\n\nfunction Cell({\n  onClick, text, type,\n}) {\n  return (\n    <LinkBase onClick={onClick}>\n      <div style={{ width: '80px', textAlign: 'center' }}>\n        { type === 'bid' ? (\n          <BidText>\n            {' '}\n            {text}\n            {' '}\n          </BidText>\n        ) : type === 'ask' ? (\n          <AskText>\n            {' '}\n            {text}\n            {' '}\n          </AskText>\n        ) : (\n          <div>\n            {' '}\n            {text}\n            {' '}\n          </div>\n        ) }\n      </div>\n    </LinkBase>\n  );\n}\n\nCell.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DataView, Timer, Button,\n} from '@aragon/ui';\n\nimport { cancelOrders } from '../../utils/web3';\n\n// import BigNumber from 'bignumber.js';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { order as OrderType, option as OptionType } from '../types';\nimport { AskText, BidText } from './styled';\n// import { SectionTitle } from '../common';\nimport * as zeroXUtil from '../../utils/0x';\n\nfunction MyOrders({\n  asks, bids, option, user, quoteAsset,\n}) {\n  const [myOrdersPage, setMyOrdersPage] = useState(0);\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const userAsks = asks\n    .filter((o) => o.order.makerAddress === user.toLowerCase())\n    .map((o) => {\n      // eslint-disable-next-line no-param-reassign\n      o.type = 'Ask';\n      return o;\n    });\n  const userBids = bids\n    .filter((o) => o.order.makerAddress === user.toLowerCase())\n    .map((o) => {\n      // eslint-disable-next-line no-param-reassign\n      o.type = 'Bid';\n      return o;\n    });\n\n  return (\n    <>\n      <DataView\n        entriesPerPage={4}\n        statusEmpty={<div>No Open Orders</div>}\n        page={myOrdersPage}\n        onPageChange={setMyOrdersPage}\n        onSelectEntries={setSelectedOrders}\n        fields={['digest', 'type', 'price', 'amount', 'filled', 'expiration', '']}\n        entries={userAsks.concat(userBids)\n          .sort((a, b) => (a.order.expirationTimeSeconds > b.order.expirationTimeSeconds ? 1 : -1))}\n        renderEntry={(order) => [// call, put, callDetail, putDetail, strikePrice\n          order.metaData.orderHash.slice(2, 8),\n          order.type === 'Ask' ? <AskText>{order.type}</AskText> : <BidText>{order.type}</BidText>,\n          order.type === 'Ask'\n            ? zeroXUtil.getAskPrice(order, option.decimals, quoteAsset.decimals).toFixed(6)\n            : zeroXUtil.getBidPrice(order, quoteAsset.decimals, option.decimals).toFixed(6),\n          order.type === 'Ask'\n            ? toTokenUnitsBN(order.order.makerAssetAmount, option.decimals).toFixed(3)\n            : toTokenUnitsBN(order.order.takerAssetAmount, option.decimals).toFixed(3),\n          `${zeroXUtil.getOrderFillRatio(order)}%`,\n          <Timer end={new Date(order.order.expirationTimeSeconds * 1000)} />,\n\n          selectedOrders.length > 0\n            ? (\n              <Button onClick={() => {\n                cancelOrders(selectedOrders.map((o) => o.order));\n              }}\n              >\n                Cancel Selected\n              </Button>\n            )\n            : (\n              <Button onClick={() => {\n                cancelOrders([order.order]);\n              }}\n              >\n                Cancel Order\n              </Button>\n            ),\n        ]}\n      />\n    </>\n  );\n}\n\nMyOrders.propTypes = {\n  asks: PropTypes.arrayOf(OrderType).isRequired,\n  bids: PropTypes.arrayOf(OrderType).isRequired,\n  user: PropTypes.string.isRequired,\n  option: OptionType.isRequired,\n  quoteAsset: PropTypes.shape({\n    decimals: PropTypes.number.isRequired,\n    addr: PropTypes.string.isRequired,\n    symbol: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MyOrders;\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { DataView, Timer } from '@aragon/ui';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { order as OrderType, option as OptionType, token as TokenType } from '../types';\nimport { AskText, BidText } from './styled';\nimport * as zeroXUtil from '../../utils/0x';\n\nfunction OrderBook({\n  asks, bids, option, quoteAsset, setTradeType, setSelectedOrders, selectedOrders, tradeType,\n}) {\n  const [askPage, setAskPage] = useState(0);\n  const [bidPage, setBidPage] = useState(0);\n\n  const [askSelectedIndexs, setAskSelectedIndexes] = useState([]);\n  const [bidSelectedIndexs, setBidSelectedIndexes] = useState([]);\n\n  const onSelectAskEntry = (entries, indexes) => {\n    setTradeType('buy'); // Filling ask orders is a bid\n    setSelectedOrders(entries);\n    setAskSelectedIndexes(indexes);\n  };\n\n  const onSelectBidEntry = (entries, indexes) => {\n    setTradeType('sell'); // Filling bid orders is a ask\n    setSelectedOrders(entries);\n    setBidSelectedIndexes(indexes);\n  };\n\n  // everytime tradeType or selectedOrders changed, the selection is updated\n  useEffect(() => {\n    if (tradeType === 'buy') { // user select and ask order\n      setBidSelectedIndexes([]); // reset bid selections\n      const selectedIdxs = [];\n      for (let i = 0; i < asks.length; i += 1) {\n        if (selectedOrders.map((o) => o.metaData.orderHash).includes(asks[i].metaData.orderHash)) {\n          selectedIdxs.push(i);\n        }\n      }\n      setAskSelectedIndexes(selectedIdxs);\n    } else {\n      setAskSelectedIndexes([]);\n      const selectedIdxs = [];\n      for (let i = 0; i < bids.length; i += 1) {\n        if (selectedOrders.map((o) => o.metaData.orderHash).includes(bids[i].metaData.orderHash)) {\n          selectedIdxs.push(i);\n        }\n      }\n      setBidSelectedIndexes(selectedIdxs);\n    }\n  }, [selectedOrders, tradeType, asks, bids]);\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '50%' }}>\n          <DataView\n            statusEmpty={<div>No Sell Orders</div>}\n            entriesPerPage={4}\n            page={askPage}\n            onPageChange={setAskPage}\n            entries={asks}\n            onSelectEntries={onSelectAskEntry}\n            // If other operation reset selected orders, should change selected accordingly\n            selection={askSelectedIndexs}\n            renderSelectionCount={(x) => `${x} Orders Selected`}\n            fields={['price', 'amount', 'filled', 'expiration']}\n            renderEntry={(order) => [\n              <AskText>{zeroXUtil.getAskPrice(order, option.decimals, quoteAsset.decimals).toFixed(6)}</AskText>,\n              toTokenUnitsBN(order.order.makerAssetAmount, option.decimals).toFixed(3),\n              `${zeroXUtil.getOrderFillRatio(order)}%`,\n              <Timer format=\"hms\" showIcon end={new Date(order.order.expirationTimeSeconds * 1000)} />,\n            ]}\n          />\n        </div>\n        <div style={{ width: '50%' }}>\n          <DataView\n            statusEmpty={<div>No Buy Orders</div>}\n            entriesPerPage={4}\n            page={bidPage}\n            onPageChange={setBidPage}\n            entries={bids}\n            onSelectEntries={onSelectBidEntry}\n            selection={bidSelectedIndexs}\n            renderSelectionCount={(x) => `${x} Orders Selected`}\n            fields={['price', 'amount', 'filled', 'expiration']}\n            renderEntry={(order) => [\n              <BidText>{zeroXUtil.getBidPrice(order, quoteAsset.decimals, option.decimals).toFixed(6)}</BidText>,\n              toTokenUnitsBN(order.order.takerAssetAmount, option.decimals).toFixed(3),\n              `${zeroXUtil.getOrderFillRatio(order)}%`,\n              <Timer format=\"hms\" showIcon end={new Date(order.order.expirationTimeSeconds * 1000)} />,\n            ]}\n          />\n        </div>\n      </div>\n\n\n    </>\n  );\n}\n\nOrderBook.propTypes = {\n  asks: PropTypes.arrayOf(OrderType).isRequired,\n  bids: PropTypes.arrayOf(OrderType).isRequired,\n  option: OptionType.isRequired,\n  quoteAsset: TokenType.isRequired,\n  tradeType: PropTypes.string.isRequired,\n  selectedOrders: PropTypes.arrayOf(OrderType).isRequired,\n  setTradeType: PropTypes.func.isRequired,\n  setSelectedOrders: PropTypes.func.isRequired,\n};\n\nexport default OrderBook;\n","/* eslint-disable no-restricted-syntax */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs } from '@aragon/ui';\n\nimport MyOrders from './MyOrders';\nimport OrderBook from './OrderBook';\n\nimport { order as OrderType, option as OptionType } from '../types';\n\nfunction Orders({\n  asks, bids, option, user, quoteAsset,\n  tradeType,\n  selectedOrders,\n  setTradeType,\n  setSelectedOrders,\n}) {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  return (\n    <>\n      <Tabs\n        items={['OrderBook', 'My Orders']}\n        selected={selectedTab}\n        onChange={setSelectedTab}\n      />\n      { selectedTab === 0\n        ? (\n          <OrderBook\n            asks={asks}\n            bids={bids}\n            option={option}\n            quoteAsset={quoteAsset}\n            tradeType={tradeType}\n            setTradeType={setTradeType}\n            selectedOrders={selectedOrders}\n            setSelectedOrders={setSelectedOrders}\n          />\n        )\n        : (\n          <MyOrders asks={asks} bids={bids} option={option} user={user} quoteAsset={quoteAsset} />\n        )}\n\n    </>\n  );\n}\n\nOrders.propTypes = {\n  asks: PropTypes.arrayOf(OrderType).isRequired,\n  bids: PropTypes.arrayOf(OrderType).isRequired,\n  user: PropTypes.string.isRequired,\n  option: OptionType.isRequired,\n  quoteAsset: PropTypes.shape({\n    decimals: PropTypes.number.isRequired,\n    addr: PropTypes.string.isRequired,\n    symbol: PropTypes.string.isRequired,\n  }).isRequired,\n  tradeType: PropTypes.string.isRequired,\n  selectedOrders: PropTypes.arrayOf(OrderType).isRequired,\n  setTradeType: PropTypes.func.isRequired,\n  setSelectedOrders: PropTypes.func.isRequired,\n};\n\nexport default Orders;\n","/* eslint-disable consistent-return */\nimport React, { useState, useEffect } from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\n\nimport {\n  SidePanel, Button, TextInput, useTheme,\n} from '@aragon/ui';\nimport { BalanceBlock, SectionTitle, Comment } from '../common';\n\nimport { wrapETH, unwrapETH } from '../../utils/web3';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { getBalance } from '../../utils/infura';\n\nfunction WrapETHModal({\n  user, wethBalance, opened, setOpen, helperText, setHelperText,\n}) {\n  const theme = useTheme();\n  const [wrapAmount, setWrapAmount] = useState(BigNumber(0));\n  const [unWrapAmount, setUnwrapAmount] = useState(BigNumber(0));\n\n  const [ethBalance, setETHBalance] = useState(BigNumber(0));\n\n  const onChangeWrapAmount = (event) => {\n    const amount = event.target.value;\n    if (!amount) {\n      setWrapAmount(new BigNumber(0));\n      return;\n    }\n    setWrapAmount(new BigNumber(amount));\n  };\n\n  const onChangeUnWrapAmount = (event) => {\n    const amount = event.target.value;\n    if (!amount) {\n      setUnwrapAmount(new BigNumber(0));\n      return;\n    }\n    setUnwrapAmount(new BigNumber(amount));\n  };\n\n  useEffect(() => {\n    if (!opened || !user) return;\n    let isCancelled = false;\n\n    const updateETHBalance = async () => {\n      if (user === '') return;\n      const quoteBalance = await getBalance(user);\n      if (!isCancelled) {\n        setETHBalance(new BigNumber(quoteBalance));\n      }\n    };\n    updateETHBalance();\n    const idETHBalance = setInterval(updateETHBalance, 20000);\n    return () => {\n      isCancelled = true;\n      clearInterval(idETHBalance);\n    };\n  }, [opened, user]);\n\n  return (\n    <SidePanel\n      title=\"\"\n      opened={opened}\n      onClose={() => {\n        setOpen(false);\n        setHelperText('');\n      }}\n    >\n      <br />\n\n      <div style={{ color: theme.warning }}>\n        {helperText}\n      </div>\n\n      <SectionTitle title=\"Wrap WETH\" />\n      <div style={{ padding: '2%' }}>\n        <BalanceBlock asset=\"Your ETH Balance\" balance={ethBalance.toNumber()} />\n      </div>\n\n      {/* </div> */}\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '60%' }}>\n          <TextInput wide type=\"number\" value={wrapAmount.toNumber()} onChange={onChangeWrapAmount} />\n        </div>\n        <div style={{ width: '30%' }}>\n          <Button\n            onClick={() => {\n              wrapETH(toBaseUnitBN(wrapAmount, 18).toString());\n            }}\n            label=\"Wrap\"\n          />\n        </div>\n      </div>\n\n      <Comment text=\"After you wrap your ETH to WETH, you can unwrap them back to ETH anytime.\" />\n      <br />\n      <SectionTitle title=\"Unwrap WETH\" />\n      <div style={{ padding: '2%' }}>\n        <BalanceBlock asset=\"Your WETH Balance\" balance={toTokenUnitsBN(wethBalance, 18).toNumber()} />\n      </div>\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '60%' }}>\n          <TextInput wide type=\"number\" value={unWrapAmount.toNumber()} onChange={onChangeUnWrapAmount} />\n        </div>\n        <div style={{ width: '30%' }}>\n          <Button\n            onClick={() => {\n              unwrapETH(toBaseUnitBN(unWrapAmount, 18).toString());\n            }}\n            label=\"Unwrap\"\n          />\n        </div>\n      </div>\n    </SidePanel>\n  );\n}\n\n\nWrapETHModal.propTypes = {\n  user: PropTypes.string.isRequired,\n  helperText: PropTypes.string.isRequired,\n  setHelperText: PropTypes.func.isRequired,\n  wethBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  opened: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n};\n\nexport default WrapETHModal;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, useTheme, TextInput, Help, useToast, LinkBase,\n} from '@aragon/ui';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport {\n  createOrder, broadcastOrders, getOrdersTotalFillables, getGasPrice, getFillAmountsOfOrders,\n} from '../../utils/0x';\nimport { signOrder, fillOrders, approve } from '../../utils/web3';\nimport { toTokenUnitsBN, toBaseUnitBN } from '../../utils/number';\nimport WrapETHPanel from './WrapETHSidePanel';\n\nimport {\n  // vault as VaultType,\n  order as OrderType,\n  token as TokenType,\n} from '../types';\nimport { getAllowance } from '../../utils/infura';\nimport { ZeroX_ERC20Proxy } from '../../constants/contracts';\n\nimport { WETH } from '../../constants/tokens';\n\n/**\n *\n * @param {{\n * baseAsset: {addr:string, decimals: number, symbol:string}\n * quoteAsset: {addr:string, decimals: number, symbol:string}\n * collateral: {addr:string, decimals: number, symbol:string}\n * }} param0\n */\nfunction BuyAndSell({\n  user,\n  tradeType, // ask || bid\n  selectedOrders, //\n  setTradeType,\n  setSelectedOrders,\n\n  // vault,\n  baseAsset,\n  quoteAsset,\n  // collateral,\n\n  // ethBalance, // in ETH (0.5)\n  baseAssetBalance, // in base uinit\n  quoteAssetBalance, // in base Unit\n}) {\n  const theme = useTheme();\n  const toast = useToast();\n\n  const [quoteAssetAmount, setQuoteAssetAmount] = useState(new BigNumber(0));\n  const [fillingtakerAmounts, setFillingTakerAmounts] = useState([]);\n\n  // these two add up to total oToken displayed on the Amount section\n  const [baseAmountToFill, setBaseAmountToFill] = useState(new BigNumber(0));\n  const [baseAmountToCreate, setBaseAmountToCreate] = useState(new BigNumber(0));\n\n  const [rate, setRate] = useState(new BigNumber(0));\n\n  // gasPrice is needed to calculate 0x fee\n  const [fastGasPrice, setFastGasPrice] = useState(new BigNumber(5)); //  in GWei\n\n  // const quoteAssetAmount = price.times(baseAssetAmount);\n\n  const [selectedOrderFillables, setSelectedOrdersFillable] = useState({\n    totalFillableMakerAmount: new BigNumber(0),\n    totalFillableTakerAmount: new BigNumber(0),\n  });\n\n  const [isFillingAndCreating, setIsFillingAndCreating] = useState(false);\n\n  const hasSelectedOrders = selectedOrders.length > 0;\n  const feeInETH = hasSelectedOrders\n    ? fastGasPrice.times(new BigNumber(selectedOrders.length)).times(new BigNumber(0.00015))\n    : new BigNumber(0);\n\n  // for weth side panel\n  const [panelOpend, setPanelOpended] = useState(false);\n  const [wethPanelHelperText, setPanelHelperText] = useState('');\n\n  // expiry button\n  const [activeButton, setActiveButton] = useState(0);\n  const expirySeconds = activeButton === 0\n    ? 3600 : (activeButton === 1 ? 86400 : 604800);\n  const expiry = parseInt(Date.now() / 1000 + expirySeconds, 10);\n\n\n  // update gasPrice\n  useEffect(() => {\n    let isCanceled = false;\n    async function fetchGasPrice() {\n      const { fast } = await getGasPrice();\n      if (!isCanceled) setFastGasPrice(new BigNumber(fast).div(new BigNumber(10)));\n    }\n    fetchGasPrice();\n    const id = setInterval(fetchGasPrice, 30000);\n\n    return () => {\n      isCanceled = true;\n      clearInterval(id);\n    };\n  }, []);\n\n  // when selected orders changed\n  useEffect(() => {\n    // This update only take effect when user has selected orders\n    if (selectedOrders.length === 0) {\n      setBaseAmountToFill(new BigNumber(0));\n      return;\n    }\n    setIsFillingAndCreating(false);\n\n    const selectedFillables = getOrdersTotalFillables(selectedOrders);\n    setFillingTakerAmounts(selectedFillables.fillableTakerAmounts);\n\n    let baseMaxFillingAmount = new BigNumber(0);\n    let quoteMaxFillingAmount = new BigNumber(0);\n    // Step 1. set oToken and WETH amount to order total\n    if (tradeType === 'buy') {\n      // ask: takerAsset: weth, makerAsset: oToken\n      baseMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableMakerAmount, baseAsset.decimals);\n      quoteMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableTakerAmount, quoteAsset.decimals);\n    } else {\n      // comming bids: takerAsset: oToken, makerAsset: weth\n      baseMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableTakerAmount, baseAsset.decimals);\n      quoteMaxFillingAmount = toTokenUnitsBN(selectedFillables.totalFillableMakerAmount, quoteAsset.decimals);\n    }\n    setBaseAmountToFill(baseMaxFillingAmount);\n    setBaseAmountToCreate(new BigNumber(0));\n    // setBaseAssetAmount(baseMaxFillingAmount);\n    setQuoteAssetAmount(quoteMaxFillingAmount);\n    setSelectedOrdersFillable(selectedFillables);\n\n    // Change Price according to total base / quote\n    const aggregateRate = quoteMaxFillingAmount.div(baseMaxFillingAmount);\n    setRate(aggregateRate);\n  }, [selectedOrders, baseAsset, tradeType, quoteAsset]);\n\n\n  const onChangeBaseAmount = (amount) => {\n    // 1. Update amount field\n    if (!amount) {\n      setBaseAmountToFill(new BigNumber(0));\n      setBaseAmountToCreate(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(amount);\n    if (amountBN.lte(0)) {\n      setBaseAmountToFill(new BigNumber(0));\n      setBaseAmountToCreate(new BigNumber(0));\n      return;\n    }\n\n    // If is filling Mode\n    if (hasSelectedOrders) {\n      const totalOtokenInSelectedOrders = tradeType === 'buy'\n        ? toTokenUnitsBN(selectedOrderFillables.totalFillableMakerAmount, baseAsset.decimals) // oToken is the maker asset of ask orders\n        : toTokenUnitsBN(selectedOrderFillables.totalFillableTakerAmount, baseAsset.decimals);\n\n      // user is filling lower than all orders combined\n      if (totalOtokenInSelectedOrders.gte(amountBN)) {\n        // [FILLING MODE]\n        console.log('FILLING MODE');\n        setIsFillingAndCreating(false);\n        setBaseAmountToFill(amountBN);\n        setBaseAmountToCreate(new BigNumber(0));\n\n        // Update Rates\n        const baseAmountTotal = toBaseUnitBN(amountBN, baseAsset.decimals);\n\n        let quoteAmountTotal;\n        if (tradeType === 'buy') {\n          const fillingAmounts = getFillAmountsOfOrders(selectedOrders, undefined, baseAmountTotal);\n          quoteAmountTotal = fillingAmounts.sumTakerAmount;\n          setFillingTakerAmounts(fillingAmounts.takerAmountArray);\n        } else {\n          const fillingAmounts = getFillAmountsOfOrders(selectedOrders, baseAmountTotal, undefined);\n          quoteAmountTotal = fillingAmounts.sumMakerAmount;\n          setFillingTakerAmounts(fillingAmounts.takerAmountArray); // only need to record taker amount array\n        }\n\n        const quoteAmountTk = toTokenUnitsBN(quoteAmountTotal, quoteAsset.decimals);\n        setRate(quoteAmountTk.div(amountBN));\n        setQuoteAssetAmount(quoteAmountTk);\n      } else {\n        // [CREATING AND FILLING MODE]\n        console.log('CREATING + FILLING');\n        setIsFillingAndCreating(true);\n\n        setBaseAmountToFill(totalOtokenInSelectedOrders);\n        setBaseAmountToCreate(amountBN.minus(totalOtokenInSelectedOrders));\n\n        // Fix rate at current, dont have to change.\n        const quoteAmount = rate.times(amountBN);\n        setQuoteAssetAmount(quoteAmount);\n      }\n    } else {\n      // [CREATING MODE]\n      console.log('CREATING');\n      setBaseAmountToFill(new BigNumber(0));\n      setBaseAmountToCreate(amountBN);\n\n      // create mode wont change rate when put in amount\n      const quoteAmount = rate.times(amountBN);\n      setQuoteAssetAmount(quoteAmount);\n    }\n  };\n\n  const onChangeRate = (newrate) => {\n    if (!newrate) {\n      setRate(new BigNumber(0));\n      return;\n    }\n    const rateBN = new BigNumber(newrate);\n    setRate(rateBN);\n\n    // adjusting rate will not be filling orders anymore\n    if (hasSelectedOrders) {\n      setSelectedOrders([]);\n    }\n\n    // enter create mode.\n    const quoteAmount = rateBN.times((baseAmountToCreate));\n    setQuoteAssetAmount(quoteAmount);\n  };\n\n  const checkAndAllowQuoteAsset = async (quoteAssetAmountBase) => {\n    // const quoteAssetInBaseUnit = toBaseUnitBN(quoteAssetAmount, quoteAsset.decimals);\n    const quoteAllowance = new BigNumber(await getAllowance(quoteAsset.addr, user, ZeroX_ERC20Proxy));\n    if (quoteAllowance.lt(quoteAssetAmountBase)) {\n      toast(`Please approve 0x to spend your oToken ${quoteAsset.symbol}`);\n      await approve(quoteAsset.addr, ZeroX_ERC20Proxy);\n    }\n  };\n\n  const checkAndAllowBaseAsset = async (baseAssetAmountBase) => {\n    const tokenAllowance = new BigNumber(await getAllowance(baseAsset.addr, user, ZeroX_ERC20Proxy));\n    if (tokenAllowance.lt(baseAssetAmountBase)) {\n      toast(`Please approve 0x to spend your oToken ${baseAsset.symbol}`);\n      await approve(baseAsset.addr, ZeroX_ERC20Proxy);\n    }\n  };\n\n  const clickCreateOrder = async () => {\n    if (user === '') {\n      toast('Please connect wallet first');\n      return;\n    }\n    let order;\n    if (tradeType === 'buy') {\n      const quoteAssetInBaseUnit = toBaseUnitBN(baseAmountToCreate.times(rate), quoteAsset.decimals);\n      // check quote asset balance\n      if (quoteAssetInBaseUnit.gt(quoteAssetBalance)) {\n        if (quoteAsset.addr === WETH.addr) {\n          setPanelHelperText('You dont have enough WETH to make this order, you may need to wrap some ETH into WETH.');\n          setPanelOpended(true);\n          return;\n        }\n        toast(`Insufficient ${quoteAsset.symbol}`);\n      }\n\n      // check quote asset allowance\n      await checkAndAllowQuoteAsset(quoteAssetInBaseUnit);\n\n      // create order\n      order = createOrder(\n        user,\n        quoteAsset.addr,\n        baseAsset.addr,\n        quoteAssetInBaseUnit,\n        toBaseUnitBN(baseAmountToCreate, baseAsset.decimals),\n        expiry,\n      );\n    } else {\n      const baseAssetInBaseUnit = toBaseUnitBN(baseAmountToCreate, baseAsset.decimals);\n      await checkAndAllowBaseAsset(baseAssetInBaseUnit);\n\n      order = createOrder(\n        user,\n        baseAsset.addr,\n        quoteAsset.addr,\n        baseAssetInBaseUnit,\n        toBaseUnitBN(baseAmountToCreate.times(rate), quoteAsset.decimals),\n        expiry,\n      );\n    }\n    const signedOrder = await signOrder(order);\n    try {\n      await broadcastOrders([signedOrder]);\n    } catch (error) {\n      toast(error);\n    }\n  };\n\n  const clickFillOrders = async () => {\n    const takerAmountBase = fillingtakerAmounts.reduce((prev, cur) => prev.plus(new BigNumber(cur)), new BigNumber(0));\n    if (tradeType === 'buy') {\n      await checkAndAllowQuoteAsset(takerAmountBase);\n    } else {\n      await checkAndAllowBaseAsset(takerAmountBase);\n    }\n    await fillOrders(\n      selectedOrders.map((o) => o.order),\n      fillingtakerAmounts,\n      selectedOrders.map((o) => o.order.signature),\n      toBaseUnitBN(feeInETH, 18).toString(),\n      fastGasPrice.toString(),\n    );\n  };\n\n  const clickFillAndCreate = async () => {\n    await clickCreateOrder();\n    await clickFillOrders();\n  };\n\n  return (\n    <>\n      <BuyAndSellBlock theme={theme}>\n        <Header theme={theme}>\n          <Wrapper>Balance</Wrapper>\n        </Header>\n        <Wrapper>\n          <TopPart theme={theme}>\n            <FlexWrapper>\n              <div>{baseAsset.symbol}</div>\n              <TopPartText>{toTokenUnitsBN(baseAssetBalance, baseAsset.decimals).toFormat(4)}</TopPartText>\n            </FlexWrapper>\n            <FlexWrapper>\n              <div>\n                <Flex>\n                  <p style={{ paddingRight: '5px' }}>\n                    <LinkBase onClick={() => setPanelOpended(true)}>\n                      {quoteAsset.symbol}\n                    </LinkBase>\n                  </p>\n                  { quoteAsset.symbol === WETH.addr ? (\n                    <Help hint=\"What is WETH?\">\n                      WETH is Wraped ETH, the erc20 version of ETH. You must have WETH to create and fill orders on 0x.\n                      {' '}\n                      <LinkBase onClick={() => setPanelOpended(true)}>Click here to wrap your ETH now!</LinkBase>\n                    </Help>\n                  ) : <></> }\n                </Flex>\n              </div>\n              <TopPartText>{toTokenUnitsBN(quoteAssetBalance, quoteAsset.decimals).toFormat(4)}</TopPartText>\n            </FlexWrapper>\n          </TopPart>\n          {/* <FlexWrapper>\n            <div>\n              Collateral (\n              {collateral.symbol}\n              )\n            </div>\n            <TopPartText>\n              { vault\n                ? toTokenUnitsBN(vault.collateral, collateral.decimals).toFormat(4)\n                : Number(0).toFixed(4)}\n            </TopPartText>\n          </FlexWrapper> */}\n        </Wrapper>\n        <Wrapper>\n          <TabWrapper theme={theme}>\n            <Tab\n              active={tradeType === 'buy'}\n              onClick={() => {\n                setSelectedOrders([]);\n                setTradeType('buy');\n              }}\n              theme={theme}\n            >\n              Buy\n            </Tab>\n            <Tab\n              active={tradeType === 'sell'}\n              onClick={() => {\n                setSelectedOrders([]);\n                setTradeType('sell');\n              }}\n              theme={theme}\n            >\n              Sell\n            </Tab>\n          </TabWrapper>\n          <LowerPart>\n            <Label>Amount</Label>\n            <TextInput\n              wide\n              type=\"number\"\n              onChange={(e) => onChangeBaseAmount(e.target.value)}\n              value={baseAmountToCreate.plus(baseAmountToFill).toNumber()}\n              adornmentPosition=\"end\"\n              adornment={baseAsset.symbol}\n            />\n\n            <Label>Price per token</Label>\n            <TextInput\n              wide\n              type=\"number\"\n              onChange={(e) => onChangeRate(e.target.value)}\n              value={rate.toNumber()}\n              adornmentPosition=\"end\"\n              adornment={quoteAsset.symbol}\n            />\n\n            <Label>Expires After</Label>\n            <GroupButtonWrapper>\n              {['1 Hour', '1 Day', '1 Week'].map((x, i) => (\n                <GroupButton\n                  disabled={hasSelectedOrders && !isFillingAndCreating}\n                  theme={theme}\n                  onClick={() => setActiveButton(i)}\n                  key={x}\n                  index={i}\n                  isActive={activeButton === i}\n                >\n                  {x}\n                </GroupButton>\n              ))}\n            </GroupButtonWrapper>\n\n            <BottomTextWrapper>\n              <BottomText>{tradeType === 'buy' ? 'Cost' : 'Premium'}</BottomText>\n              <BottomText>{`${quoteAssetAmount.toFixed(4)} ${quoteAsset.symbol}`}</BottomText>\n            </BottomTextWrapper>\n            <BottomTextWrapper>\n              <BottomText>\n                <Flex>\n                  <p style={{ paddingRight: '5px' }}>Fee</p>\n                  <Help hint=\"Why am I paying?\">\n                    The fee is charged by 0x.\n                    The higher your gasPrice is, the higher you will be charged for.\n                  </Help>\n                </Flex>\n              </BottomText>\n              <BottomText>{`${feeInETH} ETH` }</BottomText>\n            </BottomTextWrapper>\n          </LowerPart>\n        </Wrapper>\n        <Flex>\n          { hasSelectedOrders // is filling orders\n            ? isFillingAndCreating\n              ? (\n                <Button\n                  onClick={clickFillAndCreate}\n                  label=\"Fill And Create\"\n                  wide\n                />\n              )\n              : (\n                <Button\n                  onClick={clickFillOrders}\n                  label=\"Fill Orders\"\n                  wide\n                />\n              )\n            : (\n              <Button\n                onClick={clickCreateOrder}\n                label={tradeType === 'buy' ? 'Create Buy Order' : 'Create Sell Order'}\n                wide\n              />\n            )}\n\n        </Flex>\n      </BuyAndSellBlock>\n      <WrapETHPanel\n        user={user}\n        opened={panelOpend}\n        setOpen={setPanelOpended}\n        wethBalance={quoteAssetBalance}\n        helperText={wethPanelHelperText}\n        setHelperText={setPanelHelperText}\n      />\n    </>\n  );\n}\n\nBuyAndSell.propTypes = {\n  user: PropTypes.string.isRequired,\n\n  // three types of tokens\n  quoteAsset: TokenType.isRequired,\n  baseAsset: TokenType.isRequired,\n  // collateral: TokenType.isRequired,\n\n\n  // ethBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  baseAssetBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  quoteAssetBalance: PropTypes.instanceOf(BigNumber).isRequired,\n\n  // vault: VaultType,\n\n  tradeType: PropTypes.string.isRequired,\n  setTradeType: PropTypes.func.isRequired,\n\n  selectedOrders: PropTypes.arrayOf(OrderType).isRequired,\n  setSelectedOrders: PropTypes.func.isRequired,\n};\n\n// BuyAndSell.defaultProps = {\n//   vault: {\n//     owner: '',\n//     oTokensIssued: '0',\n//     collateral: '0',\n//     underlying: '0',\n//   },\n// };\n\nexport default BuyAndSell;\n\nconst FlexWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 18px 0;\n`;\nconst BuyAndSellBlock = styled.div`  \n  width: 100%;\n  min-height: 509px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid ${(props) => props.theme.border};\n  padding-bottom: 10px;\n  border-radius: 5px;\n  background-color: ${(props) => props.theme.surface};\n`;\nconst Header = styled.div`\n  width: 100%;\n  height: 35px;\n  font-size: 13px;\n  font-family: aragon-ui;\n  border-bottom: 1px solid ${(props) => props.theme.border};\n  background-color: ${(props) => props.theme.surface};\n  color: ${(props) => props.theme.contentSecondary};\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  justify-content: center;\n  // font-weight: bold;\n`;\nconst TopPart = styled.div`\n  margin: 10px 0;\n  background-color: ${(props) => props.theme.surface};\n  min-height: 50px;\n`;\nconst TopPartText = styled.div``;\nconst LowerPart = styled.div`\n  background-color: ${(props) => props.theme.background};\n`;\nconst Tab = styled.div`\n  width: 50%;\n  height: 50px;\n  color: ${(props) => (props.active ? props.theme.content : props.theme.surfaceContentSecondary)};\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  border-bottom: ${(props) => (props.active ? `2px solid ${props.theme.selected}` : `1px solid ${props.theme.border}`)};\n  cursor: pointer;\n`;\nconst Label = styled.div`\n  height: 14px;\n  font-size: 14px;\n  color: ${(props) => props.theme.content};\n  margin: 20px 0 15px 0;\n`;\n\nconst BottomText = styled.div`\n  height: 20px;\n`;\nconst Wrapper = styled.div`\n  width: 90%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst Flex = styled.div`\n  display:flex;\n  width: 90%;\n`;\nconst TabWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  background-color: ${(props) => props.theme.surface};\n  padding-top: 10px;\n  border: ${(props) => props.theme.border}\n`;\nconst BottomTextWrapper = styled(FlexWrapper)`\n  height: 27px;\n  border-bottom: solid 1px #979797;\n  border-bottom-style: dotted;\n`;\nconst GroupButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  color: ${(props) => props.theme.content};\n  white-space: nowrap;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  align-items: center;\n  border-radius: 5px;\n`;\nconst GroupButton = styled.div`\n  height: 40px;\n  width: 33%;\n  border: 1px solid ${(props) => props.theme.border};\n  border-width: ${(props) => (props.index === 1 ? '1px 0px' : '1px')};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-top-left-radius: ${(props) => (props.index === 0 ? '5px' : '0px')};\n  border-bottom-left-radius: ${(props) => (props.index === 0 ? '5px' : '0px')};\n  border-top-right-radius: ${(props) => (props.index === 2 ? '5px' : '0px')};\n  border-bottom-right-radius: ${(props) => (props.index === 2 ? '5px' : '0px')};\n  background: ${(props) => (props.disabled ? props.theme.surface\n    : props.isActive ? props.theme.surfaceHighlight : props.theme.surface)} ;\n  :active {\n    transform: translateY(1px)\n  }\n`;\n","// const prefix = 'https://cors-anywhere-anton.herokuapp.com/';\nconst opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn';\n\n/**\n * @return {Promise<Array<{colalteral: string, oTokensIssued: string, owner: string}>>}\n */\nexport async function getAllVaultsForOption(optionAddress) {\n  const query = `\n  {\n    vaults(where: {\n      optionsContract: \"${optionAddress}\"\n    }) {\n      owner\n      oTokensIssued,\n      collateral,\n    }\n  }`;\n  const response = await postQuery(query);\n  const vaults = response.data.vaults;\n  return vaults;\n}\n\nexport async function getAllVaultsForUser(owner) {\n  const query = `{\n    vaults (where: {owner: \"${owner}\"}) {\n      optionsContract {\n        address\n      }\n      oTokensIssued,\n      collateral,\n      underlying\n    }\n  }`;\n  const response = await postQuery(query);\n  const actions = response.data.vaults;\n  return actions;\n}\n\n/**\n * Return target vault or null\n * @param {string} owner\n * @param {string} option\n * @return {Promise<{underlying:string, colalteral:string, oTokensIssued:string}>}\n */\nexport async function getVault(owner, option) {\n  const query = `{\n    vault(\n     id: \"${option.toLowerCase()}-${owner.toLowerCase()}\"\n    ) {\n      underlying\n      collateral\n      oTokensIssued\n    }\n  }`;\n  const response = await postQuery(query);\n  return response.data.vault;\n}\n\nexport async function getLiquidationHistory(owner) {\n  const query = liquidationActionsQuery(owner);\n  const response = await postQuery(query);\n  return response.data.liquidateActions;\n}\n\nconst liquidationActionsQuery = (owner) => `{\n  liquidateActions(where: {\n    vault_contains: \"${owner}\"\n  }) {\n    vault {\n      owner,\n      optionsContract {\n        address\n      }\n    },\n    liquidator,\n    collateralToPay,\n    timestamp\n    transactionHash\n  }\n}\n\n`;\n\n/**\n * Get all exercise history for one user\n * @param {string} owner vault owner\n * @param {string} option contract address\n * @return {Promise<{\n * amtCollateralToPay: string,\n * exerciser:string,\n * oTokensToExercise:string,\n * timestamp:string,\n * transactionHash: string}[]>}\n */\nexport async function getExerciseHistory(owner, option) {\n  const query = `{\n    exerciseActions (where: {\n      vault_contains: \"${owner}\"\n      optionsContract_contains: \"${option}\"\n    }) {\n      exerciser\n      oTokensToExercise\n      amtCollateralToPay\n      transactionHash\n      timestamp\n    }\n  }`;\n\n  const response = await postQuery(query);\n  return response.data.exerciseActions;\n}\n\n/**\n * get RemoveUnderlying Event history\n * @param {string} owner\n * @param {string} option\n * @return {Promise<{\n * amount:string, timestamp:string, transactionHash:string\n * }[]>}\n */\nexport async function getRemoveUnderlyingHistory(owner, option) {\n  const query = `{\n    removeUnderlyingActions(\n      where: {\n        vault_contains: \"${option}\"\n        owner: \"${owner}\"   \n      }\n    ) {\n      timestamp\n      transactionHash\n      amount\n    }\n  }`;\n  const response = await postQuery(query);\n  return response.data.removeUnderlyingActions;\n}\n\n\nconst postQuery = async (query) => {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  };\n  const res = await fetch(opynGraphEndpoint, options);\n  return res.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Header } from '@aragon/ui';\n\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport OptionBoard from './OptionBoard';\nimport TabBoard from './TabBoard';\nimport BuyAndSell from './BuyAndSell';\n\nimport { getTokenBalance } from '../../utils/infura';\nimport { getOrderBook, isValid } from '../../utils/0x';\nimport { getVault } from '../../utils/graph';\nimport { eth_puts, eth_calls } from '../../constants/options';\n\nimport * as tokens from '../../constants/tokens';\n\nconst quoteAsset = tokens.USDC;\n\nfunction OptionTrading({ user, theme }) {\n  const [baseAsset, setBaseAsset] = useState(eth_puts[1]); // put 100\n\n  const [asks, setAsks] = useState([]);\n  const [bids, setBids] = useState([]);\n\n  const [tradeType, setTradeType] = useState('buy');\n  const [selectedOrders, setSelectedOrders] = useState([]);\n\n  // user balance\n  // const [userETHBalance, setUserETHBalance] = useState(BigNumber(0)); // in eth\n  const [baseAssetBalance, setBaseAssetBalance] = useState(BigNumber(0));\n  const [quoteAssetBalance, setQuoteAssetBalance] = useState(BigNumber(0));\n\n  const [vault, setVault] = useState({});\n\n\n  // BaseAsset changeed: Update orderbook and base asset\n  useEffect(() => {\n    let isCancelled = false;\n\n    // update orderbook\n    const updateOrderBook = async () => {\n      const res = await getOrderBook(baseAsset.addr, quoteAsset.addr);\n      if (!isCancelled) {\n        setAsks(res.asks.records.filter((record) => isValid(record)));\n        setBids(res.bids.records.filter((record) => isValid(record)));\n      }\n    };\n\n    // update baseAsset Balance\n    const updateBaseBalance = async () => {\n      const baseBalance = await getTokenBalance(baseAsset.addr, user);\n      if (!isCancelled) {\n        setBaseAssetBalance(new BigNumber(baseBalance));\n      }\n    };\n\n    const updateVaultData = async () => {\n      if (user === '') return;\n      const userVault = await getVault(user, baseAsset.addr);\n      if (!isCancelled) setVault(userVault);\n    };\n    updateOrderBook();\n    updateBaseBalance();\n    updateVaultData();\n    const idOrderBook = setInterval(updateOrderBook, 1000);\n    const idBaseBalance = setInterval(updateBaseBalance, 30000);\n    const idUpdateVault = setInterval(updateVaultData, 10000);\n    return () => {\n      isCancelled = true;\n      clearInterval(idOrderBook);\n      clearInterval(idBaseBalance);\n      clearInterval(idUpdateVault);\n    };\n  }, [baseAsset, user]);\n\n  // update quote asset\n  useEffect(() => {\n    let isCancelled = false;\n    const updateQuoteBalance = async () => {\n      if (user === '') return;\n      const quoteBalance = await getTokenBalance(quoteAsset.addr, user);\n      if (!isCancelled) {\n        setQuoteAssetBalance(new BigNumber(quoteBalance));\n      }\n    };\n    updateQuoteBalance();\n    const idQuoteAssetBalance = setInterval(updateQuoteBalance, 20000);\n    return () => {\n      isCancelled = true;\n      clearInterval(idQuoteAssetBalance);\n    };\n  }, [user]);\n\n  return (\n    <WholeScreen>\n      <FlexWrapper>\n        <LeftPart>\n          <Header />\n          <Header />\n          <BuyAndSell\n            user={user}\n            baseAsset={baseAsset}\n            quoteAsset={quoteAsset}\n            collateral={baseAsset.collateral}\n\n            baseAssetBalance={baseAssetBalance}\n            quoteAssetBalance={quoteAssetBalance}\n\n            vault={vault}\n            theme={theme}\n\n            tradeType={tradeType}\n            setTradeType={setTradeType}\n\n            selectedOrders={selectedOrders}\n            setSelectedOrders={setSelectedOrders}\n          />\n        </LeftPart>\n        <RightPart>\n          {/* <Header primary=\"Trade ETH Options\" /> */}\n          <OptionBoard\n            puts={eth_puts}\n            calls={eth_calls}\n            quoteAsset={quoteAsset}\n            baseAsset={baseAsset}\n            setBaseAsset={setBaseAsset}\n            setTradeType={setTradeType}\n            setSelectedOrders={setSelectedOrders}\n          />\n          <br />\n          {/* <FixBottom> */}\n          <TabBoard\n            asks={asks}\n            bids={bids}\n            user={user}\n            option={baseAsset}\n            quoteAsset={quoteAsset}\n            tradeType={tradeType}\n            selectedOrders={selectedOrders}\n            setTradeType={setTradeType}\n            setSelectedOrders={setSelectedOrders}\n          />\n          {/* </FixBottom> */}\n        </RightPart>\n      </FlexWrapper>\n    </WholeScreen>\n  );\n}\n\nOptionTrading.propTypes = {\n  user: PropTypes.string.isRequired,\n  theme: PropTypes.string.isRequired,\n};\n\n\nconst LeftPart = styled.div`\n  width: 20%;\n  padding-right: 1.5%;\n`;\n\nconst RightPart = styled.div`\n  width: 80%;\n`;\n\nconst WholeScreen = styled.div`\n  textAlign: center;\n  padding-left: 7%;\n  padding-right: 7%;\n  position:fixed;\n  overflow-y:scroll;\n  overflow-x:hidden;\n  left: 0;\n  bottom: 0;\n  top: 6%;\n  width: 100%;\n  overflow: auto\n`;\n\nconst FlexWrapper = styled.div`\n  display: flex;\n  height:87%\n`;\n\nexport default OptionTrading;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TextInput, DataView, Button, LinkBase, EthIdenticon, useToast,\n} from '@aragon/ui';\nimport { getPreference, checkAddressAndAddToStorage } from '../../utils/storage';\n\nimport { Comment } from '../common';\nimport { isAddress } from '../../utils/number';\nimport { resolveENS } from '../../utils/infura';\n\nfunction PleaseLogin({ setWatchAddress }) {\n  const toast = useToast();\n  const [InAddress, setAddress] = useState('');\n  const watch_addrs = getPreference('watch_addresses', '[]');\n  const usedAddresses = JSON.parse(watch_addrs);\n\n  return (\n    <>\n      {/* <Header></Header> */}\n      <Comment text=\"Please connect wallet to proceed or enter an address to use Watch Mode.\" />\n      <br />\n      <br />\n      <p style={{ fontSize: 20 }}> Watch Mode </p>\n      <Comment text=\"You won't be able to interact with any smart contract under Watch Mode.\" />\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '50%' }}>\n          <TextInput\n            placeholder=\"Ethereum address or ENS\"\n            value={InAddress}\n            onChange={(e) => { setAddress(e.target.value.toLowerCase()); }}\n            wide\n          />\n\n          {usedAddresses.length > 0 ? (\n            <div style={{ paddingTop: '3%' }}>\n              <DataView\n                entries={usedAddresses.reverse()}\n                fields={['used']}\n                entriesPerPage={5}\n                renderEntry={(address) => [\n                  <LinkBase onClick={() => {\n                    setWatchAddress(address);\n                    checkAddressAndAddToStorage(address);\n                  }}\n                  >\n                    {/* <IdentityBadge entity={address} /> */}\n                    <EthIdenticon\n                      address={address}\n                      scale={1.3}\n                      radius={5}\n                    />\n                    <span style={{ paddingLeft: 8, fontSize: 15, fontFamily: 'aragon-ui-monospace' }}>{address}</span>\n                  </LinkBase>,\n                ]}\n              />\n            </div>\n          ) : <></>}\n        </div>\n        <div style={{ width: '8%', paddingLeft: '1%', paddingRight: '1%' }}>\n          <Button\n            label=\"Watch Address\"\n            onClick={async () => {\n              if (isAddress(InAddress)) {\n                setWatchAddress(InAddress);\n                checkAddressAndAddToStorage(InAddress);\n              } else {\n                try {\n                  const address = await resolveENS(InAddress);\n                  setWatchAddress(address);\n                  checkAddressAndAddToStorage(address);\n                } catch (error) {\n                  toast('Invalid Address');\n                }\n              }\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nPleaseLogin.propTypes = {\n  // watchAddres: PropTypes.string.isRequired,\n  setWatchAddress: PropTypes.func.isRequired,\n};\n\nexport default PleaseLogin;\n","import BigNumber from 'bignumber.js';\nimport { getPrice } from './infura';\nimport { toBaseUnitBN } from './number';\n\n/**\n * Get strike value in collateral for ratio calculation.\n * @param {string} collateral address\n * @param {string} strike address\n * @param {string} oracle address\n * @param {number} collateralDecimals\n * @return {Promise<BigNumber>}\n */\nexport const calculateStrikeValueInCollateral = async (\n  collateral,\n  strike,\n  oracle,\n  collateralDecimals,\n) => {\n  const ETH_Address = '0x0000000000000000000000000000000000000000';\n  let strikeValueInCollateral;\n  if (collateral === ETH_Address) {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    strikeValueInCollateral = new BigNumber(strikeValueInWei);\n  } else if (collateral === strike) {\n    // No collateral, like ETH option\n    strikeValueInCollateral = new BigNumber(10).pow(new BigNumber(collateralDecimals));\n  } else {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    const collateralValueInWei = await getPrice(oracle, collateral);\n    strikeValueInCollateral = toBaseUnitBN(\n      parseInt(strikeValueInWei, 10) / parseInt(collateralValueInWei, 10),\n      collateralDecimals,\n    );\n  }\n  return strikeValueInCollateral;\n};\n\n/**\n *\n * @param {string|number|BigNumber} collateral number of collateral in base unit\n * @param {string|number|BigNumber} tokenIssued number of token in base unit\n * @param {string|number|BigNumber} strikePrice\n * @param {BigNumber} strikeValueInCollateral\n * @return {number}\n */\nexport const calculateRatio = (collateral, tokenIssued, strikePrice, strikeValueInCollateral) => {\n  if (tokenIssued === '0') return Infinity;\n  const colalteralBN = new BigNumber(collateral);\n  const tokenIssuedBN = new BigNumber(tokenIssued);\n  const strikePriceBN = new BigNumber(strikePrice);\n  // const strikeValueInCollateralBN = new BigNumber(strikeValueInCollateral.toString())\n  const result = colalteralBN\n    .div(tokenIssuedBN)\n    .div(strikePriceBN)\n    .div(strikeValueInCollateral);\n  return result.toNumber();\n};\n","import React, { useState, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Card,\n  TextInput,\n  useToast,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  SectionTitle, OpenVaultButton, Comment, HelperText,\n} from '../common';\nimport * as myType from '../types';\n\nimport { openVaultAddCollateralAndMint } from '../../utils/web3';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { calculateStrikeValueInCollateral, calculateRatio } from '../../utils/calculation';\n\nfunction OpenVaultModal({ user, option }) {\n  const toast = useToast();\n  const history = useHistory();\n\n  const [opened, setOpened] = useState(false);\n\n  // for Open vault, add collateral and mint tokens\n  const [collateralAmt, setCollateralAmt] = useState(new BigNumber(0));\n  const [mintTokenAmt, setMintTokenAmt] = useState(new BigNumber(0));\n\n  const [strikeValueInCollateral, setStrikeValueInCollateral] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(1);\n\n  useMemo(async () => {\n    if (!opened) return;\n    const strikeValueInColltrl = await calculateStrikeValueInCollateral(\n      option.collateral.addr,\n      option.strike.addr,\n      option.oracle,\n      option.collateral.decimals,\n    );\n    setStrikeValueInCollateral(strikeValueInColltrl);\n  },\n  [option, opened]);\n\n  //  when input changed\n  useEffect(() => {\n    // calculate new ratio\n    const newRatio = calculateRatio(\n      toBaseUnitBN(collateralAmt, option.collateral.decimals),\n      toBaseUnitBN(mintTokenAmt, option.decimals),\n      option.strikePrice,\n      strikeValueInCollateral,\n    );\n    setRatio(newRatio);\n  },\n  [collateralAmt, mintTokenAmt, strikeValueInCollateral, option]);\n\n  const onCollateralChange = (value) => {\n    if (!value) {\n      setCollateralAmt(new BigNumber(0));\n      return;\n    }\n    const amtBn = new BigNumber(value);\n    setCollateralAmt(amtBn);\n  };\n\n  const onMintTokenAmtChange = (value) => {\n    if (!value) {\n      setMintTokenAmt(new BigNumber(0));\n      return;\n    }\n    setMintTokenAmt(new BigNumber(value));\n  };\n\n  const mint = async () => {\n    if (ratio < option.minRatio) {\n      toast(`Collateral ratio must > ${option.minRatio}`);\n      return;\n    }\n    await openVaultAddCollateralAndMint(\n      option.addr,\n      option.collateral.addr,\n      toBaseUnitBN(collateralAmt, option.collateral.decimals).toString(),\n      toBaseUnitBN(mintTokenAmt, option.decimals).toString(),\n    );\n    history.push(`/manage/${option.addr}/${user}`);\n  };\n\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  return (\n    <>\n      {/* Button */}\n      <Button onClick={open} label=\"Open Vault\" />\n\n      {/* Modal */}\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header primary=\"Open Vault\" />\n        <Comment text=\"Select how you want to open a vault.\" />\n        {/* <div style={{ display: 'flex' }}> */}\n        {/* <div style={{ width: '30%' }}> */}\n        <Card height=\"300\" width=\"729\">\n          <SectionTitle title=\"Open Empty Vault\" />\n          <Comment text=\"You can add collateral and mint tokens later.\" />\n          <br />\n          <OpenVaultButton oToken={option.addr} user={user} goToMangePage />\n          <br />\n        </Card>\n        <br />\n\n        {/* Option C, Create, add and mint */}\n        <Card height=\"300\" width=\"729\">\n          <SectionTitle title=\"Add Collateral and Mint Tokens\" />\n          <Comment text=\"Open vault, add collateral and mint some options in one transaction.\" />\n          <div style={{ display: 'flex', paddingBottom: 15 }}>\n            <TextInput\n              type=\"number\"\n              value={collateralAmt.toNumber()}\n              onChange={(event) => onCollateralChange(event.target.value)}\n              adornmentPosition=\"end\"\n              adornment={option.collateral.symbol}\n            />\n            <div style={{ paddingLeft: 15 }}>\n              <TextInput\n                type=\"number\"\n                value={mintTokenAmt.toNumber()}\n                onChange={(event) => onMintTokenAmtChange(event.target.value)}\n                adornmentPosition=\"end\"\n                adornment={option.symbol}\n              />\n            </div>\n          </div>\n          <Button label=\"Mint\" onClick={mint} />\n          { ratio === Infinity\n            ? <> </>\n            : <HelperText label=\"Collateral Ratio \" amt={ratio.toString()} />}\n\n          <br />\n        </Card>\n      </Modal>\n    </>\n  );\n}\n\nOpenVaultModal.propTypes = {\n  user: PropTypes.string.isRequired,\n  option: myType.option.isRequired,\n};\n\nexport default OpenVaultModal;\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\nimport {\n  Header, DataView, IdentityBadge,\n} from '@aragon/ui';\nimport NoWalletView from './NoWallet';\n\nimport { allOptions } from '../../constants/options';\nimport {\n  SectionTitle, ManageVaultButton, Comment, CheckBox,\n} from '../common';\nimport {\n  formatDigits, compareVaultRatio, toTokenUnitsBN,\n} from '../../utils/number';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { getPreference, storePreference } from '../../utils/storage';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport tracker from '../../utils/tracker';\nimport OpenVaultModal from './OpenVaultModal';\n\nconst Promise = require('bluebird');\n\nfunction MyVaults({ user }) {\n  tracker.pageview('/myvaults');\n  const [opendVaults, setOpenedVaults] = useState([]);\n  const [tokensToOpen, setTokensToOpen] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n  // enable not logged in user to use this feature\n  const [watchAddress, setWatchAddress] = useState('');\n  const isWatchMode = user === '' && watchAddress !== '';\n  const hasAddressConnected = user !== '' || watchAddress !== '';\n\n  // checkbox\n  const [showExpired, setShowExpired] = useState(getPreference('showExpired', '0') === '1');\n  const [showEmpty, setShowEmpty] = useState(getPreference('showEmpty', '1') === '1');\n\n  const displayVaults = opendVaults\n    .filter((vault) => showExpired || vault.expiry * 1000 > Date.now())\n    .filter((vault) => showEmpty || new BigNumber(vault.collateral).gt(new BigNumber(0)));\n\n  // Only request all vaults once\n  useMemo(async () => {\n    if (!hasAddressConnected) return;\n    const userVaults = await getAllVaultsForUser(isWatchMode ? watchAddress : user);\n    const openedVaults = [];\n    const notOpenedTokens = [];\n    await Promise.map(allOptions, async (option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      const isOpened = entry !== undefined;\n      if (isOpened) {\n        const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n          option.collateral.addr,\n          option.strike.addr,\n          option.oracle,\n          option.collateral.decimals,\n        );\n        const ratio = calculateRatio(\n          entry.collateral,\n          entry.oTokensIssued,\n          option.strikePrice,\n          strikeValueInCollateral,\n        );\n        openedVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          collateralDecimals: option.collateral.decimals,\n          expiry: option.expiry,\n          ratio,\n        });\n      } else if (option.expiry > (Date.now() / 1000)) {\n        // only put non-expired token to \"can open\" list\n        notOpenedTokens.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n        });\n      }\n    });\n    setIsLoading(false);\n    setOpenedVaults(openedVaults.sort(compareVaultRatio));\n    setTokensToOpen(notOpenedTokens);\n  }, [user, watchAddress, hasAddressConnected, isWatchMode]);\n\n  return (\n    <>\n      <Header primary=\"My Vaults\" />\n      {hasAddressConnected ? (\n        <>\n          {opendVaults.length > 0 ? (\n            <div style={{ paddingBottom: '3%' }}>\n\n              <div style={{ display: 'flex' }}>\n                <SectionTitle title=\"Existing Vaults\" />\n                <div style={{ marginLeft: 'auto' }}>\n                  <div style={{ display: 'flex' }}>\n                    <CheckBox\n                      text=\"Expired\"\n                      checked={showExpired}\n                      onCheck={(checked) => {\n                        storePreference('showExpired', checked ? '1' : '0');\n                        setShowExpired(checked);\n                      }}\n                    />\n                    <CheckBox\n                      text=\"Empty\"\n                      checked={showEmpty}\n                      onCheck={(checked) => {\n                        storePreference('showEmpty', checked ? '1' : '0');\n                        setShowEmpty(checked);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <DataView\n                fields={['Token', 'contract', 'collateral', 'Ratio', '']}\n                entries={displayVaults}\n                entriesPerPage={6}\n                renderEntry={({\n                  oToken, oTokenName, collateral, collateralDecimals, ratio,\n                }) => [\n                  oTokenName,\n                  <IdentityBadge entity={oToken} />,\n                  formatDigits(toTokenUnitsBN(collateral, collateralDecimals).toNumber(), 5),\n                  formatDigits(ratio, 4),\n                  <ManageVaultButton oToken={oToken} owner={isWatchMode ? watchAddress : user} />,\n                ]}\n              />\n            </div>\n          ) : isLoading ? (\n            <Comment text=\"Loading\" />\n          ) : (\n            <Comment text=\"No Opened Vaults\" />\n          )}\n          {tokensToOpen.length > 0 && !isWatchMode ? (\n            <div>\n              <SectionTitle title=\"Open new vaults\" />\n              <DataView\n                fields={['Token', 'contract', 'manage']}\n                entries={tokensToOpen}\n                renderEntry={({ oToken, oTokenName }) => {\n                  const option = allOptions.find((o) => o.addr === oToken);\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} shorten={false} />,\n                    <OpenVaultModal user={user} option={option} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </>\n      ) : (\n        // Not connected to wallet\n        <NoWalletView\n          watchAddress={watchAddress}\n          setWatchAddress={setWatchAddress}\n        />\n      )}\n    </>\n  );\n}\n\nMyVaults.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default MyVaults;\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  DataView,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\nimport * as myType from '../types';\nimport { exercise } from '../../utils/web3';\nimport { PriceSection } from '../common';\nimport { getUnderlyingRequiredToExercise, getBalance, getTokenBalance } from '../../utils/infura';\nimport {\n  toTokenUnitsBN, toBaseUnitBN, formatDigits, compareVaultIssued,\n} from '../../utils/number';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport { allOptions } from '../../constants/options';\n\nfunction ExerciseModal({\n  user,\n  token,\n  vaults,\n}) {\n  const option = allOptions.find((o) => o.addr === token);\n  const underlyingIsETH = option.underlying.addr === ETH_ADDRESS;\n  const [userUnderlyingBalance, setUserUnderlyingBalance] = useState(new BigNumber(0));\n  const [userOTokenBalance, setUserOTokenBalance] = useState(new BigNumber(0));\n\n  const [opened, setOpened] = useState(false);\n\n  const [exerciseAmount, setExerciseAmount] = useState(new BigNumber(0));\n  const [underlyringRequired, setUnderlyringRequired] = useState(new BigNumber(0));\n\n  const nonEmptyVaults = vaults\n    .filter((vault) => parseInt(vault.collateral, 10) > 0)\n    .sort(compareVaultIssued);\n\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\n  const [selectedHasEnoughCollateral, setHasEnoughCollateral] = useState(false);\n\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  // Update user balance\n  useMemo(async () => {\n    if (!user) return;\n    if (!opened) return;\n    let userUnderlying;\n    if (underlyingIsETH) {\n      userUnderlying = new BigNumber(await getBalance(user));\n    } else {\n      userUnderlying = toTokenUnitsBN(\n        await getTokenBalance(option.underlying.addr, user),\n        option.underlying.decimals,\n      );\n    }\n    const userOTkns = toTokenUnitsBN(await getTokenBalance(option.addr, user), option.decimals);\n\n    setUserUnderlyingBalance(userUnderlying);\n    setUserOTokenBalance(userOTkns);\n  }, [option, underlyingIsETH, user, opened]);\n\n  const onSelectEntries = (entries, indexes) => {\n    setSelectedIndexes(indexes);\n    checkHasEnoughToken(entries);\n  };\n\n  /**\n   * Set selectedHasEnoughCollateral according to selected entries\n   * @param {{oTokenIssued: string}[]} entries\n   */\n  const checkHasEnoughToken = (entries) => {\n    const sumIssued = entries.reduce(\n      (accumulator, current) => accumulator.plus(new BigNumber(current.oTokensIssued)), new BigNumber(0),\n    );\n    if (sumIssued.gt(new BigNumber(0)) && sumIssued.gte(toBaseUnitBN(exerciseAmount, option.decimals))) {\n      setHasEnoughCollateral(true);\n    } else {\n      setHasEnoughCollateral(false);\n    }\n  };\n\n  const onChangeExerciseAmt = async (amount) => {\n    if (!amount) {\n      setExerciseAmount(new BigNumber(0));\n      setUnderlyringRequired(new BigNumber(0));\n      return;\n    }\n    const exeAmtBN = new BigNumber(amount);\n    setExerciseAmount(exeAmtBN);\n    const underlyingRawAmt = await getUnderlyingRequiredToExercise(\n      option.addr,\n      toBaseUnitBN(exeAmtBN, option.decimals).toString(),\n    );\n    const underlyingRequired = toTokenUnitsBN(underlyingRawAmt, option.underlying.decimals);\n    setUnderlyringRequired(underlyingRequired);\n\n    // check current selection has enought tokens\n    const entries = selectedIndexes.map((index) => nonEmptyVaults[index]);\n    checkHasEnoughToken(entries);\n  };\n\n  return (\n    <>\n      {/* Button */}\n      <Button onClick={open} label=\"Claim\" />\n\n      {/* Modal */}\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header\n          primary=\"Exercise Option\"\n          secondary={(\n            <div style={{ display: 'flex' }}>\n              <PriceSection\n                label=\"Balance:\"\n                amt={userOTokenBalance.toNumber()}\n                symbol={option.symbol}\n                forceDisplay\n              />\n              <PriceSection label=\" +\" amt={userUnderlyingBalance.toNumber()} symbol={option.underlying.symbol} />\n            </div>\n          )}\n        />\n        <Box heading=\"Amount to Exercise\">\n          <Split\n            primary={(\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  adornment={option.symbol}\n                  adornmentPosition=\"end\"\n                  value={exerciseAmount.toNumber()}\n                  onChange={(event) => onChangeExerciseAmt(event.target.value)}\n                />\n              </>\n            )}\n            secondary={(\n              <div style={{ paddingTop: 5 }}>\n                <PriceSection\n                  label=\"+ Underlyring\"\n                  amt={underlyringRequired.toNumber()}\n                  symbol={option.underlying.symbol}\n                />\n              </div>\n            )}\n          />\n        </Box>\n        <DataView\n          mode=\"table\"\n          renderSelectionCount={(count) => `${count} vaults selected`}\n          fields={['Owner', 'Issued', 'collateral']}\n          entries={nonEmptyVaults}\n          entriesPerPage={5}\n          selection={selectedIndexes}\n          onSelectEntries={onSelectEntries}\n          renderEntry={({ owner, collateral, oTokensIssued }) => [\n            <IdentityBadge entity={owner} />,\n            formatDigits(toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(), 5),\n            formatDigits(toTokenUnitsBN(collateral, option.collateral.decimals).toNumber(), 5),\n          ]}\n        />\n        <br />\n        <Button\n          label=\"Exercise\"\n          disabled={!selectedHasEnoughCollateral}\n          wide\n          onClick={async () => {\n            const vaultowners = selectedIndexes.map((index) => vaults[index].owner);\n            exercise(\n              option.addr,\n              option.underlying.addr,\n              toBaseUnitBN(exerciseAmount, option.decimals).toString(),\n              vaultowners,\n            );\n          }}\n        />\n      </Modal>\n    </>\n  );\n}\n\nExerciseModal.propTypes = {\n  user: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  vaults: PropTypes.arrayOf(myType.vault).isRequired,\n};\n\nexport default ExerciseModal;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconConnect,\n  DataView,\n  useToast,\n  Tag,\n} from '@aragon/ui';\n\nimport * as MyPTypes from '../types';\nimport { RatioTag, Comment } from '../common';\n\nimport {\n  liquidate,\n  addERC20Collateral,\n  addETHCollateral,\n  kollateralLiquidate,\n} from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { toTokenUnitsBN, toBaseUnitBN, formatDigits } from '../../utils/number';\nimport { KETH, DAI, USDC } from '../../constants/contracts';\n\n/**\n *\n * @param {{\n * option:{\n * decimals:number,\n * exchange:string, collateral:{ addr:string, decimals: number, symbol:string}, symbol:string }\n * oTokensIssued: string,\n * collateralAmount: string,\n * exchange:string}} param0\n */\nfunction VaultModal({\n  option,\n  useCollateral,\n  owner,\n  collateral, // amount of collateral of this vault\n  oTokensIssued,\n  isSafe,\n  ratio,\n  collateralIsETH,\n}) {\n  const toast = useToast();\n  const [opened, setOpened] = useState(false);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function getData() {\n      if (!opened) return;\n      if (!useCollateral) return;\n      const maxLiquidatable = await getMaxLiquidatable(option.addr, owner);\n      if (!isCancelled) {\n        setLiquidateAmt(toTokenUnitsBN(maxLiquidatable, option.decimals).toNumber());\n      }\n    }\n    getData();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [option, opened, owner, useCollateral]);\n\n  return (\n    <>\n      <Button onClick={open} label=\"More\" />\n      <Modal width={900} padding={50} visible={opened} onClose={close}>\n        <Header primary=\"Access Position\" />\n\n        <DataView\n          fields={['Owner', 'Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[{\n            collateral, isSafe, oTokensIssued, ratio, owner,\n          }]}\n          entriesPerPage={1}\n          renderEntry={(vault) => [\n            <IdentityBadge entity={vault.owner} shorten />,\n            formatDigits(toTokenUnitsBN(vault.collateral, option.collateral.decimals), 5),\n            formatDigits(toTokenUnitsBN(vault.oTokensIssued, option.decimals), 5),\n            formatDigits(vault.ratio, 4),\n            RatioTag({ isSafe: vault.isSafe, ratio, useCollateral }),\n          ]}\n        />\n\n        <br />\n        <Box heading=\"Add Collateral\">\n          <Split\n            primary={(\n              <TextInput\n                type=\"number\"\n                wide\n                adornment={<IconEthereum />}\n                adornmentPosition=\"end\"\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            )}\n            secondary={(\n              <Button\n                label=\"Add Collateral\"\n                wide\n                onClick={() => {\n                  if (collateralIsETH) {\n                    addETHCollateral(option.addr, owner, addValue);\n                  } else {\n                    addERC20Collateral(\n                      option.collateral.addr,\n                      option.addr,\n                      owner,\n                      toBaseUnitBN(addValue, option.collateral.decimals).toString(),\n                    );\n                  }\n                }}\n              />\n            )}\n          />\n        </Box>\n\n        {useCollateral ? (\n          <Box heading=\"Liquidate\">\n            <Comment text={`Liquidate with your ${option.symbol}`} />\n            <Split\n              primary={(\n                <>\n                  <TextInput\n                    wide\n                    type=\"number\"\n                    value={liquidateAmt}\n                    onChange={(event) => {\n                      setLiquidateAmt(event.target.value);\n                    }}\n                  />\n                </>\n              )}\n              secondary={(\n                <>\n                  <Button\n                    wide\n                    disabled={isSafe}\n                    label=\"Liquidate\"\n                    onClick={() => {\n                      liquidate(option.addr, owner, toBaseUnitBN(liquidateAmt, option.decimals)).catch(\n                        (error) => {\n                          toast(error.toString());\n                        },\n                      );\n                    }}\n                  />\n                </>\n              )}\n            />\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n              <Comment text=\" Or \" />\n            </div>\n            <Comment text={(\n              <>\n                <Tag> beta </Tag>\n                Liquidate with Kollateral Flashloan\n              </>\n              )}\n            />\n\n            <div style={{ display: 'flex' }}>\n              <Button\n                icon={<IconConnect />}\n                label=\"DAI\"\n                disabled={isSafe}\n                onClick={() => {\n                  kollateralLiquidate(option.addr, option.exchange, owner, DAI).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n                selected\n              />\n              <Button\n                icon={<IconConnect />}\n                label=\"USDC\"\n                disabled={isSafe}\n                onClick={() => {\n                  kollateralLiquidate(option.addr, option.exchange, owner, USDC).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n              />\n              <Button\n                icon={<IconConnect />}\n                label=\"ETH\"\n                disabled={isSafe}\n                onClick={() => {\n                  kollateralLiquidate(option.addr, option.exchange, owner, KETH).catch((error) => {\n                    toast(error.toString());\n                  });\n                }}\n                wide\n              />\n            </div>\n          </Box>\n        ) : (\n          <></>\n        )}\n      </Modal>\n    </>\n  );\n}\n\nVaultModal.propTypes = {\n  option: MyPTypes.option.isRequired,\n  useCollateral: PropTypes.bool.isRequired,\n  owner: PropTypes.string.isRequired,\n  collateral: PropTypes.string.isRequired,\n  isSafe: PropTypes.bool.isRequired,\n  oTokensIssued: PropTypes.string.isRequired,\n  ratio: PropTypes.number.isRequired,\n  collateralIsETH: PropTypes.bool.isRequired,\n};\n\nexport default VaultModal;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { DataView, IdentityBadge } from '@aragon/ui';\nimport VaultModal from './VaultModal';\nimport { SectionTitle, RatioTag } from '../common';\nimport * as MyPTypes from '../types';\nimport {\n  formatDigits, compareVaultRatio, compareVaultIssued, toTokenUnitsBN,\n} from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { allOptions } from '../../constants/options';\n\nfunction VaultOwnerList({\n  user, token, vaults, collateralIsETH,\n}) {\n  const option = allOptions.find((o) => o.addr === token);\n  const vaultUsesCollateral = option.collateral.addr !== option.strike.addr;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [vaultsWithDetail, setVaultDetail] = useState([]);\n\n  const [page, setPage] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      if (vaults.length === 0) return;\n      const {\n        strike, minRatio, strikePrice, oracle, collateral,\n      } = option;\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral.addr,\n        strike.addr,\n        oracle,\n        collateral.decimals,\n      );\n      const vaultDetail = vaults\n        .map((vault) => {\n          if (vault.oTokensIssued === '0') {\n            return {\n              owner: vault.owner,\n              oTokensIssued: vault.oTokensIssued,\n              collateral: vault.collateral,\n              ratio: Infinity,\n              useCollateral: vaultUsesCollateral,\n              isSafe: true,\n            };\n          }\n          const ratio = calculateRatio(\n            vault.collateral,\n            vault.oTokensIssued,\n            strikePrice,\n            strikeValueInCollateral,\n          );\n          return {\n            owner: vault.owner,\n            oTokensIssued: vault.oTokensIssued,\n            collateral: vault.collateral,\n            ratio,\n            useCollateral: vaultUsesCollateral,\n            isSafe: ratio > minRatio,\n          };\n        })\n        .sort(vaultUsesCollateral ? compareVaultRatio : compareVaultIssued);\n\n      if (!isCancelled) {\n        setVaultDetail(vaultDetail);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 60000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [collateralIsETH, option, user, vaultUsesCollateral, vaults]);\n\n  return (\n    <>\n      <SectionTitle title=\"All Vaults\" />\n      <DataView\n        page={page}\n        onPageChange={setPage}\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaultsWithDetail}\n        entriesPerPage={5}\n        renderEntry={({\n          owner, collateral, oTokensIssued, ratio, isSafe, useCollateral,\n        }) => [\n          <IdentityBadge entity={owner} shorten />,\n          formatDigits(\n            toTokenUnitsBN(collateral, option.collateral.decimals).toNumber(),\n            6,\n          ),\n          formatDigits(\n            toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(),\n            6,\n          ),\n          formatDigits(ratio, 5),\n          RatioTag({ isSafe, ratio, useCollateral }),\n          <VaultModal\n            option={option}\n            owner={owner}\n            collateral={collateral}\n            isSafe={isSafe}\n            useCollateral={useCollateral}\n            collateralIsETH={collateralIsETH}\n            oTokensIssued={oTokensIssued}\n            ratio={ratio}\n          />,\n        ]}\n      />\n    </>\n  );\n}\n\nVaultOwnerList.propTypes = {\n  user: PropTypes.string.isRequired,\n  vaults: PropTypes.arrayOf(MyPTypes.vault).isRequired,\n  token: PropTypes.string.isRequired,\n  collateralIsETH: PropTypes.bool.isRequired,\n};\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Split, IdentityBadge } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\n\nimport { getTotalSupply, getBalance, getTokenBalance } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { allOptions } from '../../constants/options';\n\nfunction OptionOverview({\n  token,\n  collateralIsETH,\n}) {\n  const option = allOptions.find((o) => o.addr === token);\n  const [totalCollateral, setTotalCollateral] = useState(new BigNumber(0));\n  const [totalSupply, setTotalSupply] = useState(new BigNumber(0));\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      let totalCollt;\n      if (collateralIsETH) {\n        totalCollt = new BigNumber(await getBalance(option.addr));\n      } else {\n        const rawCollateralBalance = await getTokenBalance(option.collateral.addr, option.addr);\n        totalCollt = toTokenUnitsBN(rawCollateralBalance, option.collateral.decimals);\n      }\n      const supply = await getTotalSupply(option.addr);\n      if (!isCancelled) {\n        setTotalCollateral(totalCollt);\n        setTotalSupply(toTokenUnitsBN(supply, option.decimals));\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [collateralIsETH, option]);\n\n  return (\n    <>\n      <Split\n        primary={(\n          <Split\n            primary={(\n              <Box heading=\"contract\" padding={15}>\n                <IdentityBadge entity={option.addr} shorten={false} />\n              </Box>\n            )}\n            secondary={(\n              <Box heading=\"Total Collateral\" padding={15}>\n                {totalCollateral.toFormat(4)}\n                {' '}\n                {option.collateral.symbol}\n              </Box>\n            )}\n          />\n        )}\n        secondary={(\n          <Box heading=\"total supply\" padding={15}>\n            {totalSupply.toFormat(4)}\n            {' '}\n            {option.symbol}\n          </Box>\n        )}\n      />\n    </>\n  );\n}\n\nOptionOverview.propTypes = {\n  token: PropTypes.string.isRequired,\n  collateralIsETH: PropTypes.bool.isRequired,\n};\n\nexport default OptionOverview;\n","import React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport ExerciseModal from './ExerciseModal';\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nimport { getAllVaultsForOption } from '../../utils/graph';\nimport tracker from '../../utils/tracker';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport { allOptions } from '../../constants/options';\n\nfunction OptionPage({ user }) {\n  const { token } = useParams();\n  tracker.pageview(`/option/${token}`);\n  const option = allOptions.find((o) => o.addr === token);\n\n  const [vaults, setVaults] = useState([]);\n\n  const collateralIsETH = option.collateral.addr === ETH_ADDRESS;\n\n  useMemo(async () => {\n    // Get All vaults once\n    const allVaults = await getAllVaultsForOption(token);\n    setVaults(allVaults);\n  }, [token]);\n\n  return (\n    <>\n      <Header\n        primary={option.name}\n        secondary={(\n          <ExerciseModal\n            user={user}\n            token={token}\n            vaults={vaults}\n          />\n        )}\n      />\n      {/* Basic Info Header */}\n      <OptionInfoBox\n        token={token}\n        collateralIsETH={collateralIsETH}\n      />\n      {/* List of Vaults */}\n      <VaultsList\n        token={token}\n        user={user}\n        vaults={vaults}\n        collateralIsETH={collateralIsETH}\n      />\n    </>\n  );\n}\n\nOptionPage.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default OptionPage;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { BalanceBlock, RatioTag, HelperText } from '../common';\nimport { formatDigits, toTokenUnitsBN } from '../../utils/number';\nimport * as MyPTypes from '../types';\n\nconst HeaderDashboard = ({\n  ratio,\n  minRatio,\n  symbol,\n  vault,\n  decimals,\n  newRatio,\n  collateralDecimals,\n  useCollateral,\n}) => {\n  const tokenInUnit = vault.oTokensIssued\n    ? toTokenUnitsBN(vault.oTokensIssued, decimals).toNumber()\n    : '0';\n  const collateralBalance = vault.collateral\n    ? toTokenUnitsBN(vault.collateral, collateralDecimals).toString()\n    : '0';\n\n  return (\n    <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset=\"Total Collateral\" balance={formatDigits(collateralBalance, 6)} />\n      </div>\n      <div style={{ width: '50%' }}>\n        <BalanceBlock asset={`${symbol} Issued`} balance={tokenInUnit.toString()} />\n      </div>\n      <div style={{ width: '20%' }}>\n        <>\n          <div style={{ fontSize: 14, padding: 3 }}>\n            Current Ratio\n            {' '}\n            {ratio > 0 ? (\n              <RatioTag isSafe={ratio >= minRatio} ratio={ratio} useCollateral={useCollateral} />\n            ) : (\n              <></>\n            )}\n          </div>\n          <div style={{ fontSize: 24, padding: 3 }}>\n            <span style={{ fontSize: 24 }}>{formatDigits(ratio, 5).split('.')[0]}</span>\n            .\n            <span style={{ fontSize: 18 }}>\n              {formatDigits(ratio, 5).split('.')[1]}\n              {' '}\n            </span>\n            {minRatio > 0 ? (\n              <span style={{ fontSize: 16 }}>\n                {' '}\n                /\n                {' '}\n                {minRatio}\n                {' '}\n              </span>\n            ) : ''}\n          </div>\n          <>\n            {' '}\n            {newRatio === ratio ? (\n              ''\n            ) : (\n              <HelperText label=\"New Ratio\" amt={newRatio.toString()} />\n            )}\n            {' '}\n          </>\n        </>\n      </div>\n    </div>\n  );\n};\n\nHeaderDashboard.propTypes = {\n  ratio: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  symbol: PropTypes.string.isRequired,\n  vault: MyPTypes.vault.isRequired,\n  decimals: PropTypes.number.isRequired,\n  newRatio: PropTypes.number.isRequired,\n  collateralDecimals: PropTypes.number.isRequired,\n  useCollateral: PropTypes.bool.isRequired,\n};\n\nexport default HeaderDashboard;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport { addETHCollateral, addERC20Collateral, removeCollateral } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common';\n\nimport { formatDigits, toTokenUnitsBN, toBaseUnitBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation';\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport * as MyPTypes from '../types';\n\n/**\n *\n * @param {{\n * isOwner: boolean,\n * strikePrice:number,\n * strikeValue:BigNumber,\n * collateralAssetBalance: BigNumber\n * collateral: {addr:string, symbol:string, decimals:number}\n * }} param0\n */\nfunction CollateralManagement({\n  isOwner,\n  vault,\n  collateral,\n  collateralAssetBalance, // Bignumber, / token unit\n  token,\n  owner,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  setNewRatio,\n}) {\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0); // in token unit\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0); // in token unit\n\n  const collateralIsETH = collateral.addr === ETH_ADDRESS;\n\n  /**\n   * @param {number} newCollateral in wei\n   */\n  // eslint-disable-next-line consistent-return\n  const updateNewRatio = (newCollateral) => {\n    if (!newCollateral || newCollateral <= 0) return 0;\n    const str = newCollateral.toString();\n    const newRatio = calculateRatio(str, vault.oTokensIssued, strikePrice, strikeValue);\n    setNewRatio(formatDigits(newRatio, 5));\n  };\n\n  return (\n    <Box heading=\"Collateral\">\n      <div style={{ display: 'flex' }}>\n        {/* balance */}\n        <div style={{ width: '30%' }}>\n          {BalanceBlock({\n            asset: `Your ${collateral.symbol} Balance`,\n            balance: formatDigits(collateralAssetBalance.toString(), 6),\n          })}\n        </div>\n        {/* Add collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={addCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value;\n                    if (amt === '') {\n                      setAddCollateralAmt(0);\n                      return;\n                    }\n                    setAddCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateral.decimals);\n                    const newCollateralInWei = new BigNumber(vault.collateral).plus(amtRaw).toNumber();\n                    updateNewRatio(newCollateralInWei);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setAddCollateralAmt(collateralAssetBalance.toNumber());\n                    const collateralBalanceRaw = toBaseUnitBN(collateralAssetBalance, collateral.decimals);\n                    const newCollateral = new BigNumber(vault.collateral).plus(collateralBalanceRaw).toNumber();\n                    updateNewRatio(newCollateral);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Add\"\n                onClick={() => {\n                  if (collateralIsETH) {\n                    addETHCollateral(token, owner, addCollateralAmt);\n                  } else {\n                    addERC20Collateral(\n                      collateral.addr,\n                      token,\n                      owner,\n                      toBaseUnitBN(addCollateralAmt, collateral.decimals),\n                    );\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={removeCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value;\n                    if (amt === '') {\n                      setRemoveCollateralAmt(0);\n                      return;\n                    }\n                    setRemoveCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateral.decimals);\n                    const newCollateralWei = new BigNumber(vault.collateral).minus(amtRaw).toNumber();\n                    updateNewRatio(newCollateralWei);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikeValue.toNumber() <= 0) return;\n                    const strikePriceBN = new BigNumber(strikePrice);\n                    const tokenIssuedBN = new BigNumber(vault.oTokensIssued);\n                    const minRatioBN = new BigNumber(minRatio);\n                    const minCollateral = strikePriceBN.times(tokenIssuedBN).times(minRatioBN).times(strikeValue);\n                    // const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                    // const minCollateral = minValueInStrike * strikeValue;\n                    const maxToRemove = new BigNumber(vault.collateral).minus(minCollateral).toString();\n                    const maxToRemoveInTokenUnit = toTokenUnitsBN(maxToRemove, collateral.decimals).toNumber();\n                    setRemoveCollateralAmt(maxToRemoveInTokenUnit);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Remove\"\n                onClick={() => {\n                  removeCollateral(\n                    collateral.addr,\n                    token,\n                    toBaseUnitBN(removeCollateralAmt, collateral.decimals).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nCollateralManagement.propTypes = {\n  isOwner: PropTypes.bool.isRequired,\n  vault: MyPTypes.vault.isRequired,\n  collateral: MyPTypes.token.isRequired,\n  collateralAssetBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  token: PropTypes.string.isRequired,\n  owner: PropTypes.string.isRequired,\n  strikeValue: PropTypes.instanceOf(BigNumber).isRequired,\n  strikePrice: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  setNewRatio: PropTypes.func.isRequired,\n};\n\nexport default CollateralManagement;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport { burnOToken, issueOToken } from '../../utils/web3';\nimport { BalanceBlock, MaxButton } from '../common';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation';\nimport * as MyPTypes from '../types';\n/**\n *\n * @param {{\n * strikeValue: BigNumber,\n * tokenBalance: BigNumber,\n * strikePrice: Number,\n * decimals: Number\n * }} param0\n */\nfunction IssuedTokenManagement({\n  isOwner,\n  vault,\n  tokenBalance,\n  token,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  decimals,\n  symbol,\n  setNewRatio,\n}) {\n  const [issueAmt, setIssueAmt] = useState(new BigNumber(0));\n  const [burnAmt, setBurnAmt] = useState(new BigNumber(0));\n\n  /**\n   *\n   * @param {BigNumber} newAmt in raw amt\n   */\n  const updateNewRatio = (newAmt) => {\n    if (newAmt.lte(new BigNumber(0))) return;\n    const newRatio = calculateRatio(vault.collateral, newAmt, strikePrice, strikeValue);\n    setNewRatio(newRatio);\n  };\n\n  const onChangeIssueAmt = (intputAmt) => {\n    if (!intputAmt) {\n      setIssueAmt(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt);\n    setIssueAmt(amountBN);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).plus(toBaseUnitBN(amountBN, decimals)));\n  };\n\n  const onClickIssueToken = () => {\n    issueOToken(\n      token,\n      toBaseUnitBN(issueAmt, decimals).toString(),\n    );\n  };\n\n  const onChangeBurnAmt = (intputAmt) => {\n    if (!intputAmt) {\n      setBurnAmt(new BigNumber(0));\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).minus(toBaseUnitBN(amountBN, decimals)));\n    setBurnAmt(amountBN);\n  };\n\n  const onClickBurnToken = () => {\n    burnOToken(\n      token,\n      toBaseUnitBN(burnAmt, decimals).toString(),\n    );\n  };\n\n  return (\n    <Box heading=\"Total Issued\">\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock\n            asset={`Owner ${symbol} Balance `}\n            balance={tokenBalance.toString()}\n          />\n        </div>\n        {/* Issue More Token */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={issueAmt}\n                  onChange={(event) => onChangeIssueAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikePrice <= 0) return;\n                    const maxTotal = new BigNumber(vault.collateral).div(\n                      new BigNumber(minRatio).times(new BigNumber(strikePrice)).times(strikeValue),\n                    );\n                    const maxToIssueRaw = maxTotal.minus(new BigNumber(vault.oTokensIssued));\n                    const maxToIssue = toTokenUnitsBN(maxToIssueRaw, decimals);\n                    setIssueAmt(maxToIssue);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Issue\"\n                onClick={onClickIssueToken}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={burnAmt}\n                  onChange={(event) => onChangeBurnAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    const issued = toTokenUnitsBN(vault.oTokensIssued, decimals);\n                    const maxToBurn = tokenBalance.lt(issued) ? tokenBalance : issued; // min (issued, tokenBalance)\n                    setBurnAmt(maxToBurn);\n                    updateNewRatio(issued.minus(maxToBurn));\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Burn\"\n                onClick={onClickBurnToken}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nIssuedTokenManagement.propTypes = {\n  isOwner: PropTypes.bool.isRequired,\n  vault: MyPTypes.vault.isRequired,\n  tokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  token: PropTypes.string.isRequired,\n  strikeValue: PropTypes.instanceOf(BigNumber).isRequired,\n  strikePrice: PropTypes.number.isRequired,\n  minRatio: PropTypes.number.isRequired,\n  decimals: PropTypes.number.isRequired,\n  symbol: PropTypes.string.isRequired,\n  setNewRatio: PropTypes.func.isRequired,\n};\n\nexport default IssuedTokenManagement;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport {\n  Box, DataView, IdentityBadge, TransactionBadge, TextInput, Button,\n} from '@aragon/ui';\n\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { getLiquidationHistory } from '../../utils/graph';\nimport {\n  formatDigits, fromWei, toTokenUnitsBN, timeSince, toBaseUnitBN,\n} from '../../utils/number';\n\n/**\n *\n * @param {{userTokenBalance: BigNumber}} param0\n */\nfunction LiquidationHistory({\n  owner, token, isOwner, tokenDecimals, userTokenBalance,\n}) {\n  const [maxLiquidatable, setMaxLiquidatable] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  const [amountToLiquidate, setAmtToLiquidate] = useState(0);\n\n  useEffect(() => {\n    async function updateLiquidatable() {\n      const maxToLiquidate = await getMaxLiquidatable(token, owner);\n      setMaxLiquidatable(toTokenUnitsBN(maxToLiquidate, tokenDecimals).toNumber());\n    }\n    updateLiquidatable();\n  }, [owner, token, tokenDecimals]);\n\n  useMemo(async () => {\n    async function updateList() {\n      const actions = await getLiquidationHistory(owner);\n      const actionsForThisVault = actions.filter(\n        (entry) => entry.vault.optionsContract.address === token,\n      ).sort((actionA, actionB) => {\n        if (actionA.timestamp > actionB.timestamp) return -1;\n        return 1;\n      });\n      setEntries(actionsForThisVault);\n      setIsLoading(false);\n    }\n    updateList();\n  }, [owner, token]);\n\n  return (\n    <>\n      {isOwner ? (\n        <></>\n      ) : (\n        <Box heading=\"Liquidate\">\n          <>\n            <div style={{ display: 'flex' }}>\n              {/* balance */}\n              <div style={{ width: '30%' }}>\n                <BalanceBlock asset=\"Max To Liquidate\" balance={maxLiquidatable} />\n              </div>\n              <div style={{ width: '70%', paddingTop: '2%' }}>\n                <div style={{ display: 'flex' }}>\n                  <div style={{ width: '60%' }}>\n                    <>\n                      <TextInput\n                        type=\"number\"\n                        wide\n                        value={amountToLiquidate}\n                        onChange={(event) => {\n                          setAmtToLiquidate(event.target.value);\n                        }}\n                      />\n                      <MaxButton\n                        onClick={() => {\n                          const maximum = Math.min(userTokenBalance.toNumber(), maxLiquidatable);\n                          setAmtToLiquidate(maximum);\n                        }}\n                      />\n                    </>\n                  </div>\n                  <div style={{ width: '40%' }}>\n                    <Button\n                      disabled={maxLiquidatable <= 0}\n                      label=\"Liquidate\"\n                      onClick={() => {\n                        const amtToLiquidate = toBaseUnitBN(\n                          amountToLiquidate,\n                          tokenDecimals,\n                        ).toString();\n                        liquidate(token, owner, amtToLiquidate);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        </Box>\n      )}\n\n      {/* History Section */}\n      <Box heading=\"History\">\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Liquidator', 'Date']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            collateralToPay, liquidator, timestamp, transactionHash,\n          }) => [\n            <TransactionBadge transaction={transactionHash} />,\n            formatDigits(fromWei(collateralToPay), 5),\n            <IdentityBadge entity={liquidator} />,\n            timeSince(parseInt(timestamp, 10) * 1000),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nLiquidationHistory.propTypes = {\n  owner: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  isOwner: PropTypes.bool.isRequired,\n  tokenDecimals: PropTypes.number.isRequired,\n  userTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n};\nexport default LiquidationHistory;\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box, DataView, IdentityBadge, TransactionBadge,\n} from '@aragon/ui';\n\n\nimport { getExerciseHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\nfunction ExerciseHistory({\n  owner, token, collateralDecimals, tokenDecimals,\n}) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  useMemo(async () => {\n    const actions = await getExerciseHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n      {/* History Section */}\n      <Box heading=\"History\">\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Collateral', 'oToken', 'Exerciser', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            amtCollateralToPay, oTokensToExercise, exerciser, timestamp, transactionHash,\n          }) => [\n            <TransactionBadge transaction={transactionHash} />,\n            formatDigits(\n              toTokenUnitsBN(amtCollateralToPay, collateralDecimals).toNumber(),\n              5,\n            ),\n            formatDigits(\n              toTokenUnitsBN(oTokensToExercise, tokenDecimals).toNumber(),\n              5,\n            ),\n            <IdentityBadge entity={exerciser} />,\n            timeSince(parseInt(timestamp * 1000, 10)),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nExerciseHistory.propTypes = {\n  owner: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  collateralDecimals: PropTypes.number.isRequired,\n  tokenDecimals: PropTypes.number.isRequired,\n};\n\nexport default ExerciseHistory;\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box, DataView, Button, TransactionBadge,\n} from '@aragon/ui';\nimport { BalanceBlock } from '../common';\nimport { removeUnderlying } from '../../utils/web3';\nimport { getRemoveUnderlyingHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\nfunction RemoveUnderlying({\n  owner, token, underlyingDecimals, underlyingAmount,\n}) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  useMemo(async () => {\n    const actions = await getRemoveUnderlyingHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n\n      <Box heading=\"Underlying\">\n        <div style={{ display: 'flex' }}>\n          {/* balance */}\n          <div style={{ width: '30%' }}>\n            {BalanceBlock({\n              asset: 'Redeemable',\n              balance: formatDigits(toTokenUnitsBN(underlyingAmount, underlyingDecimals), 6),\n            })}\n          </div>\n          <div style={{ width: '70%', padding: '2%' }}>\n            <Button\n              label=\"Redeem Underlying\"\n              onClick={() => { removeUnderlying(token); }}\n            />\n          </div>\n        </div>\n        <br />\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Timestamp']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({\n            transactionHash, amount, timestamp,\n          }) => [\n            <TransactionBadge shorten={false} transaction={transactionHash} />,\n            formatDigits(\n              toTokenUnitsBN(amount, underlyingDecimals).toNumber(),\n              5,\n            ),\n            timeSince(parseInt(timestamp * 1000, 10)),\n          ]}\n        />\n      </Box>\n    </>\n  );\n}\n\nRemoveUnderlying.propTypes = {\n  owner: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  underlyingDecimals: PropTypes.number.isRequired,\n  underlyingAmount: PropTypes.string.isRequired,\n};\n\nexport default RemoveUnderlying;\n","import React, { useState, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Header, Tabs, Box, Timer, Button,\n} from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport HeaderDashboard from './HeaderDashboard';\nimport CollateralManagement from './CollateralManagement';\nimport IssuedTokenManagement from './IssuedTokenManagement';\nimport LiquidationHistory from './Liquidation';\nimport ExerciseHistory from './Exercise';\nimport UnderlyingManagement from './UnderlyingManagement';\n\nimport { Comment } from '../common';\n\nimport { toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getTokenBalance, getBalance } from '../../utils/infura';\nimport { getVault } from '../../utils/graph';\nimport { redeem } from '../../utils/web3';\n\nimport { ETH_ADDRESS } from '../../constants/contracts';\nimport { allOptions } from '../../constants/options';\nimport tracker from '../../utils/tracker';\n\nfunction ManageVault({ user }) {\n  const { token, owner } = useParams();\n  tracker.pageview(`/manage/${token}`);\n  const option = allOptions.find((o) => o.addr === token);\n  const {\n    decimals, symbol, oracle, strike, strikePrice, minRatio,\n    collateral, expiry, underlying,\n  } = option;\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Tab Navigation\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const [vault, setVault] = useState({});\n  const [strikeValueInCollateral, setStrikeValue] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(0);\n\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [userCollateralAssetBalance, setUserCollateralAssetBalance] = useState(new BigNumber(0));\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n  const [newRatio, setNewRatio] = useState(ratio);\n\n  const collateralIsETH = collateral.addr === ETH_ADDRESS;\n  const vaultUsesCollateral = collateral.addr !== strike.addr;\n\n  useMemo(() => {\n    let isCancelled = false;\n    async function updateInfo() {\n      const vaultToManage = await getVault(owner, token);\n      if (vaultToManage === null) {\n        setIsLoading(false);\n        return;\n      }\n\n      setNoVault(false);\n      const [_ownerTokenBalance, _userTokenBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getTokenBalance(token, user),\n      ]);\n\n      // SetUserCollateralAmount\n      let collateralBalance = new BigNumber(0);\n      // let colltDecimals = 18;\n\n      if (collateralIsETH) {\n        collateralBalance = new BigNumber(await getBalance(user));\n      } else {\n        const userColltBalance = await getTokenBalance(collateral.addr, user);\n        collateralBalance = toTokenUnitsBN(userColltBalance, collateral.decimals);\n      }\n\n      const ownerTokenBalanceBN = toTokenUnitsBN(_ownerTokenBalance, decimals);\n      const userTokenBalanceBN = toTokenUnitsBN(_userTokenBalance, decimals);\n\n      const strikeValInCollt = await calculateStrikeValueInCollateral(\n        collateral.addr,\n        strike.addr,\n        oracle,\n        collateral.decimals,\n      );\n      const currentRatio = calculateRatio(\n        vaultToManage.collateral,\n        vaultToManage.oTokensIssued,\n        strikePrice,\n        strikeValInCollt,\n      );\n\n      if (!isCancelled) {\n        setStrikeValue(strikeValInCollt);\n        setVault(vaultToManage);\n        setOwnerTokenBalance(ownerTokenBalanceBN);\n        setUserTokenBalance(userTokenBalanceBN);\n        setRatio(currentRatio);\n        setUserCollateralAssetBalance(collateralBalance);\n        setIsLoading(false);\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 60000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [\n    collateral,\n    collateralIsETH,\n    decimals,\n    oracle,\n    owner,\n    strike,\n    strikePrice,\n    token,\n    user,\n  ]);\n\n  const isOwner = user === owner;\n\n  return noVault\n    ? isLoading ? (\n      <Comment text=\"Loading...\" />\n    )\n      : (\n        <Comment text=\"No Vault Found for this user under this contract\" />\n      ) : (\n        <>\n          <Header\n            primary={isOwner ? 'Manage My Vault' : 'Vault Detail'}\n            secondary={\n          expiry * 1000 > Date.now() ? (\n            <Timer end={new Date(expiry * 1000)} />\n          ) : (\n            <Button onClick={() => redeem(token)} label=\"Redeem\" />\n          )\n        }\n          />\n\n          <HeaderDashboard\n            owner={owner}\n            user={user}\n            ratio={ratio}\n            minRatio={minRatio}\n            vault={vault}\n            decimals={decimals}\n            symbol={symbol}\n            newRatio={newRatio}\n            useCollateral={vaultUsesCollateral}\n            collateralIsETH={collateralIsETH}\n            collateralDecimals={collateral.decimals}\n          />\n\n          <Tabs\n            items={['Collateral Management', 'Token Issuance', 'Liquidation', 'Exercise', 'Underlying Redemption']}\n            selected={tabSelected}\n            onChange={setTabSelected}\n          />\n\n          {tabSelected === 0 ? (\n            <CollateralManagement\n              isOwner={isOwner}\n              vault={vault}\n              collateralAssetBalance={userCollateralAssetBalance}\n              collateral={collateral}\n              token={token}\n              owner={owner}\n              strikeValue={strikeValueInCollateral}\n              strikePrice={strikePrice}\n              minRatio={minRatio}\n              setNewRatio={setNewRatio}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 1 ? (\n            <IssuedTokenManagement\n              isOwner={isOwner}\n              vault={vault}\n              tokenBalance={ownerTokenBalance}\n              token={token}\n              strikeValue={strikeValueInCollateral}\n              strikePrice={strikePrice}\n              minRatio={minRatio}\n              decimals={decimals}\n              symbol={symbol}\n              setNewRatio={setNewRatio}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 2 ? (\n            vaultUsesCollateral ? (\n              <LiquidationHistory\n                userTokenBalance={userTokenBalance}\n                isOwner={isOwner}\n                owner={owner}\n                token={token}\n                tokenDecimals={decimals}\n              />\n            ) : (\n              <Box> This vault cannot be liquidated </Box>\n            )\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 3 ? (\n            <ExerciseHistory\n              owner={owner}\n              token={token}\n              tokenDecimals={decimals}\n              collateralDecimals={collateral.decimals}\n            />\n          ) : (\n            <></>\n          )}\n\n          {tabSelected === 4 ? (\n            <UnderlyingManagement\n              owner={owner}\n              token={token}\n              underlyingDecimals={underlying.decimals}\n              underlyingAmount={vault.underlying}\n            />\n          ) : <> </>}\n        </>\n    );\n}\n\nManageVault.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default ManageVault;\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\n\nimport { BalanceBlock, AddressBlock } from '../common';\n\n/**\n *\n * @param {{ poolTokenBalance: BigNumber, poolETHBalance: BigNumber }}\n */\nconst TradePageHeader = ({\n  symbol, poolETHBalance, poolTokenBalance, uniswapExchange,\n}) => (\n  <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n    <div style={{ width: '30%' }}>\n      <BalanceBlock asset=\"Total ETH Liquidity\" balance={poolETHBalance} />\n    </div>\n    <div style={{ width: '30%' }}>\n      <BalanceBlock asset={`${symbol} Liquidity`} balance={poolTokenBalance} />\n    </div>\n    <div style={{ width: '40%' }}>\n      <>\n        <AddressBlock label=\"Uniswap Contract\" address={uniswapExchange} />\n      </>\n    </div>\n  </div>\n);\n\nTradePageHeader.propTypes = {\n  symbol: PropTypes.string.isRequired,\n  poolETHBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  poolTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n};\n\nexport default TradePageHeader;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconCircleMinus,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { buyOTokensFromExchange, sellOTokensFromExchange } from '../../utils/web3';\n\nimport { getPremiumToPay, getPremiumReceived } from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN, fromWei } from '../../utils/number';\n\n/**\n *\n * @param {{\n *  decimals: number\n *  tokenBalance: BigNumber\n * }} param0\n */\nfunction OptionExchange({\n  symbol, tokenBalance, token, exchange, decimals,\n}) {\n  const [buyAmt, setBuyAmt] = useState(new BigNumber(0));\n  const [sellAmt, setSellAmt] = useState(new BigNumber(0));\n  const [premiumToPay, setPremiumToPay] = useState(new BigNumber(0));\n  const [premiumReceived, setPremiumReceived] = useState(new BigNumber(0));\n\n  const updatePremiumToPay = async (amt) => {\n    const butAmountBN = new BigNumber(amt);\n    if (butAmountBN.lte(new BigNumber(0))) {\n      setPremiumToPay(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(butAmountBN, decimals).toString();\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(new BigNumber(fromWei(premium)));\n  };\n\n  const updatePremiumReceived = async (amt) => {\n    const sellAmountBN = new BigNumber(amt);\n    if (sellAmountBN.lte(new BigNumber(0))) {\n      setPremiumReceived(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(sellAmountBN, decimals).toString();\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(new BigNumber(premium));\n  };\n\n  return (\n    <Box heading=\"Exchange\">\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`${symbol} Balance`} balance={tokenBalance} />\n        </div>\n        {/* Buy Token from Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={buyAmt}\n                  onChange={(event) => {\n                    if (event.target.value) {\n                      setBuyAmt(event.target.value);\n                      updatePremiumToPay(event.target.value);\n                    } else {\n                      setBuyAmt(new BigNumber(0));\n                      updatePremiumToPay(new BigNumber(0));\n                    }\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Buy\"\n                onClick={() => {\n                  buyOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(buyAmt, decimals).toString(),\n                    toBaseUnitBN(premiumToPay, 18).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label=\"Cost:\" amt={premiumToPay} symbol=\"\" />\n        </div>\n        <div style={{ width: '6%' }} />\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type=\"number\"\n                  wide\n                  value={sellAmt}\n                  onChange={(event) => {\n                    if (event.target.value) {\n                      setSellAmt(event.target.value);\n                      updatePremiumReceived(event.target.value);\n                    } else {\n                      setSellAmt(new BigNumber(0));\n                      updatePremiumReceived(new BigNumber(0));\n                    }\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setSellAmt(tokenBalance);\n                    updatePremiumReceived(tokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Sell\"\n                onClick={() => {\n                  sellOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(sellAmt, decimals).toString(),\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label=\"Premium\" amt={premiumReceived} />\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nOptionExchange.propTypes = {\n  symbol: PropTypes.string.isRequired,\n  tokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  token: PropTypes.string.isRequired,\n  exchange: PropTypes.string.isRequired,\n  decimals: PropTypes.number.isRequired,\n};\n\nexport default OptionExchange;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BigNumber from 'bignumber.js';\nimport {\n  Box, TextInput, Button, IconCirclePlus, IconEthereum,\n} from '@aragon/ui';\nimport { addLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\n\n/**\n *\n * @param {{\n * poolTokenBalance: BigNumber,\n * poolETHBalance:BigNumber,\n * liquidityTokenSupply: BigNumber,\n * userTokenBalance: BigNumber,\n * userETHBalance:BigNumber\n * uniswapExchange: string\n * }} param0\n */\nfunction AddLiquidity({\n  otoken,\n  otokenSymbol,\n  otokenDecimals,\n  userTokenBalance,\n  userETHBalance,\n  uniswapExchange,\n  poolTokenBalance,\n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply,\n}) {\n  const SLIPPAGE_RATE = 2;\n\n\n  const [amtETHToAdd, setAmtETHToAdd] = useState(new BigNumber(0));\n  const [amtTokenToAdd, setAmtTokenToAdd] = useState(new BigNumber(0));\n\n  const liquidityMinted = (liquidityTokenSupply.times(amtETHToAdd)).div(poolETHBalance);\n  const liquidityMintedMin = (liquidityMinted.times(new BigNumber(100 - SLIPPAGE_RATE))).div(new BigNumber(100));\n  const ethToTokenRatio = poolETHBalance.div(poolTokenBalance);\n  const tokenToEthRatio = poolTokenBalance.div(poolETHBalance);\n\n  const onChangeETHAmtToSend = (ethAmt) => {\n    if (!ethAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return;\n    }\n\n    const newTokenAmt = (new BigNumber(ethAmt).times(tokenToEthRatio));\n    setAmtETHToAdd(new BigNumber(ethAmt));\n    setAmtTokenToAdd(newTokenAmt);\n  };\n\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return;\n    }\n\n    const newEthAmt = new BigNumber(tokenAmt).times(ethToTokenRatio);\n    setAmtETHToAdd(newEthAmt);\n    setAmtTokenToAdd(new BigNumber(tokenAmt));\n  };\n\n  return (\n    <Box heading=\"Add Liquidity\">\n      <div style={{ display: 'flex' }}>\n        {/* Pool Status */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset=\"ETH Balance\" balance={userETHBalance} />\n        </div>\n        {/* Add Liquidity too pool */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <TextInput\n                  adornmentPosition=\"end\"\n                  adornment={otokenSymbol}\n                  type=\"number\"\n                  wide\n                  value={amtTokenToAdd.toNumber()}\n                  onChange={(event) => {\n                    onChangeTokenAmtToSend(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    onChangeTokenAmtToSend(userTokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment={<IconEthereum />}\n                type=\"number\"\n                wide\n                value={amtETHToAdd.toNumber()}\n                onChange={(event) => {\n                  onChangeETHAmtToSend(event.target.value);\n                }}\n              />\n              <PriceSection label=\"Mint\" amt={liquidityMinted} symbol=\"Pool Tokens\" />\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide\n                icon={<IconCirclePlus />}\n                label=\"Add Liquidity\"\n                onClick={() => {\n                  const maxToken = toBaseUnitBN(amtTokenToAdd, otokenDecimals).toString();\n                  const minLiquidity = toBaseUnitBN(liquidityMintedMin, liquidityTokenDecimals).toString();\n                  const ethWei = toBaseUnitBN(amtETHToAdd, 18).toString();\n                  addLiquidity(\n                    otoken,\n                    uniswapExchange,\n                    maxToken,\n                    minLiquidity,\n                    ethWei,\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nAddLiquidity.propTypes = {\n  otoken: PropTypes.string.isRequired,\n  otokenSymbol: PropTypes.string.isRequired,\n  otokenDecimals: PropTypes.number.isRequired,\n  userTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  userETHBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n  poolTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  poolETHBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  liquidityTokenDecimals: PropTypes.number.isRequired,\n  liquidityTokenSupply: PropTypes.instanceOf(BigNumber).isRequired,\n};\n\nexport default AddLiquidity;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box, TextInput, Button, IconCircleMinus, IconFundraising,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport { removeLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton, PriceSection } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\n\n/**\n *\n * @param {{\n *  otokenDecimals: number,\n *  liquidityTokenDecimals: number,\n *  otokenSymbol: string,\n *  uniswapExchange: string\n *  userliquidityTokenBalance: BigNumber\n *  poolTokenBalance: BigNumber\n *  poolETHBalance: BigNumber\n *  liquidityTokenDecimals: BigNumber\n *  liquidityTokenSupply: BigNumber\n *\n * }} param0\n */\nfunction RemoveLiquidity({\n  otokenSymbol,\n  otokenDecimals,\n  userliquidityTokenBalance,\n  uniswapExchange,\n  poolTokenBalance,\n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply,\n}) {\n  const SLIPPAGE_RATE = 2;\n\n  const [amtLiquidityTokenToSell, setAmtLiquidityTokenToSell] = useState(new BigNumber(0));\n\n  const poolPortion = amtLiquidityTokenToSell.div(liquidityTokenSupply);\n  const estETHRecieved = poolETHBalance.times(poolPortion);\n  const estOTokenReceived = poolTokenBalance.times(poolPortion);\n\n  const minETHReceived = estETHRecieved.times(new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100));\n  const minTokenReceived = estOTokenReceived.times(new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100));\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtLiquidityTokenToSell(new BigNumber(0));\n      return;\n    }\n    const tokenAmtBN = new BigNumber(tokenAmt);\n    setAmtLiquidityTokenToSell(tokenAmtBN);\n  };\n\n  return (\n    <Box heading=\"Remove Liquidity\">\n      <div style={{ display: 'flex' }}>\n        {/* Pool Token in Hold */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset=\"Pool Token Balance\" balance={userliquidityTokenBalance} />\n        </div>\n        {/* Remove */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition=\"end\"\n                adornment={<IconFundraising />}\n                type=\"number\"\n                wide\n                value={amtLiquidityTokenToSell.toNumber()}\n                onChange={(event) => {\n                  onChangeTokenAmtToSend(event.target.value);\n                }}\n              />\n              <MaxButton\n                onClick={() => setAmtLiquidityTokenToSell(userliquidityTokenBalance)}\n              />\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <PriceSection label=\"You get\" amt={estETHRecieved} symbol=\"ETH\" />\n                <PriceSection label=\"+\" amt={estOTokenReceived} symbol={otokenSymbol} />\n              </>\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide\n                icon={<IconCircleMinus />}\n                label=\"Remove Liquidity\"\n                onClick={() => {\n                  const amt = toBaseUnitBN(amtLiquidityTokenToSell, liquidityTokenDecimals).toString();\n                  const min_eth = toBaseUnitBN(minETHReceived, 18).toString();\n                  const min_token = toBaseUnitBN(minTokenReceived, otokenDecimals).toString();\n\n                  removeLiquidity(\n                    uniswapExchange,\n                    amt,\n                    min_eth,\n                    min_token,\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nRemoveLiquidity.propTypes = {\n  otokenSymbol: PropTypes.string.isRequired,\n  otokenDecimals: PropTypes.number.isRequired,\n  userliquidityTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  uniswapExchange: PropTypes.string.isRequired,\n  poolTokenBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  poolETHBalance: PropTypes.instanceOf(BigNumber).isRequired,\n  liquidityTokenDecimals: PropTypes.number.isRequired,\n  liquidityTokenSupply: PropTypes.instanceOf(BigNumber).isRequired,\n};\n\nexport default RemoveLiquidity;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  getTokenBalance, getBalance, getTotalSupply,\n} from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number';\n\nimport { allOptions } from '../../constants/options';\n\nimport TradePageHeader from './Header';\nimport OptionExchange from './OptionExchange';\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity';\n\nimport tracker from '../../utils/tracker';\n\nfunction UniswapPool({ user }) {\n  const liquidityTokenDecimals = 18;\n\n  const { token } = useParams();\n  tracker.pageview(`trade/${token}`);\n  const option = allOptions.find((o) => o.addr === token);\n  const {\n    uniswapExchange, decimals, symbol, exchange,\n  } = option;\n\n  const [poolTokenBalance, setPoolTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [poolETHBalance, setPoolETHBalance] = useState(new BigNumber(0));\n  const [userETHBalance, setUserETHBalance] = useState(new BigNumber(0));\n\n  const [userliquidityTokenBalance, setUserLiquidityTokenBalance] = useState(new BigNumber(0));\n  const [liquidityTokenSupply, setLiquidityTokenSupply] = useState(new BigNumber(0));\n\n  // Update Uniswap Pool Info\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      const [exTokenBalance, exchagneETHBalance, liqTokenTotalSupply] = await Promise.all([\n        getTokenBalance(token, uniswapExchange),\n        getBalance(uniswapExchange),\n        getTotalSupply(uniswapExchange),\n      ]);\n      // const { decimals: liqTokenDecimal, totalSupply: liqTokenTotalSupply } = liquidityTokenInfo;\n      const exchangeTokenBalance = toTokenUnitsBN(exTokenBalance, decimals);\n      if (!isCancelled) {\n        setLiquidityTokenSupply(toTokenUnitsBN(liqTokenTotalSupply, liquidityTokenDecimals));\n        setPoolETHBalance(new BigNumber(exchagneETHBalance));\n        setPoolTokenBalance(exchangeTokenBalance);\n      }\n    }\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 15000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, token, uniswapExchange]);\n\n  // Update User balances\n  useEffect(() => {\n    if (user === '') return;\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [tokenBalance, userEthBalance, liqTokenBalance] = await Promise.all([\n        getTokenBalance(token, user),\n        getBalance(user),\n        getTokenBalance(uniswapExchange, user),\n      ]);\n\n      const userOTknBalanceBN = toTokenUnitsBN(tokenBalance, decimals);\n      const userLiqTknBalanceBN = toTokenUnitsBN(liqTokenBalance, liquidityTokenDecimals);\n      if (!isCancelled) {\n        setUserLiquidityTokenBalance(userLiqTknBalanceBN);\n        setUserETHBalance(new BigNumber(userEthBalance));\n        setUserTokenBalance(userOTknBalanceBN);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, liquidityTokenDecimals, token, uniswapExchange, user]);\n\n  return (\n    <>\n      <Header primary=\"Exchange\" />\n\n      <TradePageHeader\n        user={user}\n        symbol={symbol}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        uniswapExchange={uniswapExchange}\n      />\n\n      <OptionExchange\n        symbol={symbol}\n        tokenBalance={userTokenBalance}\n        token={token}\n        exchange={exchange}\n        decimals={decimals}\n      />\n\n      <Header primary=\"Provide Liquidity\" />\n\n      <AddLiquidity\n        user={user}\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply} // in base unit\n      />\n\n      <RemoveLiquidity\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply} // in base unit\n      />\n    </>\n  );\n}\n\nUniswapPool.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default UniswapPool;\n","import React from 'react';\n\nimport { Link } from '@aragon/ui';\nimport PropTypes from 'prop-types';\n\nfunction Footer({ theme }) {\n  const style = {\n    backgroundColor: theme === 'light' ? '#F8F8F8' : '#35425e',\n    textAlign: 'center',\n    padding: '17px',\n    position: 'fixed',\n    left: '0',\n    bottom: '0',\n    height: '50px',\n    width: '100%',\n    fontSize: '14px',\n  };\n\n  return (\n    <div style={style}>\n      Powered By\n      {' '}\n      <Link external href=\"https://opyn.co/#/\">\n        Opyn\n      </Link>\n      {', '}\n      <Link external href=\"https://ui.aragon.org/\">\n        Aragon UI\n      </Link>\n      {', '}\n      <Link external href=\"https://www.blocknative.com/\">\n        Blocknative\n      </Link>\n      {'. '}\n      <Link external href=\"https://www.kollateral.co/\">\n        Kollateral\n      </Link>\n      {'. '}\n      Hosted on\n      {' '}\n      {' '}\n      <Link external href=\"https://github.com/antoncoding/opyn-liquidator\">\n        GitHub\n      </Link>\n      {/* </div> */}\n    </div>\n  );\n}\n\nFooter.propTypes = {\n  theme: PropTypes.string.isRequired,\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Main } from '@aragon/ui';\nimport { updateModalMode } from './utils/web3';\nimport { storePreference, getPreference } from './utils/storage';\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport AllOptoins from './components/AllContracts';\nimport Trade from './components/Trade';\nimport OptionTrading from './components/OptionTrading';\nimport MyVaults from './components/MyVaults';\nimport OptionPage from './components/OptionPage';\nimport ManageVault from './components/ManageVault';\nimport Uniswap from './components/UniswapTrade';\nimport Footer from './components/Footer';\n\n// testing\n// import ZEROXTest from './components/OptionTrading/test';\n\nfunction App() {\n  const storedTheme = getPreference('theme', 'light');\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (newTheme) => {\n    setTheme(newTheme);\n    updateModalMode(newTheme);\n    storePreference('theme', newTheme);\n  };\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          {/* All Options */}\n          <Route path=\"/option/:token\">\n            <OptionPage user={user} />\n          </Route>\n          <Route path=\"/options/\">\n            <AllOptoins />\n          </Route>\n          {/* My Vaults */}\n          <Route path=\"/myvaults\">\n            <MyVaults user={user} />\n          </Route>\n          <Route path=\"/manage/:token/:owner\">\n            <ManageVault user={user} />\n          </Route>\n          {/* Trading */}\n          <Route path=\"/trade/eth-options/\">\n            <OptionTrading\n              user={user}\n              theme={theme}\n            />\n          </Route>\n          {/* <Route path=\"/trades/test/\"><ZEROXTest /></Route> */}\n          <Route path=\"/trade/:token/\"><Uniswap user={user} /></Route>\n          <Route path=\"/trade/\">\n            <Trade />\n          </Route>\n          {/* HomePage */}\n          <Route path=\"/\"><HomePage /></Route>\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}