{"version":3,"sources":["utils/web3.js","utils/blockNative.js","utils/infura.js","components/NavBar/ConnectButton.js","components/NavBar/SettingsButton.js","components/NavBar/index.js","components/HomePage/index.js","constants/options.js","components/AllContracts/index.js","components/Trade/index.js","components/common/AddressBlock.js","components/common/BalanceBlock.js","components/common/RatioTag.js","components/common/SectionTitle.js","components/common/MaxButton.js","components/common/HelpText.js","components/common/VaultButton.js","utils/graph.js","utils/number.js","components/MyVaults/index.js","components/TokenView/VaultModal.js","components/TokenView/VaultsList.js","components/TokenView/OptionInfoBox.js","components/TokenView/index.js","components/ManageVault/CollateralManagement.js","components/ManageVault/IssuedTokenManagement.js","components/ManageVault/Liquidation.js","components/ManageVault/HeaderDashboard.js","components/ManageVault/Manage.js","components/ManageVault/index.js","components/ManagePool/Header.js","components/ManagePool/OptionExchange.js","components/ManagePool/AddLiquidity.js","components/ManagePool/RemoveLiquidity.js","components/ManagePool/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["web3","notify","Notify","dappId","networkId","optionContractABI","require","optionExchangeABI","oracleABI","Promise","Web3","getTokenBalance","oToken","user","a","oTokenContract","eth","Contract","methods","balanceOf","call","balance","parseInt","getDecimals","decimals","getERC20Info","address","token","totalSupply","totalSupplyDecimals","getVaults","owners","map","owner","getVault","res","collateral","utils","fromWei","oTokensIssued","underlying","vaults","getMaxLiquidatable","vaultOwner","maxOTokensLiquidatable","maxVaultLiquidatable","getAllowance","contract","spender","allowance","getBalance","getPrice","oracleAddr","oracle","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","exchange","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","oTokenABI","exchangeABI","uniswapExchangeABI","UINT256_MAX","storedTheme","window","localStorage","getItem","onboard","Onboard","darkMode","subscriptions","wallet","provider","walletSelect","description","wallets","walletName","infuraKey","apiKey","updateModalMode","theme","config","connect","walletCheck","getState","disconnect","walletReset","checkConnectedAndGetAddress","checked","liquidate","oTokenAddr","liquidateAmt","account","send","from","on","hash","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmount","value","toWei","toString","removeETHCollateral","removeCollateral","approve","amt","openVault","buyOTokensFromExchange","ethAmt","buyOTokens","sellOTokensFromExchange","BN","lt","sellOTokens","addLiquidity","uniswapAddr","maxToken","minLiquidity","ethValue","uniswapExchange","deadline","Math","ceil","Date","now","removeLiquidity","pool_token_amount","min_eth","min_tokens","min_eth_wei","ConnectButton","setUser","useState","isConnected","setIsConnected","connectWeb3","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","padding","entity","icon","label","ChangeMode","updateTheme","LinkButton","title","paddingLeft","opacity","fontSize","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","height","goBack","push","secondary","MainButton","iconUrl","width","alt","src","HomePage","display","alignItems","marginRight","marginLeft","options","addr","symbol","name","strike","strikePrice","minRatio","AllContracts","fields","entries","entriesPerPage","renderEntry","shorten","goToToken","goToTrade","AddressBlock","BalanceBlock","asset","integer","digits","str","split","length","RatioTag","isSafe","ratio","background","color","mode","SectionTitle","MaxButton","HelperText","parseFloat","toFixed","ManageVaultButton","goToManagePage","OpenVaultButton","getAllVaultsForOption","optionAddress","query","postQuery","response","data","getAllVaultsForUser","actions","getLiquidationHistory","liquidationActionsQuery","liquidateActions","method","headers","body","JSON","stringify","fetch","json","formatDigits","num","percision","handleDecimals","rawAmt","decimal","round","formatETHAmtToStr","amtInEth","strETHSegments","int","slice","toTokenUnits","tokenAmount","tokenDecimals","timeSince","timeStamp","secondsPast","getTime","ts","getDate","toDateString","match","replace","getFullYear","compareVaultRatio","vaultA","vaultB","rateA","rateB","comparison","calculateRatio","tokenIssued","strikeValueInWei","Infinity","MyVaults","opendVaults","setOpenedVaults","tokensToOpen","setTokensToOpen","useMemo","userVaults","notOpenedTokens","option","entry","find","vault","optionsContract","undefined","strikePriceInWei","oTokenName","sort","paddingBottom","VaultModal","opened","setOpened","setTokenDecimals","addValue","setAddValue","setLiquidateAmt","isCancelled","maxLiquidatable","_decimals","getData","visible","onClose","heading","type","wide","adornment","adornmentPosition","onChange","event","target","disabled","VaultOwnerList","isLoading","setIsLoading","setVaults","updateInfo","tokenPriceInWei","vaultDetail","id","setInterval","clearInterval","status","OptionOverview","tokenName","setBalance","setTotalSupply","all","tokenInfo","init","TokenView","useParams","OptionInfoBox","VaultsList","CollateralManagement","isOwner","ethBalance","lastETHValueInStrike","setNewRatio","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","updateNewRatio","newCollateral","newRatio","minCollateral","maxToRemove","IssuedTokenManagement","tokenBalance","setIssueAmt","setBurnAmt","newAmt","maxToIssue","issued","Number","min","LiquidationHistory","userTokenBalance","setMaxLiquidatable","setEntries","amountToLiquidate","setAmtToLiquidate","maxToLiquidate","updateLiquidatable","actionsForThisVault","filter","updateList","maximum","amtToLiquidate","collateralToPay","liquidator","timestamp","transactionHash","transaction","HeaderDashboard","tokenInUnit","ManageVault","tabSelected","setTabSelected","setVault","setLastETHValue","setRatio","ownerTokenBalance","setOwnerTokenBalance","setUserTokenBalance","userETHBalance","setUserETHBalance","noVault","setNoVault","_ownerTokenBalance","_userTokenBalance","lastStrikeValue","ethValueInStrike","valueProtectingInEth","textAlign","items","selected","Liquidation","Manage","poolETHBalance","poolTokenBalance","PriceSection","OptionExchange","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","updatePremiumToPay","amount","premium","updatePremiumReceived","AddLiquidity","otoken","otokenSymbol","otokenDecimals","liquidityTokenDecimals","liquidityTokenSupply","amtETHToAdd","setAmtETHToAdd","amtTokenToAdd","setAmtTokenToAdd","liquidityMinted","liquidityMintedMin","ethToTokenRatio","tokenToEthRatio","onChangeTokenAmtToSend","tokenAmt","newTokenAmt","onChangeETHAmtToSend","RemoveLiquidity","userliquidityTokenBalance","amtLiquidityTokenToSell","setAmtLiquidityTokenToSell","poolPortion","estETHRecieved","estOTokenReceived","minETHReceived","minTokenReceived","min_token","ManagePool","setPoolTokenBalance","setPoolETHBalance","setUserLiquidityTokenBalance","setLiquidityTokenDecimals","setLiquidityTokenSupply","updatePoolInfo","exchangeTokenBalance","exchagneETHBalance","liquidityTokenInfo","liqTokenDecimal","liqTokenTotalSupply","updateUserInfo","liqTokenBalance","userLiqTokenBalance","Footer","backgroundColor","position","left","bottom","external","href","App","setTheme","assetsUrl","process","setItem","path","children","Trade","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ae2a1f7b.chunk.js","sourcesContent":["import Web3 from 'web3';\nimport Onboard from 'bnc-onboard';\n\nimport { notify } from './blockNative';\nimport { getAllowance } from './infura';\nimport BN from 'bn.js';\nconst oTokenABI = require('../constants/abi/OptionContract.json');\nconst exchangeABI = require('../constants/abi/OptionExchange.json');\nconst uniswapExchangeABI = require('../constants/abi/UniswapExchange.json');\n\nconst DEADLINE_FROM_NOW = 60 * 15;\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nconst storedTheme = window.localStorage.getItem('theme')\n\nconst onboard = Onboard({\n  darkMode: storedTheme==='dark',\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06', // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  walletSelect: {\n    description: \"Please select a wallet to connect to Opyn Dashboard\",\n    wallets: [\n      { walletName: 'metamask' },\n      {\n        walletName: 'walletConnect',\n        infuraKey: '44fd23cda65746a699a5d3c0e2fa45d5'\n      },\n      {\n        walletName: 'fortmatic',\n        apiKey: 'pk_live_3009900A5E842CD5'\n      },\n      { walletName: 'trust' },\n      { walletName: 'coinbase' },\n      { walletName: \"status\" },\n    ]\n  }\n});\n\nlet web3;\n\nexport const updateModalMode = async(theme) => {\n  const darkMode = theme === 'dark'\n  onboard.config({ darkMode })\n}\n\nexport const connect = async () => {\n  const selected = await onboard.walletSelect();\n  if (!selected) return false\n  const checked = await onboard.walletCheck();\n  if(!checked) return false\n  return onboard.getState().address;\n};\n\nexport const disconnect = async() => {\n  onboard.walletReset()\n}\n\nexport const checkConnectedAndGetAddress = async() => {\n  let checked = false\n  try {\n    checked = await onboard.walletCheck();\n  } catch (error) {\n    await onboard.walletSelect()\n    checked = await onboard.walletCheck();\n    \n  } finally {\n    if (checked) return onboard.getState().address;\n  }\n}\n\nexport const liquidate = async (oTokenAddr, owner, liquidateAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .liquidate(owner, parseInt(liquidateAmt))\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const burnOToken = async (oTokenAddr, burnAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .burnOTokens(burnAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const issueOToken = async (oTokenAddr, issueAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .issueOTokens(issueAmt, account)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmount) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .addETHCollateral(owner)\n    .send({ from: account, value: web3.utils.toWei(ethAmount.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const removeETHCollateral = async (oTokenAddr, ethAmount) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .removeCollateral(web3.utils.toWei(ethAmount.toString()))\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const approve = async (oTokenAddr, spender, amt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVault = async (oTokenAddr) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .openVault()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Option Exchange\n\nexport const buyOTokensFromExchange = async (oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .buyOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      buyAmt\n    )\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const sellOTokensFromExchange = async (oTokenAddr, exchangeAddr, sellAmt) => {\n  const account = await checkConnectedAndGetAddress()  \n  const allowance = await getAllowance(oTokenAddr, account, exchangeAddr);\n  if (new BN(allowance).lt(new BN(sellAmt))) {\n    await approve(oTokenAddr, exchangeAddr, UINT256_MAX);\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .sellOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      sellAmt\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Uniswap Exchange\n\n/**\n *\n */\nexport const addLiquidity = async (oToken, uniswapAddr, maxToken, minLiquidity, ethValue) => {\n  const account = await checkConnectedAndGetAddress()\n  const allowance = await getAllowance(oToken, account, uniswapAddr);\n  if (new BN(allowance).lt(new BN(maxToken))) {\n    await approve(oToken, uniswapAddr, UINT256_MAX);\n  }\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .addLiquidity(\n      minLiquidity, // min_liquidity\n      maxToken, // max_tokens\n      deadline // deadline\n    )\n    .send({ from: account, value: web3.utils.toWei(ethValue) - 1 })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n */\nexport const removeLiquidity = async (uniswapAddr, pool_token_amount, min_eth, min_tokens) => {\n  const account = await checkConnectedAndGetAddress()\n  const min_eth_wei = web3.utils.toWei(min_eth);\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .removeLiquidity(pool_token_amount, min_eth_wei, min_tokens, deadline)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","import Notify from \"bnc-notify\"\n\nexport const notify = Notify({\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06',\n  networkId: 1\n});\n\n","import Web3 from 'web3';\n\nconst optionContractABI = require('../constants/abi/OptionContract.json');\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json');\nconst oracleABI = require('../constants/abi/Oracle.json');\n\nconst Promise = require('bluebird');\nconst web3 = new Web3('https://mainnet.infura.io/v3/44fd23cda65746a699a5d3c0e2fa45d5');\n\n// ERC20 Info\n\nexport const getTokenBalance = async (oToken, user) => {\n  if (user === '') return '0'\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const balance = await oTokenContract.methods.balanceOf(user).call();\n  return parseInt(balance);\n};\n\nexport const getDecimals = async (oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const decimals = await oTokenContract.methods.decimals().call();\n  return parseInt(decimals);\n};\n\nexport const getERC20Info = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const totalSupplyDecimals = await token.methods.totalSupply().call();\n  const decimals = await token.methods.decimals().call();\n  const totalSupply = parseInt(totalSupplyDecimals) / 10 ** parseInt(decimals);\n  return { decimals, totalSupply };\n};\n\n// Option Contract\n\n/**\n * todo: use graph ql\n * @param {Array<string>} owners\n * @param {string} oToken\n */\nexport const getVaults = async (owners, oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n\n  const vaults = await Promise.map(owners, async (owner) => {\n    const res = await oTokenContract.methods.getVault(owner).call();\n    const collateral = web3.utils.fromWei(res[0]);\n    const oTokensIssued = res[1];\n    const underlying = res[2];\n    return { collateral, oTokensIssued, underlying, owner, oToken };\n  });\n  return vaults;\n};\n\n/**\n * Compare user balance with max liquidatable and decide max liquidatable\n * @param {string} oToken \n * @param {string} owner \n * @param {string} liquidator \n */\nexport const getMaxToLiquidate = async (oToken, owner, liquidator) => {\n  const maxVaultLiquidatable = await getMaxLiquidatable(oToken, owner)\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const userbalance = liquidator ? await oTokenContract.methods.balanceOf(liquidator).call() : 0;\n\n  const maxLiquidatable = Math.min(\n    parseInt(userbalance, 10),\n    parseInt(maxVaultLiquidatable, 10)\n  ).toString();\n\n  return parseInt(maxLiquidatable);\n};\n\n/**\n * Max liquidatable for given vault\n * @param {string} oToken \n * @param {string} owner \n * @return {Promise<number>}\n */\nexport const getMaxLiquidatable = async (oToken, vaultOwner) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable = await oTokenContract.methods.maxOTokensLiquidatable(vaultOwner).call();\n  return parseInt(maxVaultLiquidatable)\n}\n\nexport const getAssetsAndOracle = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const [oracle, underlying, strike, minRatioObj, strikePriceObj] = await Promise.all([\n    token.methods.COMPOUND_ORACLE().call(),\n    token.methods.underlying().call(),\n    token.methods.strike().call(),\n    token.methods.minCollateralizationRatio().call(),\n    token.methods.strikePrice().call(),\n  ]);\n  const strikePrice = strikePriceObj[0] * 10 ** strikePriceObj[1];\n  const minRatio = minRatioObj[0] * 10 ** minRatioObj[1];\n  return { underlying, strike, minRatio, strikePrice, oracle };\n};\n\nexport const getAllowance = async (contract, user, spender) => {\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call();\n  return allowance;\n};\n\n/**\n * Get balance of accounts\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  if (address === '') return '0'\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\n/**\n * Get price of token in unit of wei\n * @param {string} oracleAddr \n * @param {string} token \n */\nexport const getPrice = async (oracleAddr, token) => {\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return price; // unit: wei/ per token\n};\n\n// Option Exchange\nexport const getPremiumToPay = async (exchangeAddr, tokenToBuy, buyAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const paymentToken = '0x0000000000000000000000000000000000000000';\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call();\n  return web3.utils.fromWei(premiumToPay);\n};\n\nexport const getPremiumReceived = async (exchangeAddr, tokenToSell, sellAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const payoutToken = '0x0000000000000000000000000000000000000000';\n  const premiumReceived = await exchange.methods\n    .premiumReceived(tokenToSell, payoutToken, sellAmt)\n    .call();\n  return web3.utils.fromWei(premiumReceived);\n};\n\n// uniswapExchange","import React, { useState } from 'react';\nimport { Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase } from '@aragon/ui';\n\nimport { connect, disconnect } from '../../utils/web3';\n\nfunction ConnectButton({ user, setUser }) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n    return true;\n  };\n\n  const disconnectWeb3 = async () => {\n    await disconnect();\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{paddingTop: 5, paddingRight: 5}}>\n      <LinkBase onClick={disconnectWeb3} size='small' > <IconPower /> </LinkBase>\n      </div>\n      <Box padding={6}>\n        <IdentityBadge entity={user} />\n      </Box>\n      \n    </>\n  ) : (\n    <Button icon={<IconConnect />} label={'Connect'} onClick={connectWeb3} />\n  );\n}\n\nexport default ConnectButton;\n","import React from 'react';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\nfunction ChangeMode({theme, updateTheme}) {\n\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark')\n    else updateTheme('light')\n  }\n\n    return (\n      <Button \n      icon={ theme === 'dark' ? <IconStar/> : <IconStarFilled/>} \n      onClick={handleChangeTheme}\n      label={ 'Theme' }\n      />\n    );\n  \n}\n\nexport default ChangeMode;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SettingsButton';\nimport { Bar, BackButton, LinkBase } from '@aragon/ui';\n\nfunction NavBar({ theme, updateTheme, user, setUser }) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n\n  return (\n    <Bar\n      primary={\n        isHome ? (\n          <></>\n        ) : (\n          <>\n            <div style={{ height: '100%' }}>\n              <BackButton onClick={()=>{\n                history.goBack();\n              }} />\n            </div>\n            <LinkButton title='My Vaults' onClick={()=>{history.push('/myvaults/')}} />\n            <LinkButton title='All Contracts' onClick={()=>{history.push('/options/')}} />\n            <LinkButton title='Trade' onClick={()=>{history.push('/trade/')}} />\n          </>\n        )\n      }\n      secondary={\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      }\n    ></Bar>\n  );\n}\n\nfunction LinkButton ({title, onClick}){\n  return(\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}> \n        <div style={{padding: '1%', opacity:0.5, fontSize: 17}}>\n            {title}\n        </div>\n        </LinkBase>\n    </div>\n  )\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Header, Box, LinkBase } from '@aragon/ui';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header primary='Welcome to Opyn Dashboard' />\n      <div style={{ padding: 5, opacity: 0.5 }}> Tools for DeFi Risk Management. </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%', marginRight: '3%' }}>\n          <MainButton title='My Vaults' description='Manage collateral, Mint/Burn oTokens' iconUrl='https://opyn.co/static/media/1.68813886.svg'  onClick={()=>{\n            history.push('/myvaults')\n          }} />\n        </div>\n\n        <div style={{ width: '30%' }}>\n          <MainButton title='All Contracts' description=' Monitor and liquidate vaults.' iconUrl='https://opyn.co/static/media/2.18d22be0.svg'  onClick={()=>{\n            history.push('/options/')\n          }} />\n        </div>\n\n        <div style={{ width: '30%', marginLeft: '3%' }}>\n          <MainButton title='Trade' description='Buy, Sell or Provided Liquidity.' iconUrl='https://opyn.co/static/media/3.4da8b24d.svg'  onClick={()=>{\n            history.push('./trade')\n          }} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction MainButton({ title, description, iconUrl, onClick }) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding:10, fontSize: 18 }}>{title}</div>\n        <img alt='icon' style={{ padding:10, height:64 }} src={iconUrl}></img>\n        <div style={{ paddingTop: 5, opacity: 0.5 }}> {description} </div>\n        \n      </Box>\n    </LinkBase>\n  );\n}\n\nexport default HomePage;\n","export const options = [\n  {\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    title: 'cDai Insurance',\n\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xA6923533A6362008e9b536271C2Bdc0FF1467D3c'\n  },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\",\n    strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xE3A0a2431a093fed99037987eD0A88550e5E79AA'\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n     // constants in contract\n     symbol: 'oCRV',\n     name: 'Opyn y.curve.fi Insurance',\n     decimals: 8,\n     oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n     collateral: '0x0000000000000000000000000000000000000000',\n     underlying: \"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8\",\n     strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n     strikePrice: 9.2e-16,\n     minRatio: 1.6,\n     exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n     uniswapExchange: '0x21f5E9D4Ec20571402A5396084B1634314A68c97'\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 2e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x8a0976500EED661202810bAB030a057DF15c4CC9'\n  },\n]","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/options';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToToken = (addr) => {\n    history.push(`/token/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='All Contracts' />\n      <div style={{padding: 5, opacity:0.5}}> Choose an option contract to proceed </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/options';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToTrade = (addr) => {\n    history.push(`/exchange/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='Trade' />\n      <div style={{padding: 5, opacity:0.5}}> Choose an option contract to proceed </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToTrade(addr)}> Start Trading </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React from 'react'\n\nimport { IdentityBadge } from '@aragon/ui'\n\nfunction AddressBlock({label, address}){\n\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}> {label} </div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten={true} />\n      </div>\n    </>\n  );\n};\n\nexport default AddressBlock","import React from 'react'\n\nfunction BalanceBlock({asset, balance}){\n  let integer = '0',\n    digits = '0';\n  if (balance > 0) {\n    const str = balance.toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}> {asset} </div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>.\n        <span style={{ fontSize: 18 }}> {digits} </span>\n      </div>\n    </>\n  );\n};\n\nexport default BalanceBlock","import React from 'react'\n\nimport { Tag } from '@aragon/ui';\n\nfunction RatioTag ({isSafe, ratio}) {\n  return isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background='#FFEBAD' color='#FEC100'>\n        {' '}\n        Danger{' '}\n      </Tag>\n    ) : (\n      <Tag mode='new'> safe </Tag>\n    )\n  ) : (\n    <Tag color='#E34343' background='#FFC6C6'>\n      Unsafe!\n    </Tag>\n  );\n};\n\nexport default RatioTag","import React from 'react';\n\nfunction SectionTitle({ title }) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n\nexport default SectionTitle","import React from 'react'\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nexport default MaxButton","import React from 'react'\n\nfunction HelperText({ label, amt }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default HelperText","import React from 'react'\nimport { Button } from '@aragon/ui'\nimport { useHistory } from 'react-router-dom';\nimport { openVault } from '../../utils/web3'\n\nfunction ManageVaultButton({ oToken, owner }) {\n  const history = useHistory();\n  const goToManagePage = (oToken, owner) => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n  return <Button onClick={() => goToManagePage(oToken, owner)} label='Manage'></Button>;\n}\n\nfunction OpenVaultButton({ oToken, user }) {\n  const history = useHistory();\n\n  const openAndGoToVault = () => {\n    openVault(oToken)\n    history.push(`/manage/${oToken}/${user}`);\n  }\n\n  return <Button \n    onClick={() => openAndGoToVault(oToken)} \n    label='Open Vault'\n    />;\n}\n\nexport { ManageVaultButton, OpenVaultButton }","// const prefix = 'https://cors-anywhere-anton.herokuapp.com/';\nconst opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn'\n\n/**\n * @return {Promise<Array<{colalteral: string, oTokensIssued: string, owner: string}>>}\n */\nexport async function getAllVaultsForOption(optionAddress){\n  const query = `\n  {\n    vaults(where: {\n      optionsContract: \"${optionAddress}\"\n    }) {\n      owner\n      oTokensIssued,\n      collateral,\n    }\n  }`\n  const response = await postQuery(query)\n  const vaults = response.data.vaults\n  return vaults\n}\n\nexport async function getAllVaultsForUser(owner){\n  const query = `{\n    vaults (where: {owner: \"${owner}\"}) {\n      optionsContract {\n        address\n      }\n      oTokensIssued,\n      collateral,\n    }\n  }`\n  const response = await postQuery(query)\n  const actions = response.data.vaults\n  return actions\n}\n\nexport async function getLiquidationHistory(owner) {\n  const query = liquidationActionsQuery(owner);\n  const response = await postQuery(query)\n  return response.data.liquidateActions\n}\n\nconst liquidationActionsQuery = (owner) => `{\n  liquidateActions(where: {\n    vault_contains: \"${owner}\"\n  }) {\n    vault {\n      owner,\n      optionsContract {\n        address\n      }\n    },\n    liquidator,\n    collateralToPay,\n    timestamp\n    transactionHash\n  }\n}\n\n`\n\n\nconst postQuery = async (query) => {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  }\n  const res = await fetch(opynGraphEndpoint,  options)\n  return await res.json()\n}","import Web3 from 'web3'\nconst web3 = new Web3()\n\nexport function formatDigits(num, percision) {\n  return parseFloat(num).toFixed(percision)\n}\n\nexport const handleDecimals = (rawAmt, decimal) => {\n  return Math.round(parseFloat(rawAmt) * 10 ** decimal);\n};\n\nexport const fromWei = web3.utils.fromWei\nexport const toWei = web3.utils.toWei\n\n/**\n * \n * @param {string | number} amtInEth \n */\nexport const formatETHAmtToStr = (amtInEth) => {\n  const strETHSegments = amtInEth.toString().split('.')\n  const int = strETHSegments[0]\n  if (strETHSegments.length === 1) return int\n  let digits = strETHSegments[1]\n  if(digits.length > 18) digits = digits.slice(0, 18)\n  const result = `${int}.${digits}`\n  return result\n}\n\nexport const toTokenUnits = (tokenAmount, tokenDecimals) => {\n  return tokenAmount / 10 ** tokenDecimals\n}\n\nexport function timeSince(timeStamp) {\n  var now = new Date(),\n    secondsPast = (now.getTime() - timeStamp) / 1000;\n  if (secondsPast < 60) {\n    return parseInt(secondsPast) + 's ago';\n  }\n  if (secondsPast < 3600) {\n    return parseInt(secondsPast / 60) + 'm ago';\n  }\n  if (secondsPast <= 86400) {\n    return parseInt(secondsPast / 3600) + 'h ago';\n  }\n  if (secondsPast > 86400) {\n    const ts = new Date(timeStamp)\n    const day = ts.getDate();\n    const month = ts.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \", \"\");\n    const year = ts.getFullYear() === now.getFullYear() ? \"\" : \" \" + ts.getFullYear();\n    return day + \" \" + month + year;\n  }\n}\n\nexport function compareVaultRatio(vaultA, vaultB) {\n  const rateA = vaultA.ratio;\n  const rateB = vaultB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n\n/**\n * \n * @param {string} collateral \n * @param {string} tokenIssued \n * @param {number} strikePrice \n * @param {number} strikeValueInWei \n */\nexport const calculateRatio = (collateral, tokenIssued, strikePrice, strikeValueInWei) => {\n  if (tokenIssued === '0') return Infinity\n  return parseInt(collateral) / ( parseInt(tokenIssued) * strikePrice * strikeValueInWei  )\n}","import React, { useState, useMemo } from 'react';\n\nimport { Header, DataView, IdentityBadge } from '@aragon/ui';\nimport { SectionTitle, ManageVaultButton, OpenVaultButton } from '../common';\n\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { getPrice } from '../../utils/infura'\nimport { options } from '../../constants/options';\nimport { fromWei, formatDigits, calculateRatio, compareVaultRatio } from '../../utils/number';\n\nconst Promise = require('bluebird');\n\nfunction MyVaults({ user }) {\n  const [opendVaults, setOpenedVaults] = useState([]);\n  const [tokensToOpen, setTokensToOpen] = useState([]);\n  const isConnected = user !== '';\n\n  // Only request all vaults once\n  useMemo(async () => {\n    if (!isConnected) return;\n    const userVaults = await getAllVaultsForUser(user);\n    const opendVaults = [];\n    const notOpenedTokens = [];\n    await Promise.map(options, async(option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      const isOpened = entry !== undefined;\n      if (isOpened) {\n\n        const strikePriceInWei = await getPrice(option.oracle, option.strike);\n        const ratio = calculateRatio(entry.collateral, entry.oTokensIssued, option.strikePrice, strikePriceInWei)\n        opendVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          ratio,\n        });\n      } else {\n        notOpenedTokens.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n        });\n      }\n    })\n    setOpenedVaults(opendVaults.sort(compareVaultRatio));\n    setTokensToOpen(notOpenedTokens);\n  }, [isConnected, user]);\n\n  return (\n    <>\n      <Header  primary={'My Vaults'} />\n      {isConnected ? (\n        <>\n          {opendVaults.length > 0 ? (\n            <div style={{paddingBottom: '3%'}}>\n              <SectionTitle title={'Existing Vaults'} />\n              <DataView\n                fields={['Token', 'contract', 'collateral', 'Ratio', '']}\n                entries={opendVaults}\n                entriesPerPage={6}\n                renderEntry={({ oToken, oTokenName, collateral, ratio, decimals }) => {\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} />,\n                    formatDigits(fromWei(collateral), 5),\n                    formatDigits(ratio, 4),\n                    <ManageVaultButton oToken={oToken} owner={user} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n          {tokensToOpen.length > 0 ? (\n            // Show vaults to open\n            <div >\n              <SectionTitle title={'Open new vaults'} />\n              <DataView\n                fields={['Token', 'contract', 'manage']}\n                entries={tokensToOpen}\n                renderEntry={({ oToken, oTokenName }) => {\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} shorten={false} />,\n                    <OpenVaultButton oToken={oToken} user={user} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </>\n      ) : (\n        // Not connected to wallet\n        <div style={{padding: 5, opacity:0.5}}> Please connect wallet to proceed </div>\n      )}\n    </>\n  );\n}\n\nexport default MyVaults;\n","import React, { useState, useEffect } from 'react';\n\nimport { addETHCollateral, liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable, getDecimals } from '../../utils/infura';\nimport { toTokenUnits } from '../../utils/number';\nimport { RatioTag } from '../common';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconFundraising,\n  DataView,\n} from '@aragon/ui';\n\nfunction VaultModal({ oToken, owner, collateral, isSafe, oTokensIssued, ratio }) {\n  const [opened, setOpened] = useState(false);\n  const [decimals, setTokenDecimals] = useState(0);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function getData() {\n      if (!opened) return;\n      const maxLiquidatable = await getMaxLiquidatable(oToken, owner);\n      const _decimals = await getDecimals(oToken);\n      if (!isCancelled) {\n        setTokenDecimals(_decimals);\n        setLiquidateAmt(toTokenUnits(maxLiquidatable, _decimals));\n      }\n    }\n    getData();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [oToken, opened, owner]);\n\n  return (\n    <>\n      <Button onClick={open} label='More'></Button>\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header primary={'Access Position'} />\n        <Box heading={'Owner'}>\n          <IdentityBadge entity={owner} shorten={false} />\n        </Box>\n        <DataView\n          fields={['Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[{ collateral, isSafe, oTokensIssued, ratio }]}\n          entriesPerPage={1}\n          renderEntry={({ collateral, isSafe, oTokensIssued, ratio }) => {\n            return [collateral, oTokensIssued, ratio, RatioTag({ isSafe, ratio })];\n          }}\n        />\n\n        <br></br>\n        <Box heading={'Add Collateral'}>\n          <Split\n            primary={\n              <TextInput\n                type='number'\n                wide={true}\n                adornment={<IconEthereum />}\n                adornmentPosition='end'\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            }\n            secondary={\n              <Button\n                label='Add Collateral'\n                wide={true}\n                onClick={() => {\n                  addETHCollateral(oToken, owner, addValue);\n                }}\n              />\n            }\n          />\n        </Box>\n\n        <br></br>\n        <Box heading={'Liquidate'}>\n          <Split\n            primary={\n              <>\n                {/* <BalanceBlock /> */}\n                <TextInput\n                  wide={true}\n                  type='number'\n                  adornment={<IconFundraising />}\n                  adornmentPosition='end'\n                  value={liquidateAmt}\n                  onChange={(event) => {\n                    setLiquidateAmt(event.target.value);\n                  }}\n                />\n              </>\n            }\n            secondary={\n              <Button\n                wide={true}\n                disabled={isSafe}\n                label='Liquidate'\n                onClick={() => {\n                  liquidate(oToken, owner, liquidateAmt * 10 ** decimals);\n                }}\n              />\n            }\n          />\n        </Box>\n      </Modal>\n    </>\n  );\n}\n\nexport default VaultModal;\n","import React, { useState, useEffect } from 'react';\nimport { DataView, IdentityBadge } from '@aragon/ui';\nimport { getAllVaultsForOption } from '../../utils/graph';\nimport { getPrice } from '../../utils/infura';\nimport { options } from '../../constants/options';\nimport VaultModal from './VaultModal'\nimport { SectionTitle, RatioTag } from '../common';\nimport { formatDigits, fromWei, compareVaultRatio, calculateRatio, toTokenUnits } from '../../utils/number';\n\nfunction VaultOwnerList({ oToken, user }) {\n  const option = options.find((option) => option.addr === oToken);\n  const [isLoading, setIsLoading] = useState(true);\n  const [vaults, setVaults] = useState([]);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      const vaults = await getAllVaultsForOption(oToken)\n      const { strike, decimals, minRatio, strikePrice, oracle } = option;\n\n      const tokenPriceInWei = await getPrice(oracle, strike);\n      const vaultDetail = vaults.map((vault) => {\n        if (vault.oTokensIssued === '0') {\n          vault.ratio = Infinity\n          vault.isSafe = true\n          return vault\n        } \n        const ratio = calculateRatio(vault.collateral, vault.oTokensIssued, strikePrice, tokenPriceInWei) \n        const oTokensIssued = toTokenUnits(vault.oTokensIssued, decimals);\n        vault.oTokensIssued = oTokensIssued;\n        vault.ratio = ratio;\n        vault.isSafe = ratio > minRatio;\n        vault.oToken = oToken\n        return vault;\n      }).sort(compareVaultRatio);\n\n      if (!isCancelled) {\n        setVaults(vaultDetail);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 12000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [oToken, option, user]);\n\n  return (    \n    <>\n      <SectionTitle title={'All Vaults'} />\n      <DataView\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaults}\n        entriesPerPage={5}\n        renderEntry={({ owner, collateral, oTokensIssued, ratio, isSafe }) => {\n          return [\n            <IdentityBadge entity={owner} shorten={true} />,\n            formatDigits(fromWei(collateral), 6),\n            formatDigits(oTokensIssued, 6),\n            formatDigits(ratio, 5),\n            RatioTag({isSafe, ratio}),\n            <VaultModal \n              oToken={oToken} owner={owner} \n              collateral={fromWei(collateral)}\n              isSafe={isSafe}\n              oTokensIssued={oTokensIssued}\n              ratio={ratio}\n            />\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Split, Header, IdentityBadge } from '@aragon/ui';\nimport { getERC20Info, getBalance } from '../../utils/infura';\n\nimport { options } from '../../constants/options';\n\nfunction OptionOverview({ oToken, tokenName }) {\n  const option = options.find((option) => option.addr === oToken);\n  const [balance, setBalance] = useState('0');\n  const [totalSupply, setTotalSupply] = useState('0');\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      const [balance, tokenInfo] = await Promise.all([getBalance(oToken), getERC20Info(oToken)]);\n      const { totalSupply } = tokenInfo;\n      if (!isCancelled) {\n        setBalance(balance);\n        setTotalSupply(totalSupply);\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [oToken]);\n\n  return (\n    <>\n      <Header primary={option.name} />\n      <Split\n        primary={\n          <Split\n            primary={\n              <Box heading={'contract'} padding={15}>\n                <IdentityBadge entity={oToken} shorten={false} />\n              </Box>\n            }\n            secondary={\n              <Box heading={'balance'} padding={15}>\n                {balance}\n              </Box>\n            }\n          />\n        }\n        secondary={\n          <Box heading={'total supply'} padding={15}>\n            {totalSupply} {tokenName}\n          </Box>\n        }\n      />\n    </>\n  );\n}\n\nexport default OptionOverview;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nfunction TokenView({user}) {\n  let { addr } = useParams();\n  return (\n    <>\n      <OptionInfoBox oToken={addr} user={user} />\n      <VaultsList oToken={addr} user={user}/>\n    </>\n  );\n}\n\nexport default TokenView;\n","import React, { useState } from 'react';\n\nimport { addETHCollateral, removeETHCollateral } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\nimport { formatDigits } from '../../utils/number'\n\nfunction CollateralManagement({\n  isOwner,\n  vault,\n  ethBalance,\n  token,\n  owner,\n  lastETHValueInStrike,\n  strikePrice,\n  minRatio,\n  setNewRatio\n}) {\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0);\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0);\n\n  const updateNewRatio = (newCollateral) => {\n    if(newCollateral <= 0) return\n    const newRatio = formatDigits(\n      newCollateral * lastETHValueInStrike / (strikePrice * vault.oTokensIssued),\n      5\n    )\n    setNewRatio(newRatio)\n  }\n\n  return (\n    <Box heading={'Collateral'}>\n      <div style={{ display: 'flex' }}>\n        {/* balance */}\n        <div style={{ width: '30%' }}>\n          {BalanceBlock({ asset: 'Your ETH Balance', balance: formatDigits(ethBalance,6) })}\n        </div>\n        {/* Add collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={addCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value\n                    setAddCollateralAmt(amt);\n                    updateNewRatio(parseFloat(vault.collateral) + parseFloat(amt))\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setAddCollateralAmt(ethBalance);\n                    updateNewRatio(parseFloat(vault.collateral) + parseFloat(ethBalance))\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Add'\n                onClick={() => {\n                  addETHCollateral(token, owner, addCollateralAmt);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={removeCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value\n                    setRemoveCollateralAmt(amt);\n                    updateNewRatio(parseFloat(vault.collateral) - parseFloat(amt))\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (lastETHValueInStrike <= 0) return;\n                    const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                    const minCollateral = minValueInStrike / lastETHValueInStrike;\n                    const maxToRemove = vault.collateral - minCollateral;\n                    setRemoveCollateralAmt(maxToRemove);\n                    setNewRatio(minRatio)\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Remove'\n                onClick={() => {\n                  removeETHCollateral(token, removeCollateralAmt);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\n\nexport default CollateralManagement","import React, { useState } from 'react';\nimport { burnOToken, issueOToken } from '../../utils/web3';\nimport { BalanceBlock, MaxButton } from '../common';\nimport { handleDecimals, formatDigits } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\nfunction IssuedTokenManagement({\n  isOwner,\n  vault,\n  tokenBalance,\n  token,\n  lastETHValueInStrike,\n  strikePrice,\n  minRatio,\n  decimals,\n  symbol,\n  setNewRatio,\n}) {\n  const [issueAmt, setIssueAmt] = useState(0);\n  const [burnAmt, setBurnAmt] = useState(0);\n\n  const updateNewRatio = (newAmt) => {\n    const newRatio = formatDigits(\n      (vault.collateral * lastETHValueInStrike) / (strikePrice * newAmt),\n      5\n    );\n    setNewRatio(newRatio);\n  };\n\n  const onChangeIssueAmt = (event) => {\n    const amt = event.target.value;\n    setIssueAmt(amt);\n    updateNewRatio(parseInt(vault.oTokensIssued) + handleDecimals(amt, decimals));\n  }\n\n  const onClickIssueToken = () => {\n    issueOToken(token, handleDecimals(issueAmt, decimals));\n  }\n\n  const onChangeBurnAmt = (event) => {\n    const amt = event.target.value;\n    updateNewRatio(parseInt(vault.oTokensIssued) - handleDecimals(amt, decimals));\n    setBurnAmt(amt);\n  }\n\n  const onClickBurnToken = () => {\n    burnOToken(token, handleDecimals(burnAmt, decimals));\n  }\n\n  return (\n    <Box heading={'Total Issued'}>\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock\n            asset={`Owner ${symbol} Balance `}\n            balance={tokenBalance}\n          />\n        </div>\n        {/* Issue More Token */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={issueAmt}\n                  onChange={onChangeIssueAmt}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikePrice <= 0) return;\n\n                    const maxTotal =\n                      (vault.collateral * lastETHValueInStrike) / (minRatio * strikePrice);\n                    const maxToIssueRaw = maxTotal - vault.oTokensIssued;\n                    const maxToIssue = maxToIssueRaw / 10 ** decimals;\n                    setIssueAmt(maxToIssue);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Issue'\n                onClick={onClickIssueToken}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={burnAmt}\n                  onChange={onChangeBurnAmt}\n                />\n                <MaxButton\n                  onClick={() => {\n                    const issued = Number(vault.oTokensIssued) / 10 ** decimals;\n                    setBurnAmt(Math.min(tokenBalance, issued));\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Burn'\n                onClick={onClickBurnToken}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default IssuedTokenManagement;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport { Box, DataView, IdentityBadge, TransactionBadge, TextInput, Button } from '@aragon/ui';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { getLiquidationHistory } from '../../utils/graph';\nimport { formatDigits, fromWei, toTokenUnits, timeSince, handleDecimals } from '../../utils/number';\n\nfunction LiquidationHistory({ owner, token, isOwner, tokenDecimals, userTokenBalance }) {\n  const [maxLiquidatable, setMaxLiquidatable] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  const [amountToLiquidate, setAmtToLiquidate] = useState(0);\n\n  useEffect(() => {\n    async function updateLiquidatable() {\n      const maxToLiquidate = await getMaxLiquidatable(token, owner);\n      setMaxLiquidatable(toTokenUnits(maxToLiquidate, tokenDecimals));\n    }\n\n    updateLiquidatable();\n  });\n\n  useMemo(async () => {\n    async function updateList() {\n      const actions = await getLiquidationHistory(owner);\n      const actionsForThisVault = actions.filter(\n        (entry) => entry.vault.optionsContract.address === token\n      );\n      setEntries(actionsForThisVault);\n      setIsLoading(false);\n    }\n    updateList();\n  }, [owner, token]);\n\n  return (\n    <>\n      {isOwner ? <></> : (\n        <Box heading={'Liquidate'}>\n          <>\n            <div style={{ display: 'flex' }}>\n              {/* balance */}\n              <div style={{ width: '30%' }}>\n                <BalanceBlock asset={`Max To Liquidate`} balance={maxLiquidatable} />\n              </div>\n              <div style={{ width: '70%', paddingTop: '2%' }}>\n                <div style={{ display: 'flex' }}>\n                  <div style={{ width: '60%' }}>\n                    <>\n                      <TextInput\n                        type='number'\n                        wide={true}\n                        value={amountToLiquidate}\n                        onChange={(event) => {\n                          setAmtToLiquidate(event.target.value);\n                        }}\n                      />\n                      <MaxButton\n                        onClick={() => {\n                          const maximum = Math.min(userTokenBalance, maxLiquidatable);\n                          setAmtToLiquidate(maximum);\n                        }}\n                      />\n                    </>\n                  </div>\n                  <div style={{ width: '40%' }}>\n                    <Button\n                      disabled={maxLiquidatable <= 0}\n                      label='Liquidate'\n                      onClick={() => {\n                        const amtToLiquidate = handleDecimals(amountToLiquidate, tokenDecimals);\n                        liquidate(token, owner, amtToLiquidate);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        </Box>\n      )}\n\n      {/* History Section */}\n      <Box heading={'History'}>\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Liquidator', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({ collateralToPay, liquidator, timestamp, transactionHash }) => {\n            return [\n              <TransactionBadge transaction={transactionHash} />,\n              formatDigits(fromWei(collateralToPay), 5),\n              <IdentityBadge entity={liquidator} />,\n              timeSince(parseInt(timestamp * 1000)),\n            ];\n          }}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default LiquidationHistory;\n","import React from 'react';\n\nimport { BalanceBlock, RatioTag, HelperText } from '../common';\nimport { formatDigits } from '../../utils/number';\n\nconst HeaderDashboard = ({ ratio, minRatio, symbol, vault, decimals, newRatio }) => {\n  const tokenInUnit = vault.oTokensIssued ? vault.oTokensIssued / 10 ** decimals : 0;\n\n  return (\n    <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset='Total Collateral' balance={formatDigits(vault.collateral, 6)} />\n      </div>\n      <div style={{ width: '50%' }}>\n        <BalanceBlock asset={`${symbol} Issued`} balance={tokenInUnit} />\n      </div>\n      <div style={{ width: '20%' }}>\n        <>\n          <div style={{ fontSize: 14, padding: 3 }}>\n            Current Ratio{' '}\n            {ratio > 0 ? <RatioTag isSafe={ratio >= minRatio} ratio={ratio} /> : <></>}\n          </div>\n          <div style={{ fontSize: 24, padding: 3 }}>\n            <span style={{ fontSize: 24 }}>{ratio.toString().split('.')[0]}</span>.\n            <span style={{ fontSize: 18 }}>{ratio.toString().split('.')[1]} </span>\n            {minRatio > 0 ? <span style={{ fontSize: 16 }}> / {minRatio} </span> : ''}\n          </div>\n          <> {newRatio === ratio ? '' : <HelperText label='New Ratio' amt={newRatio} />} </>\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState, useEffect } from 'react';\n\nimport { getVaults, getTokenBalance, getBalance, getPrice } from '../../utils/infura';\n\nimport { Header, Tabs } from '@aragon/ui';\n\nimport CollateralManagement from './CollateralManagement';\nimport IssuedTokenManagement from './IssuedTokenManagement';\nimport LiquidationHistory from './Liquidation';\n\nimport { options } from '../../constants/options';\nimport { formatDigits, fromWei, toTokenUnits } from '../../utils/number';\n\nimport HeaderDashboard from './HeaderDashboard';\n\nfunction ManageVault({ token, owner, user }) {\n  const option = options.find((option) => option.addr === token);\n  const { decimals, symbol, oracle, strike, strikePrice, minRatio } = option;\n\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const [vault, setVault] = useState({});\n  const [lastETHValueInStrike, setLastETHValue] = useState(0);\n\n  const [ratio, setRatio] = useState(0);\n\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(0);\n  const [userTokenBalance, setUserTokenBalance] = useState(0)\n  const [userETHBalance, setUserETHBalance] = useState(0);\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n  const [newRatio, setNewRatio] = useState(ratio);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateInfo() {\n      const vault = (await getVaults([owner], token))[0];\n      // vault.collateral here in unit of eth.\n      if (vault === undefined) {\n        return;\n      }\n      setNoVault(false);\n      let [_ownerTokenBalance, _userTokenBalance, userETHBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getTokenBalance(token, user),\n        getBalance(user),\n      ]);\n\n      _ownerTokenBalance = toTokenUnits(_ownerTokenBalance, decimals);\n      _userTokenBalance = toTokenUnits(_userTokenBalance, decimals)\n\n      const lastStrikeValue = fromWei(await getPrice(oracle, strike));\n      const ethValueInStrike = 1 / lastStrikeValue;\n      const valueProtectingInEth = parseFloat(strikePrice) * vault.oTokensIssued;\n      const ratio = formatDigits(\n        (parseFloat(vault.collateral) * ethValueInStrike) / valueProtectingInEth,\n        5\n      );\n\n      if (!isCancelled) {\n        setLastETHValue(ethValueInStrike);\n        setVault(vault);\n        setOwnerTokenBalance(_ownerTokenBalance);\n        setUserTokenBalance(_userTokenBalance)\n        setUserETHBalance(userETHBalance);\n        setRatio(ratio);\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, oracle, owner, strike, strikePrice, token, user]);\n\n  const isOwner = user === owner;\n\n  return noVault ? (\n    <div style={{ padding: 100, textAlign: 'center' }}> No Vault Found for this user </div>\n  ) : (\n    <>\n      <Header primary={isOwner ? 'Manage Your Vault' : 'Vault Detail'} />\n\n      <HeaderDashboard\n        owner={owner}\n        user={user}\n        ratio={ratio}\n        minRatio={minRatio}\n        vault={vault}\n        decimals={decimals}\n        symbol={symbol}\n        newRatio={newRatio}\n      />\n\n      <Tabs\n        items={['Collateral Management', 'Token Issuance', 'Liquidation']}\n        selected={tabSelected}\n        onChange={setTabSelected}\n      />\n\n      {tabSelected === 0 ? (\n        <CollateralManagement\n          isOwner={isOwner}\n          vault={vault}\n          ethBalance={userETHBalance}\n          token={token}\n          owner={owner}\n          lastETHValueInStrike={lastETHValueInStrike}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 1 ? (\n        <IssuedTokenManagement\n          isOwner={isOwner}\n          vault={vault}\n          tokenBalance={ownerTokenBalance}\n          token={token}\n          lastETHValueInStrike={lastETHValueInStrike}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          decimals={decimals}\n          symbol={symbol}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 2 ? (\n        <LiquidationHistory\n          userTokenBalance={userTokenBalance}\n          isOwner={isOwner}\n          owner={owner}\n          token={token}\n          tokenDecimals={decimals}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default ManageVault;\n","import React from 'react';\n\nimport { \n  useParams, \n  // useHistory \n} from 'react-router-dom';\n\nimport ManageMyVault from './Manage'\n// import { Button } from '@aragon/ui';\n\nfunction ManageVault({user}) {\n  let { token, owner } = useParams();\n  // const history = useHistory()\n  return (\n    <>\n      <ManageMyVault owner={owner} user={user} token={token}/>\n      {/* <div style={{ padding: 60, textAlign: 'center' }}>\n        <h4 style={{padding: '1%'}}> Buy, Sell or Invest your oToken?</h4>\n        {<Button \n          label={'Exchange'}\n          onClick={()=>{\n            history.push(`/exchange/${token}`)\n          }}\n        />}\n      </div> */}\n    </>\n  );\n}\n\nexport default ManageVault;\n","import React from 'react';\n\nimport { BalanceBlock, AddressBlock } from '../common';\n\nconst HeaderDashboard = ({ symbol, poolETHBalance, poolTokenBalance, uniswapExchange }) => {\n  return (\n    <div style={{ padding: '2%', display: 'flex',  alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset='Total ETH Liquidity' balance={poolETHBalance} />\n      </div>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset={`${symbol} Liquidity`} balance={poolTokenBalance} />\n      </div>\n      <div style={{ width: '40%' }}>\n        <>\n          <AddressBlock label=\"Uniswap Contract\" address={uniswapExchange} />\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState } from 'react';\n\nimport { buyOTokensFromExchange, sellOTokensFromExchange } from '../../utils/web3';\n\nimport { getPremiumToPay, getPremiumReceived } from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { handleDecimals } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\nfunction OptionExchange({ symbol, tokenBalance, token, exchange, decimals }) {\n  const [buyAmt, setBuyAmt] = useState(0);\n  const [sellAmt, setSellAmt] = useState(0);\n  const [premiumToPay, setPremiumToPay] = useState(0);\n  const [premiumReceived, setPremiumReceived] = useState(0);\n\n  const updatePremiumToPay = async (buyAmt) => {\n    if (!buyAmt || buyAmt === 0) {\n      setPremiumToPay(0);\n      return;\n    }\n    const amount = handleDecimals(buyAmt, decimals);\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(premium);\n  };\n\n  const updatePremiumReceived = async (sellAmt) => {\n    if (!sellAmt || sellAmt === 0) {\n      setPremiumReceived(0);\n      return;\n    }\n    const amount = handleDecimals(sellAmt, decimals);\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(premium);\n  };\n\n  return (\n    <Box heading={'Exchange'}>\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`${symbol} Balance`} balance={tokenBalance} />\n        </div>\n        {/* Buy Token from Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={buyAmt}\n                  onChange={(event) => {\n                    setBuyAmt(event.target.value);\n                    updatePremiumToPay(event.target.value);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Buy'\n                onClick={() => {\n                  buyOTokensFromExchange(\n                    token,\n                    exchange,\n                    handleDecimals(buyAmt, decimals),\n                    premiumToPay\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label='Cost:' amt={premiumToPay} symbol='' />\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={sellAmt}\n                  onChange={(event) => {\n                    setSellAmt(event.target.value);\n                    updatePremiumReceived(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setSellAmt(tokenBalance);\n                    updatePremiumReceived(tokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Sell'\n                onClick={() => {\n                  sellOTokensFromExchange(token, exchange, handleDecimals(sellAmt, decimals));\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label='Premium' amt={premiumReceived} />\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default OptionExchange;\n","import React, { useState } from 'react';\n\nimport { addLiquidity } from '../../utils/web3';\n\nimport {\n  // getTokenBalance,\n} from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { handleDecimals, formatETHAmtToStr } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconEthereum } from '@aragon/ui';\n\nfunction AddLiquidity({ \n  otoken, \n  otokenSymbol, \n  otokenDecimals, \n  userTokenBalance, \n  userETHBalance,\n  uniswapExchange, \n  user, \n  poolTokenBalance, \n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply\n}) {\n  const SLIPPAGE_RATE = 2;\n\n\n  const [amtETHToAdd, setAmtETHToAdd] = useState(0);\n  const [amtTokenToAdd, setAmtTokenToAdd] = useState(0);\n\n  const liquidityMinted = (liquidityTokenSupply * amtETHToAdd) / poolETHBalance;\n  const liquidityMintedMin = (liquidityMinted * (100 - SLIPPAGE_RATE)) / 100;\n  const ethToTokenRatio = poolETHBalance / poolTokenBalance;\n  const tokenToEthRatio = poolTokenBalance / poolETHBalance;\n\n  const onChangeETHAmtToSend = (ethAmt) => {\n    const newTokenAmt = (ethAmt * tokenToEthRatio);\n    setAmtETHToAdd(ethAmt);\n    setAmtTokenToAdd(newTokenAmt);\n  };\n\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    const newEthAmt = tokenAmt * ethToTokenRatio;\n    setAmtETHToAdd(newEthAmt);\n    setAmtTokenToAdd(tokenAmt);\n  };\n\n  return (\n    <Box heading={'Add Liquidity'}>\n      <div style={{ display: 'flex' }}>\n        {/* Pool Status */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`ETH Balance`} balance={userETHBalance} />\n        </div>\n        {/* Add Liquidity too pool */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <TextInput\n                  adornmentPosition='end'\n                  adornment={otokenSymbol}\n                  type='number'\n                  wide={true}\n                  value={amtTokenToAdd}\n                  onChange={(event) => {\n                    onChangeTokenAmtToSend(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    onChangeTokenAmtToSend(userTokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition='end'\n                adornment={<IconEthereum />}\n                type='number'\n                wide={true}\n                value={amtETHToAdd}\n                onChange={(event) => {\n                  onChangeETHAmtToSend(event.target.value);\n                }}\n              />\n              <PriceSection label='Mint' amt={liquidityMinted} symbol='Pool Tokens' />\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Add Liquidity'\n                onClick={() => {\n                  const maxToken = handleDecimals(amtTokenToAdd, otokenDecimals).toString();\n                  const minLiquidity = handleDecimals(\n                    liquidityMintedMin,\n                    liquidityTokenDecimals\n                  ).toString(10);\n                  addLiquidity(\n                    otoken,\n                    uniswapExchange,\n                    maxToken,\n                    minLiquidity,\n                    formatETHAmtToStr(amtETHToAdd)\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default AddLiquidity;\n","import React, { useState } from 'react';\n\nimport { removeLiquidity } from '../../utils/web3';\n\nimport {\n  // getTokenBalance,\n} from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { handleDecimals, formatETHAmtToStr } from '../../utils/number';\nimport { Box, TextInput, Button, IconCircleMinus, IconFundraising } from '@aragon/ui';\n\nfunction RemoveLiquidity({ \n  otoken, \n  otokenSymbol, \n  otokenDecimals, \n  userTokenBalance, \n  userliquidityTokenBalance,\n  uniswapExchange, \n  poolTokenBalance, \n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply\n}) {\n  const SLIPPAGE_RATE = 3;\n\n  const [amtLiquidityTokenToSell, setAmtLiquidityTokenToSell] = useState(0);\n\n  const poolPortion = (amtLiquidityTokenToSell) / liquidityTokenSupply\n  const estETHRecieved = poolETHBalance * poolPortion\n  const estOTokenReceived = poolTokenBalance * poolPortion\n\n  const minETHReceived = estETHRecieved * (100 - SLIPPAGE_RATE) / 100\n  const minTokenReceived = estOTokenReceived * (100 - SLIPPAGE_RATE) / 100\n  \n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    setAmtLiquidityTokenToSell(tokenAmt)\n  };\n\n  return (\n    <Box heading={'Remove Liquidity'}>\n      <div style={{ display: 'flex' }}>\n        {/* Pool Token in Hold */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`Pool Token Balance`} balance={userliquidityTokenBalance} />\n        </div>\n        {/* Remove */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition='end'\n                adornment={<IconFundraising />}\n                type='number'\n                wide={true}\n                value={amtLiquidityTokenToSell}\n                onChange={(event) => {\n                  onChangeTokenAmtToSend(event.target.value);\n                }}\n              />\n              <MaxButton\n                onClick={()=>setAmtLiquidityTokenToSell(userliquidityTokenBalance)}\n              />\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n              <PriceSection label='You get' amt={estETHRecieved} symbol='ETH' />\n              <PriceSection label='+' amt={estOTokenReceived} symbol={otokenSymbol} />\n              </>\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Remove Liquidity'\n                onClick={() => {\n                  const amt = handleDecimals(amtLiquidityTokenToSell, liquidityTokenDecimals).toString()\n                  const min_eth = formatETHAmtToStr(minETHReceived)\n                  const min_token = handleDecimals(minTokenReceived, otokenDecimals)\n                  \n                  removeLiquidity(\n                    uniswapExchange,\n                    amt,\n                    min_eth,\n                    min_token\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default RemoveLiquidity;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getTokenBalance, getBalance, getERC20Info } from '../../utils/infura';\n\nimport { Header } from '@aragon/ui';\n\nimport { options } from '../../constants/options';\n\nimport DashBoard from './Header';\nimport OptionExchange from './OptionExchange'\n\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity'\n\nfunction ManagePool({ user }) {\n\n  let { token } = useParams();\n\n  const option = options.find((option) => option.addr === token);\n  const { uniswapExchange, decimals, symbol, exchange } = option;\n\n  const [poolTokenBalance, setPoolTokenBalance] = useState(0);\n  const [userTokenBalance, setUserTokenBalance] = useState(0);\n  const [poolETHBalance, setPoolETHBalance] = useState(0);\n  const [userETHBalance, setUserETHBalance] = useState(0);\n\n  const [userliquidityTokenBalance, setUserLiquidityTokenBalance] = useState(0);\n  const [liquidityTokenDecimals, setLiquidityTokenDecimals] = useState(0);\n  const [liquidityTokenSupply, setLiquidityTokenSupply] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      let [exchangeTokenBalance, exchagneETHBalance, liquidityTokenInfo] = await Promise.all([\n        getTokenBalance(token, uniswapExchange),\n        getBalance(uniswapExchange),\n        getERC20Info(uniswapExchange),\n      ]);\n      const { decimals: liqTokenDecimal, totalSupply: liqTokenTotalSupply } = liquidityTokenInfo;\n      exchangeTokenBalance = exchangeTokenBalance / 10 ** decimals;\n      if (!isCancelled) {\n        setLiquidityTokenDecimals(liqTokenDecimal);\n        setLiquidityTokenSupply(liqTokenTotalSupply);\n        setPoolETHBalance(exchagneETHBalance);\n        setPoolTokenBalance(exchangeTokenBalance);\n      }\n    }\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, token, uniswapExchange]);\n\n  useEffect(() => {\n    if (user === '') return;\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      let [tokenBalance, userETHBalance, liqTokenBalance] = await Promise.all([\n        getTokenBalance(token, user),\n        getBalance(user),\n        getTokenBalance(uniswapExchange, user),\n      ]);\n\n      const userTokenBalance = tokenBalance / 10 ** decimals;\n      const userLiqTokenBalance = liqTokenBalance / 10 ** liquidityTokenDecimals;\n      if (!isCancelled) {\n        setUserLiquidityTokenBalance(userLiqTokenBalance);\n        setUserETHBalance(userETHBalance);\n        setUserTokenBalance(userTokenBalance);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, liquidityTokenDecimals, token, uniswapExchange, user]);\n\n  return (\n    <>\n      <Header primary='Exchange' />\n\n      <DashBoard\n        user={user}\n        symbol={symbol}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        uniswapExchange={uniswapExchange}\n      />\n\n      <OptionExchange\n        symbol={symbol}\n        tokenBalance={userTokenBalance}\n        token={token}\n        exchange={exchange}\n        decimals={decimals}\n      />\n\n      <Header primary='Provide Liquidity' />\n\n      <AddLiquidity\n        user={user}\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n\n      <RemoveLiquidity\n        user={user}\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n    </>\n  );\n}\n\nexport default ManagePool;\n","import React from 'react'\n\nimport { Link } from '@aragon/ui'\n\nfunction Footer({theme}) {\n  var style = {\n    backgroundColor: theme === 'light' ? \"#F8F8F8\" : '#35425e' ,\n    textAlign: \"center\",\n    padding: \"17px\",\n    position: \"fixed\",\n    left: \"0\",\n    bottom: \"0\",\n    height: \"50px\",\n    width: \"100%\",\n    fontSize: \"12px\"\n  }\n\n  return (  \n    <div style={style}>\n      Powered By {' '}\n      <Link  external={true} href=\"https://opyn.co/#/\">Opyn</Link>{', '} \n      <Link  external={true} href=\"https://ui.aragon.org/\">Aragon UI</Link>{', '}  \n      <Link  external={true} href=\"https://www.blocknative.com/\">Blocknative</Link>{'. '}  \n      Hosted on <Link  external={true} href=\"https://github.com/antoncoding/opyn-liquidator\">GitHub</Link>.\n    </div>\n  )\n}\n\nexport default Footer","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { updateModalMode } from './utils/web3'\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage'\nimport AllOptoins from './components/AllContracts';\nimport Trade from './components/Trade'\nimport MyVaults from './components/MyVaults'\nimport TokenView from './components/TokenView';\nimport ManageVault from './components/ManageVault'\nimport ManagePool from './components/ManagePool'\nimport Footer from './components/Footer';\nimport { Main } from '@aragon/ui';\n\nfunction App() {\n  const storedTheme = window.localStorage.getItem('theme') || 'light';\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (theme) => {\n    setTheme(theme);\n    updateModalMode(theme)\n    window.localStorage.setItem('theme', theme);\n  };\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          <Route path='/token/:addr' children={<TokenView user={user} />} />\n          <Route path='/options/' children={<AllOptoins />} />\n          <Route path='/myvaults' children={<MyVaults user={user} />} />\n          <Route path='/manage/:token/:owner' children={<ManageVault user={user}/>} />\n          <Route path='/trade/' children={<Trade/>} />\n          <Route path='/exchange/:token/' children={<ManagePool user={user} />} />\n          <Route path='/' children={<HomePage/>} />\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}