{"version":3,"sources":["utils/web3.js","utils/blockNative.js","utils/infura.js","constants/options.js","components/NavBar/ConnectButton.js","components/NavBar/SettingsButton.js","components/NavBar/index.js","components/HomePage/index.js","components/AllContracts/index.js","components/Trade/index.js","components/common/AddressBlock.js","components/common/BalanceBlock.js","components/common/RatioTag.js","components/common/SectionTitle.js","components/common/MaxButton.js","components/common/HelpText.js","components/common/VaultButton.js","utils/graph.js","utils/number.js","utils/calculation.js","components/MyVaults/index.js","components/OptionPage/VaultModal.js","components/OptionPage/VaultsList.js","components/OptionPage/OptionInfoBox.js","components/OptionPage/index.js","components/ManageVault/HeaderDashboard.js","components/ManageVault/CollateralManagement.js","components/ManageVault/IssuedTokenManagement.js","components/ManageVault/Liquidation.js","components/ManageVault/Exercise.js","components/ManageVault/index.js","components/ManagePool/Header.js","components/ManagePool/OptionExchange.js","components/ManagePool/AddLiquidity.js","components/ManagePool/RemoveLiquidity.js","components/ManagePool/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["web3","notify","Notify","dappId","networkId","optionContractABI","require","optionExchangeABI","oracleABI","Web3","getTokenBalance","erc20Token","user","a","oTokenContract","eth","Contract","methods","balanceOf","call","balance","getDecimals","decimals","parseInt","getERC20Symbol","symbol","getERC20Info","address","token","totalSupply","totalSupplyDecimals","getMaxLiquidatable","oToken","vaultOwner","maxOTokensLiquidatable","maxVaultLiquidatable","getAllowance","contract","spender","allowance","getBalance","utils","fromWei","getPrice","oracleAddr","oracle","price","getPremiumToPay","exchangeAddr","tokenToBuy","buyAmt","exchange","premiumToPay","getPremiumReceived","tokenToSell","sellAmt","premiumReceived","options","addr","title","name","collateral","underlying","strike","strikePrice","minRatio","uniswapExchange","expiry","ETH_ADDRESS","oTokenABI","exchangeABI","uniswapExchangeABI","UINT256_MAX","storedTheme","window","localStorage","getItem","onboard","Onboard","darkMode","subscriptions","wallet","provider","walletSelect","description","wallets","walletName","infuraKey","apiKey","updateModalMode","theme","config","connect","walletCheck","getState","disconnect","walletReset","checkConnectedAndGetAddress","checked","liquidate","oTokenAddr","owner","liquidateAmt","account","send","from","on","hash","burnOToken","burnAmt","burnOTokens","issueOToken","issueAmt","issueOTokens","addETHCollateral","ethAmt","value","toWei","toString","addERC20Collateral","collateralAmt","collateralAmtBN","BigNumber","lt","collateralToken","approve","removeCollateral","redeem","redeemVaultBalance","amt","openVault","buyOTokensFromExchange","buyOTokens","sellOTokensFromExchange","sellOTokens","addLiquidity","uniswapAddr","maxToken","minLiquidity","ethInWei","deadline","Math","ceil","Date","now","removeLiquidity","pool_token_amount","min_eth_wei","min_tokens","ConnectButton","setUser","useState","isConnected","setIsConnected","connectWeb3","disconnectWeb3","style","paddingTop","paddingRight","onClick","size","padding","entity","icon","label","ChangeMode","updateTheme","LinkButton","paddingLeft","opacity","fontSize","NavBar","history","useHistory","isHome","updateIsHome","useEffect","home","location","pathname","primary","height","goBack","push","secondary","MainButton","iconUrl","width","alt","src","HomePage","display","alignItems","marginRight","marginLeft","AllContracts","fields","entries","entriesPerPage","renderEntry","shorten","goToToken","goToTrade","AddressBlock","BalanceBlock","asset","integer","digits","str","split","length","RatioTag","isSafe","ratio","useCollateral","background","color","mode","SectionTitle","MaxButton","HelperText","parseFloat","toFixed","ManageVaultButton","goToManagePage","OpenVaultButton","getAllVaultsForOption","optionAddress","query","postQuery","response","vaults","data","getAllVaultsForUser","actions","getLiquidationHistory","liquidationActionsQuery","liquidateActions","getExerciseHistory","option","exerciseActions","method","headers","body","JSON","stringify","fetch","res","json","toBaseUnitBN","rawAmt","raw","base","decimalsBN","times","pow","integerValue","toTokenUnitsBN","tokenAmount","tokenDecimals","_amt","_digits","div","formatDigits","num","percision","timeSince","timeStamp","secondsPast","getTime","ts","getDate","toDateString","match","replace","getFullYear","compareVaultRatio","vaultA","vaultB","rateA","rateB","comparison","calculateStrikeValueInCollateral","collateralDecimals","undefined","strikeValueInWei","strikeValueInCollateral","collateralValueInWei","calculateRatio","tokenIssued","Infinity","colalteralBN","tokenIssuedBN","strikePriceBN","toNumber","Promise","MyVaults","opendVaults","setOpenedVaults","tokensToOpen","setTokensToOpen","useMemo","userVaults","openedVaults","notOpenedTokens","map","entry","find","vault","optionsContract","isOpened","collatearlIsETH","oTokensIssued","oTokenName","sort","paddingBottom","VaultModal","collateralAsset","collateralIsETH","opened","setOpened","addValue","setAddValue","setLiquidateAmt","isCancelled","maxLiquidatable","getData","visible","onClose","heading","type","wide","adornment","adornmentPosition","onChange","event","target","disabled","VaultOwnerList","setCollateralDecimals","vaultUsesCollateral","isLoading","setIsLoading","setVaults","_decimals","updateInfo","vaultDetail","id","setInterval","clearInterval","status","OptionOverview","tokenName","setBalance","setTotalSupply","all","tokenInfo","init","OptionPage","useParams","OptionInfoBox","VaultsList","HeaderDashboard","newRatio","tokenInUnit","collateralBalance","CollateralManagement","isOwner","collateralAssetBalance","strikeValue","setNewRatio","addCollateralAmt","setAddCollateralAmt","removeCollateralAmt","setRemoveCollateralAmt","collateralSymbol","setCollateralSymbol","updateNewRatio","newCollateral","amtRaw","newCollateralInWei","plus","collateralBalanceRaw","newCollateralWei","minus","minRatioBN","minCollateral","maxToRemove","maxToRemoveInTokenUnit","IssuedTokenManagement","tokenBalance","setIssueAmt","setBurnAmt","newAmt","lte","intputAmt","amountBN","onChangeIssueAmt","maxToIssueRaw","maxToIssue","onChangeBurnAmt","issued","maxToBurn","LiquidationHistory","userTokenBalance","setMaxLiquidatable","setEntries","amountToLiquidate","setAmtToLiquidate","maxToLiquidate","updateLiquidatable","actionsForThisVault","filter","updateList","maximum","min","amtToLiquidate","collateralToPay","liquidator","timestamp","transactionHash","transaction","ExerciseHistory","amtCollateralToPay","oTokensToExercise","exerciser","ManageVault","tabSelected","setTabSelected","setVault","setStrikeValue","setRatio","ownerTokenBalance","setOwnerTokenBalance","setUserTokenBalance","userCollateralAssetBalance","setUserCollateralAssetBalance","noVault","setNoVault","_ownerTokenBalance","_userTokenBalance","_collateralDecimals","_tokenBalance","_ownerTokenBalanceBN","_userTokenBalanceBN","textAlign","end","items","selected","Liquidation","Exercise","poolETHBalance","poolTokenBalance","PriceSection","OptionExchange","setBuyAmt","setSellAmt","setPremiumToPay","setPremiumReceived","updatePremiumToPay","butAmountBN","amount","premium","updatePremiumReceived","sellAmountBN","AddLiquidity","otoken","otokenSymbol","otokenDecimals","userETHBalance","liquidityTokenDecimals","liquidityTokenSupply","amtETHToAdd","setAmtETHToAdd","amtTokenToAdd","setAmtTokenToAdd","liquidityMinted","liquidityMintedMin","ethToTokenRatio","tokenToEthRatio","onChangeTokenAmtToSend","tokenAmt","newEthAmt","newTokenAmt","onChangeETHAmtToSend","ethWei","RemoveLiquidity","userliquidityTokenBalance","amtLiquidityTokenToSell","setAmtLiquidityTokenToSell","poolPortion","estETHRecieved","estOTokenReceived","minETHReceived","minTokenReceived","tokenAmtBN","min_eth","min_token","ManagePool","setPoolTokenBalance","setPoolETHBalance","setUserETHBalance","setUserLiquidityTokenBalance","setLiquidityTokenSupply","setLiquidityTokenDecimals","updatePoolInfo","exTokenBalance","exchagneETHBalance","liquidityTokenInfo","liqTokenDecimal","liqTokenTotalSupply","exchangeTokenBalance","updateUserInfo","liqTokenBalance","userLiqTokenBalance","Footer","backgroundColor","position","left","bottom","external","href","App","setTheme","assetsUrl","process","setItem","path","children","Trade","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d33336f9.chunk.js","sourcesContent":["import Web3 from 'web3';\nimport BigNumber from 'bignumber.js'\nimport Onboard from 'bnc-onboard';\n\nimport { notify } from './blockNative';\nimport { getAllowance } from './infura';\nimport { ETH_ADDRESS } from '../constants/options'\n\nconst oTokenABI = require('../constants/abi/OptionContract.json');\nconst exchangeABI = require('../constants/abi/OptionExchange.json');\nconst uniswapExchangeABI = require('../constants/abi/UniswapExchange.json');\n\nconst DEADLINE_FROM_NOW = 60 * 15;\nconst UINT256_MAX = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nconst storedTheme = window.localStorage.getItem('theme')\n\nconst onboard = Onboard({\n  darkMode: storedTheme==='dark',\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06', // [String] The API key created by step one above\n  networkId: 1, // [Integer] The Ethereum network ID your Dapp uses.\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  walletSelect: {\n    description: \"Please select a wallet to connect to Opyn Dashboard\",\n    wallets: [\n      { walletName: 'metamask' },\n      {\n        walletName: 'walletConnect',\n        infuraKey: '44fd23cda65746a699a5d3c0e2fa45d5'\n      },\n      {\n        walletName: 'fortmatic',\n        apiKey: 'pk_live_3009900A5E842CD5'\n      },\n      { walletName: 'trust' },\n      { walletName: 'coinbase' },\n      { walletName: \"status\" },\n    ]\n  }\n});\n\nlet web3;\n\nexport const updateModalMode = async(theme) => {\n  const darkMode = theme === 'dark'\n  onboard.config({ darkMode })\n}\n\nexport const connect = async () => {\n  const selected = await onboard.walletSelect();\n  if (!selected) return false\n  const checked = await onboard.walletCheck();\n  if(!checked) return false\n  return onboard.getState().address;\n};\n\nexport const disconnect = async() => {\n  onboard.walletReset()\n}\n\nexport const checkConnectedAndGetAddress = async() => {\n  let checked = false\n  try {\n    checked = await onboard.walletCheck();\n  } catch (error) {\n    await onboard.walletSelect()\n    checked = await onboard.walletCheck();\n    \n  } finally {\n    if (checked) return onboard.getState().address;\n  }\n}\n\nexport const liquidate = async (oTokenAddr, owner, liquidateAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .liquidate(owner, parseInt(liquidateAmt))\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const burnOToken = async (oTokenAddr, burnAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .burnOTokens(burnAmt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const issueOToken = async (oTokenAddr, issueAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n\n  await oToken.methods\n    .issueOTokens(issueAmt, account)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const addETHCollateral = async (oTokenAddr, owner, ethAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .addETHCollateral(owner)\n    .send({ from: account, value: web3.utils.toWei(ethAmt.toString()) })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n * \n * @param {string} collaral \n * @param {string} oTokenAddr \n * @param {string} owner \n * @param {number|string} collateralAmt in min unit\n */\nexport const addERC20Collateral = async (collateral, oTokenAddr, owner, collateralAmt) => {\n  const collateralAmtBN = new BigNumber(collateralAmt)\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  const allowance = await getAllowance(collateral, account, oTokenAddr);\n  // Approve to move collateral \n  if (new BigNumber(allowance).lt(collateralAmtBN)) {\n    const collateralToken = new web3.eth.Contract(oTokenABI, collateral)\n    await collateralToken.methods\n      .approve(oTokenAddr, UINT256_MAX)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } \n  await oToken.methods\n    .addERC20Collateral(owner, collateralAmtBN.toString())\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n\n}\n\n/**\n * \n * @param {string} collateral \n * @param {string} oTokenAddr \n * @param {string} collateralAmt in base unit\n */\nexport const removeCollateral = async (collateral, oTokenAddr, collateralAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  if(collateral === ETH_ADDRESS) {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  } else {\n    await oToken.methods\n      .removeCollateral(collateralAmt)\n      .send({ from: account })\n      .on('transactionHash', (hash) => {\n        notify.hash(hash);\n      });\n  }\n};\n\nexport const redeem = async(token) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, token);\n  await oToken.methods\n    .redeemVaultBalance()\n    .send({from: account})\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n}\n\n\nexport const approve = async (oTokenAddr, spender, amt) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .approve(spender, amt)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const openVault = async (oTokenAddr) => {\n  const account = await checkConnectedAndGetAddress()\n  const oToken = new web3.eth.Contract(oTokenABI, oTokenAddr);\n  await oToken.methods\n    .openVault()\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Option Exchange\n\nexport const buyOTokensFromExchange = async (oTokenAddr, exchangeAddr, buyAmt, ethAmt) => {\n  const account = await checkConnectedAndGetAddress()\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .buyOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      buyAmt\n    )\n    .send({ from: account, value: ethAmt })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\nexport const sellOTokensFromExchange = async (oTokenAddr, exchangeAddr, sellAmt) => {\n  const account = await checkConnectedAndGetAddress()  \n  const allowance = await getAllowance(oTokenAddr, account, exchangeAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(sellAmt))) {\n    await approve(oTokenAddr, exchangeAddr, UINT256_MAX);\n  }\n  const exchange = new web3.eth.Contract(exchangeABI, exchangeAddr);\n  await exchange.methods\n    .sellOTokens(\n      account,\n      oTokenAddr,\n      '0x0000000000000000000000000000000000000000', // payment\n      sellAmt\n    )\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n// Uniswap Exchange\n\n/**\n *\n */\nexport const addLiquidity = async (oToken, uniswapAddr, maxToken, minLiquidity, ethInWei) => {\n  const account = await checkConnectedAndGetAddress()\n  const allowance = await getAllowance(oToken, account, uniswapAddr);\n  if (new BigNumber(allowance).lt(new BigNumber(maxToken))) {\n    await approve(oToken, uniswapAddr, UINT256_MAX);\n  }\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .addLiquidity(\n      minLiquidity, // min_liquidity\n      maxToken, // max_tokens\n      deadline // deadline\n    )\n    .send({ from: account, value: ethInWei - 1 })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n\n/**\n *\n */\nexport const removeLiquidity = async (uniswapAddr, pool_token_amount, min_eth_wei, min_tokens) => {\n  const account = await checkConnectedAndGetAddress()\n  const uniswapExchange = new web3.eth.Contract(uniswapExchangeABI, uniswapAddr);\n  const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW;\n  await uniswapExchange.methods\n    .removeLiquidity(pool_token_amount, min_eth_wei, min_tokens, deadline)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (hash) => {\n      notify.hash(hash);\n    });\n};\n","import Notify from \"bnc-notify\"\n\nexport const notify = Notify({\n  dappId: '7e7c9d55-dd5e-4ee1-bc38-edf27b59ce06',\n  networkId: 1\n});\n\n","import Web3 from 'web3';\n\nconst optionContractABI = require('../constants/abi/OptionContract.json');\nconst optionExchangeABI = require('../constants/abi/OptionExchange.json');\nconst oracleABI = require('../constants/abi/Oracle.json');\n\nconst Promise = require('bluebird');\nconst web3 = new Web3('https://mainnet.infura.io/v3/44fd23cda65746a699a5d3c0e2fa45d5');\n\n// ERC20 Info\n\n/**\n * \n * @param {string} erc20Token address\n * @param {string} user address\n * @return {Promise<string>}\n */\nexport const getTokenBalance = async (erc20Token, user) => {\n  if (user === '') return '0'\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const balance = await oTokenContract.methods.balanceOf(user).call();\n  return balance;\n};\n\nexport const getDecimals = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  const decimals = await oTokenContract.methods.decimals().call();\n  return parseInt(decimals);\n};\n\nexport const getERC20Symbol = async (erc20Token) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, erc20Token);\n  return await oTokenContract.methods.symbol().call();\n}\n\nexport const getERC20Info = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const totalSupplyDecimals = await token.methods.totalSupply().call();\n  const decimals = await token.methods.decimals().call();\n  const totalSupply = parseInt(totalSupplyDecimals) / 10 ** parseInt(decimals);\n  return { decimals, totalSupply };\n};\n\n// Option Contract\n\n/**\n * todo: use graph ql\n * @param {Array<string>} owners\n * @param {string} oToken\n */\nexport const getVaults = async (owners, oToken) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n\n  const vaults = await Promise.map(owners, async (owner) => {\n    const res = await oTokenContract.methods.getVault(owner).call();\n    const collateral = web3.utils.fromWei(res[0]);\n    const oTokensIssued = res[1];\n    const underlying = res[2];\n    return { collateral, oTokensIssued, underlying, owner, oToken };\n  });\n  return vaults;\n};\n\n/**\n * Compare user balance with max liquidatable and decide max liquidatable\n * @param {string} oToken \n * @param {string} owner \n * @param {string} liquidator \n */\nexport const getMaxToLiquidate = async (oToken, owner, liquidator) => {\n  const maxVaultLiquidatable = await getMaxLiquidatable(oToken, owner)\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const userbalance = liquidator ? await oTokenContract.methods.balanceOf(liquidator).call() : 0;\n\n  const maxLiquidatable = Math.min(\n    parseInt(userbalance, 10),\n    parseInt(maxVaultLiquidatable, 10)\n  ).toString();\n\n  return parseInt(maxLiquidatable);\n};\n\n/**\n * Max liquidatable for given vault\n * @param {string} oToken \n * @param {string} owner \n * @return {Promise<number>}\n */\nexport const getMaxLiquidatable = async (oToken, vaultOwner) => {\n  const oTokenContract = new web3.eth.Contract(optionContractABI, oToken);\n  const maxVaultLiquidatable = await oTokenContract.methods.maxOTokensLiquidatable(vaultOwner).call();\n  return parseInt(maxVaultLiquidatable)\n}\n\nexport const getAssetsAndOracle = async (address) => {\n  const token = new web3.eth.Contract(optionContractABI, address);\n  const [oracle, underlying, strike, minRatioObj, strikePriceObj] = await Promise.all([\n    token.methods.COMPOUND_ORACLE().call(),\n    token.methods.underlying().call(),\n    token.methods.strike().call(),\n    token.methods.minCollateralizationRatio().call(),\n    token.methods.strikePrice().call(),\n  ]);\n  const strikePrice = strikePriceObj[0] * 10 ** strikePriceObj[1];\n  const minRatio = minRatioObj[0] * 10 ** minRatioObj[1];\n  return { underlying, strike, minRatio, strikePrice, oracle };\n};\n\nexport const getAllowance = async (contract, user, spender) => {\n  const token = new web3.eth.Contract(optionContractABI, contract);\n  const allowance = await token.methods.allowance(user, spender).call();\n  return allowance;\n};\n\n/**\n * Get balance in eth for the account\n * @param {string} address\n */\nexport const getBalance = async (address) => {\n  if (address === '') return '0'\n  const balance = await web3.eth.getBalance(address);\n  return web3.utils.fromWei(balance);\n};\n\n/**\n * Get price of token in unit of wei\n * @param {string} oracleAddr \n * @param {string} token \n * @returns {Promise<string>}\n */\nexport const getPrice = async (oracleAddr, token) => {\n  const oracle = new web3.eth.Contract(oracleABI, oracleAddr);\n  const price = await oracle.methods.getPrice(token).call();\n  return price; // unit: wei/ per token\n};\n\n// Option Exchange\nexport const getPremiumToPay = async (exchangeAddr, tokenToBuy, buyAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const paymentToken = '0x0000000000000000000000000000000000000000';\n  const premiumToPay = await exchange.methods.premiumToPay(tokenToBuy, paymentToken, buyAmt).call();\n  return web3.utils.fromWei(premiumToPay);\n};\n\nexport const getPremiumReceived = async (exchangeAddr, tokenToSell, sellAmt) => {\n  const exchange = new web3.eth.Contract(optionExchangeABI, exchangeAddr);\n  const payoutToken = '0x0000000000000000000000000000000000000000';\n  const premiumReceived = await exchange.methods\n    .premiumReceived(tokenToSell, payoutToken, sellAmt)\n    .call();\n  return web3.utils.fromWei(premiumReceived);\n};\n\n// uniswapExchange","export const options = [\n  {\n    addr: '0x98cc3bd6af1880fcfda17ac477b2f612980e5e33',\n    title: 'cDai Insurance',\n\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 1.859e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xA6923533A6362008e9b536271C2Bdc0FF1467D3c',\n    expiry: 1612915200\n  },\n  // {\n  //   addr: '0x87fe8eba753076a943bd2a5f6c3556188064797e',\n  //   title: 'Opyn ETH Put $100',\n\n  //   // constants in contract\n  //   symbol: 'oETH $100 Put',\n  //   name: 'Opyn ETH Put $100 03/30/20',\n  //   decimals: 8,\n  //   oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n  //   collateral: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n  //   underlying: \"0x0000000000000000000000000000000000000000\",\n  //   strike: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n  //   strikePrice: 1e-6,\n  //   minRatio: 1,\n  //   exchange: '0x39246c4f3f6592c974ebc44f80ba6dc69b817c71',\n  //   uniswapExchange: '0xA680B19749672A632e1E493Be7807638A57c952F',\n  //   expiry: 1585526400\n  // },\n  {\n    addr: '0x8ed9f862363ffdfd3a07546e618214b6d59f03d4',\n    title: 'cUSDC Insurance',\n\n    // constants in contract\n    symbol: 'ocUSDC',\n    name: 'Opyn cUSDC Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\",\n    strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    strikePrice: 2.08e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0xE3A0a2431a093fed99037987eD0A88550e5E79AA',\n    expiry: 1612915200\n  },\n  {\n    addr: '0x4ba8c6ce0e855c051e65dfc37883360efaf7c82b',\n    title: 'y.curve.fi Insurance',\n     // constants in contract\n     symbol: 'oCRV',\n     name: 'Opyn y.curve.fi Insurance',\n     decimals: 8,\n     oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n     collateral: '0x0000000000000000000000000000000000000000',\n     underlying: \"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8\",\n     strike: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n     strikePrice: 9.2e-16,\n     minRatio: 1.6,\n     exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n     uniswapExchange: '0x21f5E9D4Ec20571402A5396084B1634314A68c97',\n     expiry: 1585440000\n  },\n  {\n    addr: '0xddac4aed7c8f73032b388efe2c778fc194bc81ed',\n    title: 'cDai Insurance (Old)',\n    // constants in contract\n    symbol: 'ocDai',\n    name: 'Opyn cDai Insurance',\n    decimals: 8,\n    oracle: '0x7054e08461e3eCb7718B63540adDB3c3A1746415',\n    collateral: '0x0000000000000000000000000000000000000000',\n    underlying: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n    strike: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n    strikePrice: 2e-10,\n    minRatio: 1.4,\n    exchange: '0x5778f2824a114f6115dc74d432685d3336216017',\n    uniswapExchange: '0x8a0976500EED661202810bAB030a057DF15c4CC9',\n    expiry: 1612915200\n  },\n]\n\nexport const ETH_ADDRESS = '0x0000000000000000000000000000000000000000'","import React, { useState } from 'react';\nimport { Button, IdentityBadge, IconConnect, Box, IconPower, LinkBase } from '@aragon/ui';\n\nimport { connect, disconnect } from '../../utils/web3';\n\nfunction ConnectButton({ user, setUser }) {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connectWeb3 = async () => {\n    const address = await connect();\n    if (address === false) return;\n    setIsConnected(true);\n    setUser(address);\n    return true;\n  };\n\n  const disconnectWeb3 = async () => {\n    await disconnect();\n    setIsConnected(false);\n    setUser('');\n  };\n\n  return isConnected ? (\n    <>\n      <div style={{paddingTop: 5, paddingRight: 5}}>\n      <LinkBase onClick={disconnectWeb3} size='small' > <IconPower /> </LinkBase>\n      </div>\n      <Box padding={6}>\n        <IdentityBadge entity={user} />\n      </Box>\n      \n    </>\n  ) : (\n    <Button icon={<IconConnect />} label={'Connect'} onClick={connectWeb3} />\n  );\n}\n\nexport default ConnectButton;\n","import React from 'react';\nimport { Button, IconStarFilled, IconStar } from '@aragon/ui';\n\nfunction ChangeMode({theme, updateTheme}) {\n\n  const handleChangeTheme = () => {\n    if (theme === 'light') updateTheme('dark')\n    else updateTheme('light')\n  }\n\n    return (\n      <Button \n      icon={ theme === 'dark' ? <IconStar/> : <IconStarFilled/>} \n      onClick={handleChangeTheme}\n      label={ 'Theme' }\n      />\n    );\n  \n}\n\nexport default ChangeMode;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ConnectButton from './ConnectButton';\nimport ChangeModeButton from './SettingsButton';\nimport { Bar, BackButton, LinkBase } from '@aragon/ui';\n\nfunction NavBar({ theme, updateTheme, user, setUser }) {\n  const history = useHistory();\n  const [isHome, updateIsHome] = useState(true);\n\n  useEffect(() => {\n    const home = history.location.pathname === '/';\n    updateIsHome(home);\n  }, [history.location.pathname]);\n\n  return (\n    <Bar\n      primary={\n        isHome ? (\n          <></>\n        ) : (\n          <>\n            <div style={{ height: '100%' }}>\n              <BackButton onClick={()=>{\n                history.goBack();\n              }} />\n            </div>\n            <LinkButton title='My Vaults' onClick={()=>{history.push('/myvaults/')}} />\n            <LinkButton title='All Contracts' onClick={()=>{history.push('/options/')}} />\n            <LinkButton title='Trade' onClick={()=>{history.push('/trade/')}} />\n          </>\n        )\n      }\n      secondary={\n        <>\n          <ConnectButton user={user} setUser={setUser} />\n          <ChangeModeButton theme={theme} updateTheme={updateTheme} />\n        </>\n      }\n    ></Bar>\n  );\n}\n\nfunction LinkButton ({title, onClick}){\n  return(\n    <div style={{ paddingLeft: 40 }}>\n      <LinkBase onClick={onClick}> \n        <div style={{padding: '1%', opacity:0.5, fontSize: 17}}>\n            {title}\n        </div>\n        </LinkBase>\n    </div>\n  )\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Header, Box, LinkBase } from '@aragon/ui';\n\nfunction HomePage() {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header primary='Welcome to Opyn Dashboard' />\n      <div style={{ padding: 5, opacity: 0.5 }}> Tools for DeFi Risk Management. </div>\n      <div style={{ padding: '1%', display: 'flex', alignItems: 'center' }}>\n        <div style={{ width: '30%', marginRight: '3%' }}>\n          <MainButton title='My Vaults' description='Manage collateral, Mint/Burn oTokens' iconUrl='https://opyn.co/static/media/1.68813886.svg'  onClick={()=>{\n            history.push('/myvaults')\n          }} />\n        </div>\n\n        <div style={{ width: '30%' }}>\n          <MainButton title='All Contracts' description=' Monitor and liquidate vaults.' iconUrl='https://opyn.co/static/media/2.18d22be0.svg'  onClick={()=>{\n            history.push('/options/')\n          }} />\n        </div>\n\n        <div style={{ width: '30%', marginLeft: '3%' }}>\n          <MainButton title='Trade' description='Buy, Sell or Provided Liquidity.' iconUrl='https://opyn.co/static/media/3.4da8b24d.svg'  onClick={()=>{\n            history.push('./trade')\n          }} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction MainButton({ title, description, iconUrl, onClick }) {\n  return (\n    <LinkBase onClick={onClick} style={{ width: '100%' }}>\n      <Box>\n        <div style={{ padding:10, fontSize: 18 }}>{title}</div>\n        <img alt='icon' style={{ padding:10, height:64 }} src={iconUrl}></img>\n        <div style={{ paddingTop: 5, opacity: 0.5 }}> {description} </div>\n        \n      </Box>\n    </LinkBase>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/options';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToToken = (addr) => {\n    history.push(`/option/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='All Contracts' />\n      <div style={{padding: 5, opacity:0.5}}> Choose an option contract to proceed </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToToken(addr)}> View Vaults </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { options } from '../../constants/options';\n\nimport { Header, DataView, IdentityBadge, Button } from '@aragon/ui';\n\nfunction AllContracts() {\n  const history = useHistory();\n  const goToTrade = (addr) => {\n    history.push(`/trade/${addr}`);\n  };\n  return (\n    <>\n      <Header primary='Trade' />\n      <div style={{padding: 5, opacity:0.5}}> Choose an option contract to proceed </div>\n      <DataView\n        fields={['Name', 'Contract', '']}\n        entries={options}\n        entriesPerPage={6}\n        renderEntry={({ addr, title }) => {\n          return [\n            <>{title}</>,\n            <IdentityBadge entity={addr} shorten={false} />,\n            <Button onClick={() => goToTrade(addr)}> Start Trading </Button>,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default AllContracts;\n","import React from 'react'\n\nimport { IdentityBadge } from '@aragon/ui'\n\nfunction AddressBlock({label, address}){\n\n  return (\n    <>\n      <div style={{ fontSize: 16, padding: 3 }}> {label} </div>\n      <div style={{ padding: 5 }}>\n        <IdentityBadge entity={address} shorten={true} />\n      </div>\n    </>\n  );\n};\n\nexport default AddressBlock","import React from 'react'\n\n/**\n * \n * @param {{balance: number | string | BigNumber}} param0 \n */\nfunction BalanceBlock({asset, balance}){\n  let integer = '0',\n    digits = '0';\n  if (balance > 0) {\n    const str = balance.toString();\n    const split = str.split('.');\n    integer = split[0];\n    digits = split.length > 1 ? str.split('.')[1] : '0';\n  }\n\n  return (\n    <>\n      <div style={{ fontSize: 14, padding: 3 }}> {asset} </div>\n      <div style={{ padding: 3 }}>\n        <span style={{ fontSize: 24 }}>{integer}</span>.\n        <span style={{ fontSize: 18 }}> {digits} </span>\n      </div>\n    </>\n  );\n};\n\nexport default BalanceBlock","import React from 'react';\n\nimport { Tag } from '@aragon/ui';\n\nfunction RatioTag({ isSafe, ratio, useCollateral = true }) {\n  return !useCollateral ? (\n    <Tag color='#78827a' background='#c0c2c0'>\n      Cool\n    </Tag>\n  ) : isSafe ? (\n    ratio < 1.6 ? (\n      <Tag background='#FFEBAD' color='#FEC100'>\n        {' '}\n        Danger{' '}\n      </Tag>\n    ) : (\n      <Tag mode='new'> safe </Tag>\n    )\n  ) : (\n    <Tag color='#E34343' background='#FFC6C6'>\n      Unsafe!\n    </Tag>\n  );\n}\n\nexport default RatioTag;\n","import React from 'react';\n\nfunction SectionTitle({ title }) {\n  return <div style={{ padding: 10, fontSize: 20 }}>{title}</div>;\n}\n\nexport default SectionTitle","import React from 'react'\n\nimport {\n  ButtonBase,\n} from '@aragon/ui';\n\nfunction MaxButton({ onClick }) {\n  return (\n    <div style={{ padding: 3 }}>\n      <ButtonBase onClick={onClick}>\n        <span style={{ opacity: 0.5 }}> Max </span>\n      </ButtonBase>\n    </div>\n  );\n}\n\nexport default MaxButton","import React from 'react'\n\nfunction HelperText({ label, amt }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default HelperText","import React from 'react'\nimport { Button } from '@aragon/ui'\nimport { useHistory } from 'react-router-dom';\nimport { openVault } from '../../utils/web3'\n\nfunction ManageVaultButton({ oToken, owner }) {\n  const history = useHistory();\n  const goToManagePage = (oToken, owner) => {\n    history.push(`/manage/${oToken}/${owner}`);\n  };\n  return <Button onClick={() => goToManagePage(oToken, owner)} label='Manage'></Button>;\n}\n\nfunction OpenVaultButton({ oToken, user }) {\n  const history = useHistory();\n\n  const openAndGoToVault = () => {\n    openVault(oToken)\n    history.push(`/manage/${oToken}/${user}`);\n  }\n\n  return <Button \n    onClick={() => openAndGoToVault(oToken)} \n    label='Open Vault'\n    />;\n}\n\nexport { ManageVaultButton, OpenVaultButton }","// const prefix = 'https://cors-anywhere-anton.herokuapp.com/';\nconst opynGraphEndpoint = 'https://api.thegraph.com/subgraphs/name/aparnakr/opyn'\n\n/**\n * @return {Promise<Array<{colalteral: string, oTokensIssued: string, owner: string}>>}\n */\nexport async function getAllVaultsForOption(optionAddress){\n  const query = `\n  {\n    vaults(where: {\n      optionsContract: \"${optionAddress}\"\n    }) {\n      owner\n      oTokensIssued,\n      collateral,\n    }\n  }`\n  const response = await postQuery(query)\n  const vaults = response.data.vaults\n  return vaults\n}\n\nexport async function getAllVaultsForUser(owner){\n  const query = `{\n    vaults (where: {owner: \"${owner}\"}) {\n      optionsContract {\n        address\n      }\n      oTokensIssued,\n      collateral,\n    }\n  }`\n  const response = await postQuery(query)\n  const actions = response.data.vaults\n  return actions\n}\n\nexport async function getLiquidationHistory(owner) {\n  const query = liquidationActionsQuery(owner);\n  const response = await postQuery(query)\n  return response.data.liquidateActions\n}\n\nconst liquidationActionsQuery = (owner) => `{\n  liquidateActions(where: {\n    vault_contains: \"${owner}\"\n  }) {\n    vault {\n      owner,\n      optionsContract {\n        address\n      }\n    },\n    liquidator,\n    collateralToPay,\n    timestamp\n    transactionHash\n  }\n}\n\n`\n\n/**\n * Get all exercise history for one user\n * @param {string} owner vault owner\n * @param {string} option contract address\n * @return {Promise<{amtCollateralToPay: string, exerciser:string, oTokensToExercise:string, timestamp:string, transactionHash: string}>}\n */\nexport async function getExerciseHistory(owner, option) {\n  const query = `{\n    exerciseActions (where: {\n      vault_contains: \"${owner}\"\n      optionsContract_contains: \"${option}\"\n    }) {\n      exerciser\n      oTokensToExercise\n      amtCollateralToPay\n      transactionHash\n      timestamp\n    }\n  }`\n\n  const response = await postQuery(query)\n  return response.data.exerciseActions\n}\n\nconst postQuery = async (query) => {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ query }),\n  }\n  const res = await fetch(opynGraphEndpoint,  options)\n  return await res.json()\n}","import Web3 from 'web3'\nimport BigNumber from 'bignumber.js'\nconst web3 = new Web3()\n\n/**\n * Convert 10.999 to 10999000\n * @param {number|string|BigNumber} rawAmt \n * @param {number} decimals \n * @returns {BigNumber}\n */\nexport function toBaseUnitBN(rawAmt, decimals) {\n  const raw = new BigNumber(rawAmt)\n  const base = new BigNumber(10)\n  const decimalsBN = new BigNumber(decimals)\n  return raw.times(base.pow(decimalsBN)).integerValue()\n}\n\n/**\n * Convert 10999000 to 10.999\n * @param {string | number | BigNumber} tokenAmount in base unit\n * @param {number} tokenDecimals \n * @return {BigNumber}\n */\nexport const toTokenUnitsBN = (tokenAmount, tokenDecimals) => {\n  const _amt = new BigNumber(tokenAmount)\n  const _digits = new BigNumber(10).pow(new BigNumber(tokenDecimals))\n  return _amt.div(_digits)\n}\n\nexport function formatDigits(num, percision) {\n  return parseFloat(num).toFixed(percision)\n}\n\nexport const fromWei = web3.utils.fromWei\nexport const toWei = web3.utils.toWei\n\nexport function timeSince(timeStamp) {\n  var now = new Date(),\n    secondsPast = (now.getTime() - timeStamp) / 1000;\n  if (secondsPast < 60) {\n    return parseInt(secondsPast) + 's ago';\n  }\n  if (secondsPast < 3600) {\n    return parseInt(secondsPast / 60) + 'm ago';\n  }\n  if (secondsPast <= 86400) {\n    return parseInt(secondsPast / 3600) + 'h ago';\n  }\n  if (secondsPast > 86400) {\n    const ts = new Date(timeStamp)\n    const day = ts.getDate();\n    const month = ts.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \", \"\");\n    const year = ts.getFullYear() === now.getFullYear() ? \"\" : \" \" + ts.getFullYear();\n    return day + \" \" + month + year;\n  }\n}\n\nexport function compareVaultRatio(vaultA, vaultB) {\n  const rateA = vaultA.ratio;\n  const rateB = vaultB.ratio;\n\n  let comparison = 0;\n  if (parseFloat(rateA) > parseFloat(rateB)) {\n    comparison = 1;\n  } else if (parseFloat(rateA) < parseFloat(rateB)) {\n    comparison = -1;\n  }\n  return comparison;\n}\n","import BigNumber from 'bignumber.js'\nimport { getPrice, getDecimals } from './infura'\nimport { toBaseUnitBN } from './number'\n\n\n/**\n * Get strike value in collateral for ratio calculation.\n * @param {string} collateral address\n * @param {string} strike address\n * @param {string} oracle address\n * @param {number?} collateralDecimals if provided, wont get again if needed\n * @return {Promise<BigNumber>}\n */\nexport const calculateStrikeValueInCollateral = async(collateral, strike, oracle, collateralDecimals=undefined ) => {\n  const ETH_Address = '0x0000000000000000000000000000000000000000'\n  let strikeValueInCollateral;\n  if (collateral === ETH_Address) {\n    const strikeValueInWei = await getPrice(oracle, strike);\n    strikeValueInCollateral = new BigNumber(strikeValueInWei);\n  } else if (collateral === strike) {\n    // No collateral, like ETH option\n    if (collateralDecimals===undefined) \n      collateralDecimals = await getDecimals(collateral)\n    strikeValueInCollateral = new BigNumber(10).pow(new BigNumber(collateralDecimals));\n  } else {\n    // Use other ERC20 as collateral : Untested\n    if (collateralDecimals===undefined) \n      collateralDecimals = await getDecimals(collateral)\n    const strikeValueInWei = await getPrice(oracle, strike);\n    const collateralValueInWei = await getPrice(oracle, collateral);\n    strikeValueInCollateral = toBaseUnitBN(\n      parseInt(strikeValueInWei) / parseInt(collateralValueInWei),\n      collateralDecimals\n    );\n  }\n  return strikeValueInCollateral\n}\n\n/**\n * \n * @param {string|number|BigNumber} collateral number of collateral in base unit\n * @param {string|number|BigNumber} tokenIssued number of token in base unit\n * @param {string|number|BigNumber} strikePrice \n * @param {BigNumber} strikeValueInCollateral \n * @return {number}\n */\nexport const calculateRatio = (collateral, tokenIssued, strikePrice, strikeValueInCollateral) => {\n  if (tokenIssued === '0') return Infinity\n  const colalteralBN = new BigNumber(collateral)\n  const tokenIssuedBN = new BigNumber(tokenIssued)\n  const strikePriceBN = new BigNumber(strikePrice)\n  // const strikeValueInCollateralBN = new BigNumber(strikeValueInCollateral.toString())\n  const result = (colalteralBN.div(tokenIssuedBN)).div(strikePriceBN).div(strikeValueInCollateral)\n  return result.toNumber()\n}","import React, { useState, useMemo } from 'react';\n\nimport { Header, DataView, IdentityBadge } from '@aragon/ui';\nimport { options, ETH_ADDRESS } from '../../constants/options';\nimport { SectionTitle, ManageVaultButton, OpenVaultButton } from '../common';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { formatDigits, compareVaultRatio, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getDecimals } from '../../utils/infura';\n\nconst Promise = require('bluebird');\n\nfunction MyVaults({ user }) {\n  const [opendVaults, setOpenedVaults] = useState([]);\n  const [tokensToOpen, setTokensToOpen] = useState([]);\n  const isConnected = user !== '';\n\n  // Only request all vaults once\n  useMemo(async () => {\n    if (!isConnected) return;\n    const userVaults = await getAllVaultsForUser(user);\n    const openedVaults = [];\n    const notOpenedTokens = [];\n    await Promise.map(options, async (option) => {\n      const entry = userVaults.find((vault) => vault.optionsContract.address === option.addr);\n      const isOpened = entry !== undefined;\n      const collatearlIsETH = option.collateral === ETH_ADDRESS;\n      if (isOpened) {\n        const collateralDecimals = collatearlIsETH ? 18 : await getDecimals(option.collateral);\n        const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n          option.collateral,\n          option.strike,\n          option.oracle,\n          collateralDecimals\n        );\n        const ratio = calculateRatio(\n          entry.collateral,\n          entry.oTokensIssued,\n          option.strikePrice,\n          strikeValueInCollateral\n        );\n        openedVaults.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n          collateral: entry.collateral,\n          collateralDecimals: collateralDecimals,\n          ratio,\n        });\n      } else {\n        notOpenedTokens.push({\n          oToken: option.addr,\n          oTokenName: option.title,\n        });\n      }\n    });\n    setOpenedVaults(openedVaults.sort(compareVaultRatio));\n    setTokensToOpen(notOpenedTokens);\n  }, [isConnected, user]);\n\n  return (\n    <>\n      <Header primary={'My Vaults'} />\n      {isConnected ? (\n        <>\n          {opendVaults.length > 0 ? (\n            <div style={{ paddingBottom: '3%' }}>\n              <SectionTitle title={'Existing Vaults'} />\n              <DataView\n                fields={['Token', 'contract', 'collateral', 'Ratio', '']}\n                entries={opendVaults}\n                entriesPerPage={6}\n                renderEntry={({ oToken, oTokenName, collateral, collateralDecimals, ratio }) => {\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} />,\n                    formatDigits(toTokenUnitsBN(collateral, collateralDecimals).toNumber(), 5),\n                    formatDigits(ratio, 4),\n                    <ManageVaultButton oToken={oToken} owner={user} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n          {tokensToOpen.length > 0 ? (\n            // Show vaults to open\n            <div>\n              <SectionTitle title={'Open new vaults'} />\n              <DataView\n                fields={['Token', 'contract', 'manage']}\n                entries={tokensToOpen}\n                renderEntry={({ oToken, oTokenName }) => {\n                  return [\n                    oTokenName,\n                    <IdentityBadge entity={oToken} shorten={false} />,\n                    <OpenVaultButton oToken={oToken} user={user} />,\n                  ];\n                }}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </>\n      ) : (\n        // Not connected to wallet\n        <div style={{ padding: 5, opacity: 0.5 }}> Please connect wallet to proceed </div>\n      )}\n    </>\n  );\n}\n\nexport default MyVaults;\n","import React, { useState, useEffect } from 'react';\n\nimport { liquidate, addERC20Collateral, addETHCollateral } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { toTokenUnitsBN, toBaseUnitBN, formatDigits } from '../../utils/number';\nimport { RatioTag } from '../common';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Box,\n  Split,\n  TextInput,\n  IdentityBadge,\n  IconEthereum,\n  IconFundraising,\n  DataView,\n} from '@aragon/ui';\n\n/**\n * \n * @param {{collateral: string, oTokensIssued: string collateralDecimals:Number, decimals:Number}} param0 \n */\nfunction VaultModal({ useCollateral, oToken, owner, collateral, isSafe, oTokensIssued, ratio, decimals, collateralAsset, collateralIsETH, collateralDecimals }) {\n  const [opened, setOpened] = useState(false);\n  const [addValue, setAddValue] = useState(0);\n  const [liquidateAmt, setLiquidateAmt] = useState(0);\n  const open = () => setOpened(true);\n  const close = () => setOpened(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function getData() {\n      if (!opened) return;\n      const maxLiquidatable = await getMaxLiquidatable(oToken, owner);\n      if (!isCancelled) {\n        setLiquidateAmt(toTokenUnitsBN(maxLiquidatable, decimals).toNumber());\n      }\n    }\n    getData();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [decimals, oToken, opened, owner]);\n\n  return (\n    <>\n      <Button onClick={open} label='More'></Button>\n      <Modal width={800} padding={50} visible={opened} onClose={close}>\n        <Header primary={'Access Position'} />\n        <Box heading={'Owner'}>\n          <IdentityBadge entity={owner} shorten={false} />\n        </Box>\n        <DataView\n          fields={['Collateral', 'Issued', 'ratio', 'Status']}\n          entries={[{ collateral, isSafe, oTokensIssued, ratio }]}\n          entriesPerPage={1}\n          renderEntry={({ collateral, isSafe, oTokensIssued, ratio }) => {\n            return [\n              formatDigits(toTokenUnitsBN(collateral, collateralDecimals), 5), \n              formatDigits(toTokenUnitsBN(oTokensIssued, decimals), 5),\n              ratio, \n              RatioTag({ isSafe, ratio, useCollateral })\n            ];\n          }}\n        />\n\n        <br></br>\n        <Box heading={'Add Collateral'}>\n          <Split\n            primary={\n              <TextInput\n                type='number'\n                wide={true}\n                adornment={<IconEthereum />}\n                adornmentPosition='end'\n                value={addValue}\n                onChange={(event) => {\n                  setAddValue(event.target.value);\n                }}\n              />\n            }\n            secondary={\n              <Button\n                label='Add Collateral'\n                wide={true}\n                onClick={() => {\n                  collateralIsETH \n                  ? addETHCollateral(oToken, owner, addValue)\n                  : addERC20Collateral(collateralAsset, oToken, owner, toBaseUnitBN(addValue, collateralDecimals).toString())}}\n              />\n            }\n          />\n        </Box>\n\n        <br></br>\n        { useCollateral ? <Box heading={'Liquidate'}>\n          <Split\n            primary={\n              <>\n                {/* <BalanceBlock /> */}\n                <TextInput\n                  wide={true}\n                  type='number'\n                  adornment={<IconFundraising />}\n                  adornmentPosition='end'\n                  value={liquidateAmt}\n                  onChange={(event) => {\n                    setLiquidateAmt(event.target.value);\n                  }}\n                />\n              </>\n            }\n            secondary={\n              <Button\n                wide={true}\n                disabled={isSafe}\n                label='Liquidate'\n                onClick={() => {\n                  liquidate(\n                    oToken, \n                    owner, \n                    toBaseUnitBN(liquidateAmt,decimals)\n                  );\n                }}\n              />\n            }\n          />\n        </Box>  : <></>}\n        \n      </Modal>\n    </>\n  );\n}\n\nexport default VaultModal;\n","import React, { useState, useEffect, useMemo } from 'react';\n\nimport { DataView, IdentityBadge } from '@aragon/ui';\nimport VaultModal from './VaultModal';\nimport { SectionTitle, RatioTag } from '../common';\n\nimport { getAllVaultsForOption } from '../../utils/graph';\nimport { getDecimals } from '../../utils/infura';\nimport { formatDigits, compareVaultRatio, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\n\nimport { options, ETH_ADDRESS } from '../../constants/options';\n\nfunction VaultOwnerList({ oToken, user }) {\n  const option = options.find((option) => option.addr === oToken);\n\n  const [collateralDecimals, setCollateralDecimals] = useState(18);\n\n  // like ETH:DAI option, not using other assets as collateral. vaultUseCollateral = false\n  const vaultUsesCollateral = option.collateral !== option.strike;\n  const collateralIsETH = option.collateral === ETH_ADDRESS;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [vaults, setVaults] = useState([]);\n\n  // Get Collateral decimals if collateral is not eth\n  useMemo(async () => {\n    if (!collateralIsETH) {\n      const _decimals = await getDecimals(option.collateral);\n      setCollateralDecimals(_decimals);\n    }\n  }, [collateralIsETH, option.collateral]);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const updateInfo = async () => {\n      const vaults = await getAllVaultsForOption(oToken);\n      const { strike, minRatio, strikePrice, oracle, collateral } = option;\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral,\n        strike,\n        oracle\n      );\n      const vaultDetail = vaults\n        .map((vault) => {\n          if (vault.oTokensIssued === '0') {\n            vault.ratio = Infinity;\n            vault.useCollateral = vaultUsesCollateral;\n            vault.isSafe = true;\n            return vault;\n          }\n          const ratio = calculateRatio(\n            vault.collateral,\n            vault.oTokensIssued,\n            strikePrice,\n            strikeValueInCollateral\n          );\n          vault.ratio = ratio;\n          vault.useCollateral = vaultUsesCollateral;\n          vault.isSafe = ratio > minRatio;\n          vault.oToken = oToken;\n          return vault;\n        })\n        .sort(compareVaultRatio);\n\n      if (!isCancelled) {\n        setVaults(vaultDetail);\n        setIsLoading(false);\n      }\n    };\n\n    updateInfo();\n    const id = setInterval(updateInfo, 12000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [collateralDecimals, collateralIsETH, oToken, option, user, vaultUsesCollateral]);\n\n  return (\n    <>\n      <SectionTitle title={'All Vaults'} />\n      <DataView\n        status={isLoading ? 'loading' : 'default'}\n        fields={['Owner', 'collateral', 'Issued', 'RATIO', 'Status', '']}\n        entries={vaults}\n        entriesPerPage={5}\n        renderEntry={({ owner, collateral, oTokensIssued, ratio, isSafe, useCollateral }) => {\n          return [\n            <IdentityBadge entity={owner} shorten={true} />,\n            formatDigits(\n              toTokenUnitsBN(collateral, collateralDecimals).toNumber(),\n              6\n            ),\n            formatDigits(\n              toTokenUnitsBN(oTokensIssued, option.decimals).toNumber(), \n              6\n            ),\n            formatDigits(ratio, 5),\n            RatioTag({ isSafe, ratio, useCollateral }),\n            <VaultModal\n              decimals={option.decimals}\n              oToken={oToken}\n              owner={owner}\n              collateral={collateral}\n              collateralAsset={option.collateral}\n              collateralDecimals={collateralDecimals}\n              isSafe={isSafe}\n              useCollateral={useCollateral}\n              collateralIsETH={collateralIsETH}\n              oTokensIssued={oTokensIssued}\n              ratio={ratio}\n            />,\n          ];\n        }}\n      />\n    </>\n  );\n}\n\nexport default VaultOwnerList;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Split, Header, IdentityBadge } from '@aragon/ui';\nimport { getERC20Info, getBalance } from '../../utils/infura';\n\nimport { options } from '../../constants/options';\n\nfunction OptionOverview({ oToken, tokenName }) {\n  const option = options.find((option) => option.addr === oToken);\n  const [balance, setBalance] = useState('0');\n  const [totalSupply, setTotalSupply] = useState('0');\n\n  useEffect(() => {\n    let isCancelled = false;\n    async function init() {\n      const [balance, tokenInfo] = await Promise.all([getBalance(oToken), getERC20Info(oToken)]);\n      const { totalSupply } = tokenInfo;\n      if (!isCancelled) {\n        setBalance(balance);\n        setTotalSupply(totalSupply);\n      }\n    }\n    init();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [oToken]);\n\n  return (\n    <>\n      <Header primary={option.name} />\n      <Split\n        primary={\n          <Split\n            primary={\n              <Box heading={'contract'} padding={15}>\n                <IdentityBadge entity={oToken} shorten={false} />\n              </Box>\n            }\n            secondary={\n              <Box heading={'balance'} padding={15}>\n                {balance}\n              </Box>\n            }\n          />\n        }\n        secondary={\n          <Box heading={'total supply'} padding={15}>\n            {totalSupply} {tokenName}\n          </Box>\n        }\n      />\n    </>\n  );\n}\n\nexport default OptionOverview;\n","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport VaultsList from './VaultsList';\nimport OptionInfoBox from './OptionInfoBox';\n\nfunction OptionPage({user}) {\n  let { token } = useParams();\n  return (\n    <>\n      <OptionInfoBox oToken={token} user={user} />\n      <VaultsList oToken={token} user={user}/>\n    </>\n  );\n}\n\nexport default OptionPage;\n","import React from 'react';\n\nimport { BalanceBlock, RatioTag, HelperText } from '../common';\nimport { formatDigits, toTokenUnitsBN } from '../../utils/number';\n\nconst HeaderDashboard = ({ ratio, minRatio, symbol, vault, decimals, newRatio, collateralDecimals, useCollateral }) => {\n  const tokenInUnit = vault.oTokensIssued ? toTokenUnitsBN(vault.oTokensIssued, decimals).toNumber() : '0';\n  const collateralBalance = vault.collateral \n  ? toTokenUnitsBN(vault.collateral, collateralDecimals).toString()\n  : '0'\n  \n  return (\n    <div style={{ padding: '2%', display: 'flex', alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset='Total Collateral' balance={formatDigits(collateralBalance, 6)} />\n      </div>\n      <div style={{ width: '50%' }}>\n        <BalanceBlock asset={`${symbol} Issued`} balance={tokenInUnit} />\n      </div>\n      <div style={{ width: '20%' }}>\n        <>\n          <div style={{ fontSize: 14, padding: 3 }}>\n            Current Ratio{' '}\n            {ratio > 0 ? <RatioTag isSafe={ratio >= minRatio} ratio={ratio} useCollateral={useCollateral} /> : <></>}\n          </div>\n          <div style={{ fontSize: 24, padding: 3 }}>\n            <span style={{ fontSize: 24 }}>{ratio.toString().split('.')[0]}</span>.\n            <span style={{ fontSize: 18 }}>{ratio.toString().split('.')[1]} </span>\n            {minRatio > 0 ? <span style={{ fontSize: 16 }}> / {minRatio} </span> : ''}\n          </div>\n          <> {newRatio === ratio ? '' : <HelperText label='New Ratio' amt={newRatio} />} </>\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport { getDecimals, getERC20Symbol } from '../../utils/infura'\nimport { addETHCollateral, addERC20Collateral, removeCollateral,  } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\nimport { formatDigits, toTokenUnitsBN, toBaseUnitBN } from '../../utils/number'\nimport { calculateRatio } from '../../utils/calculation'\nimport { ETH_ADDRESS } from '../../constants/options';\n\n/**\n * \n * @param {{isOwner: boolean, strikePrice:number, strikeValue:BigNumber, collateralAssetBalance: BigNumber }} param0 \n */\nfunction CollateralManagement({\n  isOwner,\n  vault,\n  collateralAsset,\n  collateralAssetBalance, // Bignumber, / token unit\n  token,\n  owner,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  setNewRatio\n}) {\n  const [addCollateralAmt, setAddCollateralAmt] = useState(0); // in token unit\n  const [removeCollateralAmt, setRemoveCollateralAmt] = useState(0); // in token unit\n\n  const [collateralDecimals, setCollateralDecimals] = useState(18)\n  const [collateralSymbol, setCollateralSymbol] = useState(0)\n\n  const collateralIsETH = collateralAsset === ETH_ADDRESS\n\n  useMemo(async()=>{\n    if(collateralIsETH) return\n    const decimals = await getDecimals(collateralAsset)\n    const symbol = await getERC20Symbol(collateralAsset)\n    setCollateralDecimals(decimals)\n    setCollateralSymbol(symbol)\n  }, [collateralAsset, collateralIsETH])\n\n  /**\n   * @param {number} newCollateral in wei\n   */\n  const updateNewRatio = (newCollateral) => {\n    if(!newCollateral || newCollateral <= 0) return 0\n    const str = newCollateral.toString()\n    const newRatio = calculateRatio(str, vault.oTokensIssued, strikePrice, strikeValue)\n    setNewRatio(formatDigits(newRatio,5))\n  }\n\n  return (\n    <Box heading={'Collateral'}>\n      <div style={{ display: 'flex' }}>\n        {/* balance */}\n        <div style={{ width: '30%' }}>\n          {BalanceBlock({ \n            asset: collateralIsETH ? 'Your ETH Balance' : `Your ${collateralSymbol} Balance`, \n            balance: formatDigits(collateralAssetBalance.toString(),6) })}\n        </div>\n        {/* Add collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={addCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value\n                    if (amt === '') {\n                      setAddCollateralAmt(0)\n                      return\n                    } \n                    setAddCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateralDecimals)\n                    const newCollateralInWei = new BigNumber(vault.collateral).plus(amtRaw).toNumber()\n                    updateNewRatio(newCollateralInWei)\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setAddCollateralAmt(collateralAssetBalance.toNumber());\n                    const collateralBalanceRaw = toBaseUnitBN(collateralAssetBalance, collateralDecimals)\n                    const newCollateral = new BigNumber(vault.collateral).plus(collateralBalanceRaw).toNumber()\n                    updateNewRatio(newCollateral)\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Add'\n                onClick={() => {\n                  collateralIsETH \n                    ? addETHCollateral(token, owner, addCollateralAmt)\n                    : addERC20Collateral(collateralAsset, token, owner, toBaseUnitBN(addCollateralAmt, collateralDecimals))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={removeCollateralAmt}\n                  onChange={(event) => {\n                    const amt = event.target.value\n                    if(amt === '') {\n                      setRemoveCollateralAmt(0)\n                      return\n                    }\n                    setRemoveCollateralAmt(amt);\n                    const amtRaw = toBaseUnitBN(amt, collateralDecimals)\n                    const newCollateralWei = new BigNumber(vault.collateral).minus(amtRaw).toNumber()\n                    updateNewRatio(newCollateralWei)\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikeValue.toNumber() <= 0) return;\n                    const strikePriceBN = new BigNumber(strikePrice)\n                    const tokenIssuedBN = new BigNumber(vault.oTokensIssued)\n                    const minRatioBN = new BigNumber(minRatio)\n                    const minCollateral = strikePriceBN.times(tokenIssuedBN).times(minRatioBN).times(strikeValue)\n                    // const minValueInStrike = strikePrice * vault.oTokensIssued * minRatio;\n                    // const minCollateral = minValueInStrike * strikeValue;\n                    const maxToRemove = new BigNumber(vault.collateral).minus(minCollateral).toString();\n                    const maxToRemoveInTokenUnit = toTokenUnitsBN(maxToRemove, collateralDecimals).toNumber()\n                    setRemoveCollateralAmt(maxToRemoveInTokenUnit);\n                    setNewRatio(minRatio)\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Remove'\n                onClick={() => {\n                  removeCollateral(collateralAsset, token, toBaseUnitBN(removeCollateralAmt, collateralDecimals).toString());\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\n\nexport default CollateralManagement","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js'\n\nimport { burnOToken, issueOToken } from '../../utils/web3';\nimport { BalanceBlock, MaxButton } from '../common';\nimport { toBaseUnitBN, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio } from '../../utils/calculation'\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\n\n/**\n * \n * @param {{\n * strikeValue: BigNumber, \n * tokenBalance: BigNumber, \n * strikePrice: Number, \n * decimals: Number\n * }} param0 \n */\nfunction IssuedTokenManagement({\n  isOwner,\n  vault,\n  tokenBalance,\n  token,\n  strikeValue,\n  strikePrice,\n  minRatio,\n  decimals,\n  symbol,\n  setNewRatio,\n}) {\n  const [issueAmt, setIssueAmt] = useState(new BigNumber(0));\n  const [burnAmt, setBurnAmt] = useState(new BigNumber(0));\n\n  /**\n   * \n   * @param {BigNumber} newAmt in raw amt\n   */\n  const updateNewRatio = (newAmt) => {\n    if(newAmt.lte(new BigNumber(0))) return\n    const newRatio = calculateRatio(vault.collateral, newAmt, strikePrice, strikeValue)\n    setNewRatio(newRatio);\n  };\n\n  const onChangeIssueAmt = (intputAmt) => {\n    if (!intputAmt){\n      setIssueAmt(new BigNumber(0))\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt)\n    setIssueAmt(amountBN);\n    updateNewRatio(new BigNumber(vault.oTokensIssued).plus(toBaseUnitBN(amountBN, decimals)));\n  }\n\n  const onClickIssueToken = () => {\n    issueOToken(\n      token, \n      toBaseUnitBN(issueAmt, decimals).toString()\n    );\n  }\n\n  const onChangeBurnAmt = (intputAmt) => {\n    if(!intputAmt) {\n      setBurnAmt(new BigNumber(0))\n      return;\n    }\n    const amountBN = new BigNumber(intputAmt)\n    updateNewRatio(new BigNumber(vault.oTokensIssued).minus(toBaseUnitBN(amountBN, decimals)));\n    setBurnAmt(amountBN);\n  }\n\n  const onClickBurnToken = () => {\n    burnOToken(\n      token, \n      toBaseUnitBN(burnAmt, decimals).toString()\n    );\n  }\n\n  return (\n    <Box heading={'Total Issued'}>\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock\n            asset={`Owner ${symbol} Balance `}\n            balance={tokenBalance.toString()}\n          />\n        </div>\n        {/* Issue More Token */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={issueAmt}\n                  onChange={(event) => onChangeIssueAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    if (strikePrice <= 0) return;\n                    // (vault.collateral) / (minRatio * strikePrice * strikeValue.toNumber());\n                    const maxTotal = new BigNumber(vault.collateral).div(\n                      new BigNumber(minRatio).times(new BigNumber(strikePrice)).times(strikeValue)\n                    )\n                      \n                    const maxToIssueRaw = maxTotal.minus(new BigNumber(vault.oTokensIssued));\n                    const maxToIssue = toTokenUnitsBN(maxToIssueRaw, decimals);\n                    setIssueAmt(maxToIssue);\n                    setNewRatio(minRatio);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Issue'\n                onClick={onClickIssueToken}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={burnAmt}\n                  onChange={(event) => onChangeBurnAmt(event.target.value)}\n                />\n                <MaxButton\n                  onClick={() => {\n                    const issued = toTokenUnitsBN(vault.oTokensIssued, decimals)\n                    const maxToBurn = tokenBalance.lt(issued) ? tokenBalance : issued; // min (issued, tokenBalance)\n                    setBurnAmt(maxToBurn);\n                    updateNewRatio(issued.minus(maxToBurn))\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                disabled={!isOwner}\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Burn'\n                onClick={onClickBurnToken}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nexport default IssuedTokenManagement;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nimport { Box, DataView, IdentityBadge, TransactionBadge, TextInput, Button } from '@aragon/ui';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { liquidate } from '../../utils/web3';\nimport { getMaxLiquidatable } from '../../utils/infura';\nimport { getLiquidationHistory } from '../../utils/graph';\nimport { formatDigits, fromWei, toTokenUnitsBN, timeSince, toBaseUnitBN } from '../../utils/number';\n\n/**\n * \n * @param {{userTokenBalance: BigNumber}} param0 \n */\nfunction LiquidationHistory({ owner, token, isOwner, tokenDecimals, userTokenBalance }) {\n  const [maxLiquidatable, setMaxLiquidatable] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n\n  const [amountToLiquidate, setAmtToLiquidate] = useState(0);\n\n  useEffect(() => {\n    async function updateLiquidatable() {\n      const maxToLiquidate = await getMaxLiquidatable(token, owner);\n      setMaxLiquidatable(toTokenUnitsBN(maxToLiquidate, tokenDecimals).toNumber());\n    }\n\n    updateLiquidatable();\n  });\n\n  useMemo(async () => {\n    async function updateList() {\n      const actions = await getLiquidationHistory(owner);\n      const actionsForThisVault = actions.filter(\n        (entry) => entry.vault.optionsContract.address === token\n      );\n      setEntries(actionsForThisVault);\n      setIsLoading(false);\n    }\n    updateList();\n  }, [owner, token]);\n\n  return (\n    <>\n      {isOwner ? <></> : (\n        <Box heading={'Liquidate'}>\n          <>\n            <div style={{ display: 'flex' }}>\n              {/* balance */}\n              <div style={{ width: '30%' }}>\n                <BalanceBlock asset={`Max To Liquidate`} balance={maxLiquidatable} />\n              </div>\n              <div style={{ width: '70%', paddingTop: '2%' }}>\n                <div style={{ display: 'flex' }}>\n                  <div style={{ width: '60%' }}>\n                    <>\n                      <TextInput\n                        type='number'\n                        wide={true}\n                        value={amountToLiquidate}\n                        onChange={(event) => {\n                          setAmtToLiquidate(event.target.value);\n                        }}\n                      />\n                      <MaxButton\n                        onClick={() => {\n                          const maximum = Math.min(userTokenBalance.toNumber(), maxLiquidatable);\n                          setAmtToLiquidate(maximum);\n                        }}\n                      />\n                    </>\n                  </div>\n                  <div style={{ width: '40%' }}>\n                    <Button\n                      disabled={maxLiquidatable <= 0}\n                      label='Liquidate'\n                      onClick={() => {\n                        const amtToLiquidate = toBaseUnitBN(amountToLiquidate, tokenDecimals).toString();\n                        liquidate(token, owner, amtToLiquidate);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        </Box>\n      )}\n\n      {/* History Section */}\n      <Box heading={'History'}>\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Amount', 'Liquidator', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({ collateralToPay, liquidator, timestamp, transactionHash }) => {\n            return [\n              <TransactionBadge transaction={transactionHash} />,\n              formatDigits(fromWei(collateralToPay), 5),\n              <IdentityBadge entity={liquidator} />,\n              timeSince(parseInt(timestamp * 1000)),\n            ];\n          }}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default LiquidationHistory;\n","import React, { useState, useMemo } from 'react';\n\nimport { Box, DataView, IdentityBadge, TransactionBadge } from '@aragon/ui';\n\n\nimport { getExerciseHistory } from '../../utils/graph';\nimport { formatDigits, toTokenUnitsBN, timeSince } from '../../utils/number';\n\nfunction ExerciseHistory({ owner, token, collateralDecimals, tokenDecimals  }) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n  \n  useMemo(async () => {\n    const actions = await getExerciseHistory(owner, token);\n    setEntries(actions);\n    setIsLoading(false);\n  }, [owner, token]);\n\n  return (\n    <>\n      {/* History Section */}\n      <Box heading={'History'}>\n        <DataView\n          status={isLoading ? 'loading' : 'default'}\n          fields={['Tx', 'Collateral', 'oToken', 'Exerciser', 'Time']}\n          entries={entries}\n          entriesPerPage={4}\n          renderEntry={({ amtCollateralToPay,  oTokensToExercise, exerciser, timestamp, transactionHash }) => {\n            return [\n              <TransactionBadge transaction={transactionHash} />,\n              formatDigits(\n                toTokenUnitsBN(amtCollateralToPay, collateralDecimals).toNumber(),\n                5\n              ),\n              formatDigits(\n                toTokenUnitsBN(oTokensToExercise, tokenDecimals).toNumber(),\n                5\n              ),\n              <IdentityBadge entity={exerciser} />,\n              timeSince(parseInt(timestamp * 1000)),\n            ];\n          }}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default ExerciseHistory;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Header, Tabs, Box, Timer, Button } from '@aragon/ui';\n\nimport HeaderDashboard from './HeaderDashboard';\nimport CollateralManagement from './CollateralManagement';\nimport IssuedTokenManagement from './IssuedTokenManagement';\nimport LiquidationHistory from './Liquidation';\nimport ExerciseHistory from './Exercise';\n\nimport { formatDigits, toTokenUnitsBN } from '../../utils/number';\nimport { calculateRatio, calculateStrikeValueInCollateral } from '../../utils/calculation';\nimport { getTokenBalance, getBalance, getDecimals } from '../../utils/infura';\nimport { getAllVaultsForUser } from '../../utils/graph';\nimport { redeem } from '../../utils/web3';\n\nimport { options, ETH_ADDRESS } from '../../constants/options';\nimport BigNumber from 'bignumber.js';\n\nfunction ManageVault({ user }) {\n  let { token, owner } = useParams();\n\n  const option = options.find((option) => option.addr === token);\n  const { decimals, symbol, oracle, strike, strikePrice, minRatio, collateral, expiry } = option;\n\n  // Tab Navigation\n  const [tabSelected, setTabSelected] = useState(0);\n\n  const [vault, setVault] = useState({});\n  const [strikeValueInCollateral, setStrikeValue] = useState(new BigNumber(0));\n  const [ratio, setRatio] = useState(0);\n\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [userCollateralAssetBalance, setUserCollateralAssetBalance] = useState(new BigNumber(0));\n\n  // status\n  const [noVault, setNoVault] = useState(true);\n  const [newRatio, setNewRatio] = useState(ratio);\n\n  const [collateralDecimals, setCollateralDecimals] = useState(18);\n  const collateralIsETH = collateral === ETH_ADDRESS;\n\n  const vaultUsesCollateral = collateral !== strike;\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateInfo() {\n      const vault = (await getAllVaultsForUser(owner)).find(\n        (vault) => vault.optionsContract.address === token\n      );\n      if (vault === undefined) {\n        return;\n      }\n      setNoVault(false);\n      let [_ownerTokenBalance, _userTokenBalance] = await Promise.all([\n        getTokenBalance(token, owner),\n        getTokenBalance(token, user),\n      ]);\n\n      // SetUserCollateralAmount\n      let collateralBalance = new BigNumber(0)\n      let _collateralDecimals = 18;\n\n      if (collateralIsETH) {\n        collateralBalance = new BigNumber(await getBalance(user));\n      } else {\n        const _tokenBalance = await getTokenBalance(collateral, user);\n        _collateralDecimals = await getDecimals(collateral);\n        collateralBalance = toTokenUnitsBN(_tokenBalance, _collateralDecimals);\n      }\n\n      const _ownerTokenBalanceBN = toTokenUnitsBN(_ownerTokenBalance, decimals);\n      const _userTokenBalanceBN = toTokenUnitsBN(_userTokenBalance, decimals);\n\n      const strikeValueInCollateral = await calculateStrikeValueInCollateral(\n        collateral,\n        strike,\n        oracle\n      );\n      const ratio = calculateRatio(\n        vault.collateral,\n        vault.oTokensIssued,\n        strikePrice,\n        strikeValueInCollateral\n      );\n\n      if (!isCancelled) {\n        setStrikeValue(strikeValueInCollateral);\n        setVault(vault);\n        setCollateralDecimals(_collateralDecimals);\n        setOwnerTokenBalance(_ownerTokenBalanceBN);\n        setUserTokenBalance(_userTokenBalanceBN);\n        setRatio(formatDigits(ratio, 5));\n        setUserCollateralAssetBalance(collateralBalance);\n      }\n    }\n    updateInfo();\n    const id = setInterval(updateInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [\n    collateral,\n    collateralDecimals,\n    collateralIsETH,\n    decimals,\n    oracle,\n    owner,\n    strike,\n    strikePrice,\n    token,\n    user,\n    vaultUsesCollateral,\n  ]);\n\n  const isOwner = user === owner;\n\n  return noVault ? (\n    <div style={{ padding: 100, textAlign: 'center' }}> No Vault Found for this user </div>\n  ) : (\n    <>\n      <Header\n        primary={isOwner ? 'Manage Your Vault' : 'Vault Detail'}\n        secondary={\n          expiry * 1000 > Date.now() ? (\n            <Timer end={new Date(expiry * 1000)} />\n          ) : (\n            <Button onClick={() => redeem(token)} label={'Redeem'} />\n          )\n        }\n      />\n\n      <HeaderDashboard\n        owner={owner}\n        user={user}\n        ratio={ratio}\n        minRatio={minRatio}\n        vault={vault}\n        decimals={decimals}\n        symbol={symbol}\n        newRatio={newRatio}\n        useCollateral={vaultUsesCollateral}\n        collateralIsETH={collateralIsETH}\n        collateralDecimals={collateralDecimals}\n      />\n\n      <Tabs\n        items={['Collateral Management', 'Token Issuance', 'Liquidation', 'Exercise']}\n        selected={tabSelected}\n        onChange={setTabSelected}\n      />\n\n      {tabSelected === 0 ? (\n        <CollateralManagement\n          isOwner={isOwner}\n          vault={vault}\n          collateralAssetBalance={userCollateralAssetBalance}\n          collateralAsset={option.collateral}\n          token={token}\n          owner={owner}\n          strikeValue={strikeValueInCollateral}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 1 ? (\n        <IssuedTokenManagement\n          isOwner={isOwner}\n          vault={vault}\n          tokenBalance={ownerTokenBalance}\n          token={token}\n          strikeValue={strikeValueInCollateral}\n          strikePrice={strikePrice}\n          minRatio={minRatio}\n          decimals={decimals}\n          symbol={symbol}\n          setNewRatio={setNewRatio}\n        />\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 2 ? (\n        vaultUsesCollateral ? (\n          <LiquidationHistory\n            userTokenBalance={userTokenBalance}\n            isOwner={isOwner}\n            owner={owner}\n            token={token}\n            tokenDecimals={decimals}\n          />\n        ) : (\n          <Box> This vault cannot be liquidated </Box>\n        )\n      ) : (\n        <></>\n      )}\n\n      {tabSelected === 3 ? (\n        <ExerciseHistory\n          owner={owner}\n          token={token}\n          tokenDecimals={decimals}\n          collateralDecimals={collateralDecimals}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default ManageVault;\n","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport BigNumber from 'bignumber.js'\n\nimport { BalanceBlock, AddressBlock } from '../common';\n\n/**\n * \n * @param {{ poolTokenBalance: BigNumber, poolETHBalance: BigNumber }}  \n */\nconst HeaderDashboard = ({ symbol, poolETHBalance, poolTokenBalance, uniswapExchange }) => {\n  return (\n    <div style={{ padding: '2%', display: 'flex',  alignItems: 'center' }}>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset='Total ETH Liquidity' balance={poolETHBalance} />\n      </div>\n      <div style={{ width: '30%' }}>\n        <BalanceBlock asset={`${symbol} Liquidity`} balance={poolTokenBalance} />\n      </div>\n      <div style={{ width: '40%' }}>\n        <>\n          <AddressBlock label=\"Uniswap Contract\" address={uniswapExchange} />\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import React, { useState } from 'react';\n\nimport { buyOTokensFromExchange, sellOTokensFromExchange } from '../../utils/web3';\n\nimport { getPremiumToPay, getPremiumReceived } from '../../utils/infura';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconCircleMinus } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\n/**\n * \n * @param {{\n *  decimals: number\n *  tokenBalance: BigNumber\n * }} param0 \n */\nfunction OptionExchange({ symbol, tokenBalance, token, exchange, decimals }) {\n  const [buyAmt, setBuyAmt] = useState(new BigNumber(0));\n  const [sellAmt, setSellAmt] = useState(new BigNumber(0));\n  const [premiumToPay, setPremiumToPay] = useState(new BigNumber(0));\n  const [premiumReceived, setPremiumReceived] = useState(new BigNumber(0));\n\n  const updatePremiumToPay = async (buyAmt) => {\n    const butAmountBN = new BigNumber(buyAmt)\n    if (butAmountBN.lte(new BigNumber(0))) {\n      setPremiumToPay(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(butAmountBN, decimals).toString();\n    const premium = await getPremiumToPay(exchange, token, amount);\n    setPremiumToPay(new BigNumber(premium));\n  };\n\n  const updatePremiumReceived = async (sellAmt) => {\n    const sellAmountBN = new BigNumber(sellAmt)\n    if (sellAmountBN.lte(new BigNumber(0))) {\n      setPremiumReceived(new BigNumber(0));\n      return;\n    }\n    const amount = toBaseUnitBN(sellAmountBN, decimals).toString();\n    const premium = await getPremiumReceived(exchange, token, amount);\n    setPremiumReceived(new BigNumber(premium));\n  };\n\n  return (\n    <Box heading={'Exchange'}>\n      <div style={{ display: 'flex' }}>\n        {/* total Issued */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`${symbol} Balance`} balance={tokenBalance} />\n        </div>\n        {/* Buy Token from Uniswap */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={buyAmt}\n                  onChange={(event) => {\n                    if(event.target.value){\n                      setBuyAmt(event.target.value);\n                      updatePremiumToPay(event.target.value);\n                    } else {\n                      setBuyAmt(new BigNumber(0));\n                      updatePremiumToPay(new BigNumber(0));\n                    }\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Buy'\n                onClick={() => {\n                  buyOTokensFromExchange(\n                    token,\n                    exchange,\n                    toBaseUnitBN(buyAmt, decimals).toString(),\n                    toBaseUnitBN(premiumToPay, 18).toString()\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label='Cost:' amt={premiumToPay.toString()} symbol='' />\n        </div>\n        <div style={{ width: '6%' }}></div>\n        {/* Remove collateral */}\n        <div style={{ width: '32%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%' }}>\n              <>\n                <TextInput\n                  type='number'\n                  wide={true}\n                  value={sellAmt}\n                  onChange={(event) => {\n                    if(event.target.value) {\n                      setSellAmt(event.target.value);\n                      updatePremiumReceived(event.target.value);\n                    } else {\n                      setSellAmt(new BigNumber(0))\n                      updatePremiumReceived(new BigNumber(0));\n                    }\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setSellAmt(tokenBalance);\n                    updatePremiumReceived(tokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%' }}>\n              <Button\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Sell'\n                onClick={() => {\n                  sellOTokensFromExchange(\n                    token, \n                    exchange, \n                    toBaseUnitBN(sellAmt, decimals).toString()\n                  );\n                }}\n              />\n            </div>\n          </div>\n          <PriceSection label='Premium' amt={premiumReceived} />\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default OptionExchange;\n","import React, { useState } from 'react';\nimport BigNumber from 'bignumber.js'\nimport { addLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { Box, TextInput, Button, IconCirclePlus, IconEthereum } from '@aragon/ui';\n\n/**\n * \n * @param {{ \n * poolTokenBalance: BigNumber, \n * poolETHBalance:BigNumber, \n * liquidityTokenSupply: BigNumber, \n * userTokenBalance: BigNumber, \n * userETHBalance:BigNumber \n * uniswapExchange: string\n * }} param0 \n */\nfunction AddLiquidity({ \n  otoken, \n  otokenSymbol, \n  otokenDecimals, \n  userTokenBalance, \n  userETHBalance,\n  uniswapExchange,\n  poolTokenBalance, \n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply\n}) {\n  const SLIPPAGE_RATE = 3;\n\n\n  const [amtETHToAdd, setAmtETHToAdd] = useState(new BigNumber(0));\n  const [amtTokenToAdd, setAmtTokenToAdd] = useState(new BigNumber(0));\n\n  const liquidityMinted = (liquidityTokenSupply.times( amtETHToAdd)).div(poolETHBalance);\n  const liquidityMintedMin = (liquidityMinted.times(new BigNumber(100 - SLIPPAGE_RATE))).div(new BigNumber(100))\n  const ethToTokenRatio = poolETHBalance.div(poolTokenBalance);\n  const tokenToEthRatio = poolTokenBalance.div(poolETHBalance);\n\n  const onChangeETHAmtToSend = (ethAmt) => {\n    if (!ethAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return\n    }\n\n    const newTokenAmt = (new BigNumber(ethAmt).times(tokenToEthRatio));\n    setAmtETHToAdd(new BigNumber(ethAmt));\n    setAmtTokenToAdd(newTokenAmt);\n  };\n\n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if (!tokenAmt) {\n      setAmtTokenToAdd(new BigNumber(0));\n      setAmtETHToAdd(new BigNumber(0));\n      return\n    }\n\n    const newEthAmt = new BigNumber(tokenAmt).times(ethToTokenRatio);\n    setAmtETHToAdd(newEthAmt);\n    setAmtTokenToAdd(new BigNumber(tokenAmt));\n  };\n\n  return (\n    <Box heading={'Add Liquidity'}>\n      <div style={{ display: 'flex' }}>\n        {/* Pool Status */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`ETH Balance`} balance={userETHBalance} />\n        </div>\n        {/* Add Liquidity too pool */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n                <TextInput\n                  adornmentPosition='end'\n                  adornment={otokenSymbol}\n                  type='number'\n                  wide={true}\n                  value={amtTokenToAdd.toNumber()}\n                  onChange={(event) => {\n                    onChangeTokenAmtToSend(event.target.value);\n                  }}\n                />\n                <MaxButton\n                  onClick={() => {\n                    onChangeTokenAmtToSend(userTokenBalance);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition='end'\n                adornment={<IconEthereum />}\n                type='number'\n                wide={true}\n                value={amtETHToAdd.toNumber()}\n                onChange={(event) => {\n                  onChangeETHAmtToSend(event.target.value);\n                }}\n              />\n              <PriceSection label='Mint' amt={liquidityMinted} symbol='Pool Tokens' />\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide={true}\n                icon={<IconCirclePlus />}\n                label='Add Liquidity'\n                onClick={() => {\n                  const maxToken = toBaseUnitBN(amtTokenToAdd, otokenDecimals).toString();\n                  const minLiquidity = toBaseUnitBN(liquidityMintedMin, liquidityTokenDecimals).toString();\n                  const ethWei = toBaseUnitBN(amtETHToAdd, 18).toString()\n                  addLiquidity(\n                    otoken,\n                    uniswapExchange,\n                    maxToken,\n                    minLiquidity,\n                    ethWei\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default AddLiquidity;\n","import React, { useState } from 'react';\n\nimport { removeLiquidity } from '../../utils/web3';\n\nimport { BalanceBlock, MaxButton } from '../common';\nimport { toBaseUnitBN } from '../../utils/number';\nimport { Box, TextInput, Button, IconCircleMinus, IconFundraising } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\n\n/**\n * \n * @param {{\n *  otokenDecimals: number,\n *  liquidityTokenDecimals: number,\n *  otokenSymbol: string,\n *  uniswapExchange: string\n *  userliquidityTokenBalance: BigNumber\n *  poolTokenBalance: BigNumber\n *  poolETHBalance: BigNumber\n *  liquidityTokenDecimals: BigNumber\n *  liquidityTokenSupply: BigNumber\n * \n * }} param0 \n */\nfunction RemoveLiquidity({ \n  otokenSymbol, \n  otokenDecimals, \n  userliquidityTokenBalance,\n  uniswapExchange, \n  poolTokenBalance, \n  poolETHBalance,\n  liquidityTokenDecimals,\n  liquidityTokenSupply\n}) {\n  const SLIPPAGE_RATE = 3;\n\n  const [amtLiquidityTokenToSell, setAmtLiquidityTokenToSell] = useState(new BigNumber(0));\n\n  const poolPortion = amtLiquidityTokenToSell.div(liquidityTokenSupply)\n  const estETHRecieved = poolETHBalance.times(poolPortion)\n  const estOTokenReceived = poolTokenBalance.times(poolPortion)\n\n  const minETHReceived = estETHRecieved.times( new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100))\n  const minTokenReceived = estOTokenReceived.times( new BigNumber(100 - SLIPPAGE_RATE)).div(new BigNumber(100))\n  \n  const onChangeTokenAmtToSend = (tokenAmt) => {\n    if(!tokenAmt) {\n      setAmtLiquidityTokenToSell(new BigNumber(0))\n      return\n    }\n    const tokenAmtBN = new BigNumber(tokenAmt)\n    setAmtLiquidityTokenToSell(tokenAmtBN)\n  };\n\n  return (\n    <Box heading={'Remove Liquidity'}>\n      <div style={{ display: 'flex' }}>\n        {/* Pool Token in Hold */}\n        <div style={{ width: '30%' }}>\n          <BalanceBlock asset={`Pool Token Balance`} balance={userliquidityTokenBalance} />\n        </div>\n        {/* Remove */}\n        <div style={{ width: '70%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <TextInput\n                adornmentPosition='end'\n                adornment={<IconFundraising />}\n                type='number'\n                wide={true}\n                value={amtLiquidityTokenToSell.toNumber()}\n                onChange={(event) => {\n                  onChangeTokenAmtToSend(event.target.value);\n                }}\n              />\n              <MaxButton\n                onClick={()=>setAmtLiquidityTokenToSell(userliquidityTokenBalance)}\n              />\n            </div>\n            <div style={{ width: '35%', marginRight: '5%' }}>\n              <>\n              <PriceSection label='You get' amt={estETHRecieved} symbol='ETH' />\n              <PriceSection label='+' amt={estOTokenReceived} symbol={otokenSymbol} />\n              </>\n            </div>\n            <div style={{ width: '30%' }}>\n              <Button\n                wide={true}\n                icon={<IconCircleMinus />}\n                label='Remove Liquidity'\n                onClick={() => {\n                  const amt = toBaseUnitBN(amtLiquidityTokenToSell, liquidityTokenDecimals).toString()\n                  const min_eth = toBaseUnitBN(minETHReceived, 18).toString()\n                  const min_token = toBaseUnitBN(minTokenReceived, otokenDecimals).toString()\n                  \n                  removeLiquidity(\n                    uniswapExchange,\n                    amt,\n                    min_eth,\n                    min_token\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Box>\n  );\n}\n\nfunction PriceSection({ label, amt, symbol = '' }) {\n  if (parseFloat(amt) > 0) {\n    return (\n      <div style={{ padding: 3, opacity: 0.5 }}>\n        <span style={{ fontSize: 13 }}> {label} </span>{' '}\n        <span style={{ fontSize: 13 }}> {parseFloat(amt).toFixed(5)} </span>{' '}\n        <span style={{ fontSize: 13 }}> {symbol} </span>\n      </div>\n    );\n  } else return <div style={{ padding: 3, opacity: 0.5 }}></div>;\n}\n\nexport default RemoveLiquidity;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from '@aragon/ui';\n\nimport { getTokenBalance, getBalance, getERC20Info } from '../../utils/infura';\nimport { toTokenUnitsBN } from '../../utils/number'\n\n\nimport { options } from '../../constants/options';\n\nimport DashBoard from './Header';\nimport OptionExchange from './OptionExchange'\n\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity'\nimport BigNumber from 'bignumber.js';\n\nfunction ManagePool({ user }) {\n\n  let { token } = useParams();\n\n  const option = options.find((option) => option.addr === token);\n  const { uniswapExchange, decimals, symbol, exchange } = option;\n\n  const [poolTokenBalance, setPoolTokenBalance] = useState(new BigNumber(0));\n  const [userTokenBalance, setUserTokenBalance] = useState(new BigNumber(0));\n  const [poolETHBalance, setPoolETHBalance] = useState(new BigNumber(0));\n  const [userETHBalance, setUserETHBalance] = useState(new BigNumber(0));\n\n  const [userliquidityTokenBalance, setUserLiquidityTokenBalance] = useState(new BigNumber(0));\n  const [liquidityTokenSupply, setLiquidityTokenSupply] = useState(new BigNumber(0));\n  const [liquidityTokenDecimals, setLiquidityTokenDecimals] = useState(0);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updatePoolInfo() {\n      let [exTokenBalance, exchagneETHBalance, liquidityTokenInfo] = await Promise.all([\n        getTokenBalance(token, uniswapExchange),\n        getBalance(uniswapExchange),\n        getERC20Info(uniswapExchange),\n      ]);\n      const { decimals: liqTokenDecimal, totalSupply: liqTokenTotalSupply } = liquidityTokenInfo;\n      const exchangeTokenBalance = toTokenUnitsBN(exTokenBalance, decimals);\n      if (!isCancelled) {\n        setLiquidityTokenDecimals(liqTokenDecimal);\n        setLiquidityTokenSupply(new BigNumber(liqTokenTotalSupply));\n        setPoolETHBalance(new BigNumber(exchagneETHBalance));\n        setPoolTokenBalance(exchangeTokenBalance);\n      }\n    }\n    updatePoolInfo();\n    const id = setInterval(updatePoolInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, token, uniswapExchange]);\n\n  useEffect(() => {\n    if (user === '') return;\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      let [tokenBalance, userETHBalance, liqTokenBalance] = await Promise.all([\n        getTokenBalance(token, user),\n        getBalance(user),\n        getTokenBalance(uniswapExchange, user),\n      ]);\n\n      const userTokenBalance = toTokenUnitsBN(tokenBalance, decimals);\n      const userLiqTokenBalance = toTokenUnitsBN(liqTokenBalance, liquidityTokenDecimals);\n      if (!isCancelled) {\n        setUserLiquidityTokenBalance(userLiqTokenBalance);\n        setUserETHBalance(userETHBalance);\n        setUserTokenBalance(userTokenBalance);\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 10000);\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [decimals, liquidityTokenDecimals, token, uniswapExchange, user]);\n\n  return (\n    <>\n      <Header primary='Exchange' />\n\n      <DashBoard\n        user={user}\n        symbol={symbol}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        uniswapExchange={uniswapExchange}\n      />\n\n      <OptionExchange\n        symbol={symbol}\n        tokenBalance={userTokenBalance}\n        token={token}\n        exchange={exchange}\n        decimals={decimals}\n      />\n\n      <Header primary='Provide Liquidity' />\n\n      <AddLiquidity\n        user={user}\n        otoken={token}\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userTokenBalance={userTokenBalance}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n\n      <RemoveLiquidity\n        otokenDecimals={decimals}\n        otokenSymbol={symbol}\n        userliquidityTokenBalance={userliquidityTokenBalance}\n        userETHBalance={userETHBalance}\n        uniswapExchange={uniswapExchange}\n        poolETHBalance={poolETHBalance}\n        poolTokenBalance={poolTokenBalance}\n        liquidityTokenDecimals={liquidityTokenDecimals}\n        liquidityTokenSupply={liquidityTokenSupply}\n      />\n    </>\n  );\n}\n\nexport default ManagePool;\n","import React from 'react'\n\nimport { Link } from '@aragon/ui'\n\nfunction Footer({theme}) {\n  var style = {\n    backgroundColor: theme === 'light' ? \"#F8F8F8\" : '#35425e' ,\n    textAlign: \"center\",\n    padding: \"17px\",\n    position: \"fixed\",\n    left: \"0\",\n    bottom: \"0\",\n    height: \"50px\",\n    width: \"100%\",\n    fontSize: \"12px\"\n  }\n\n  return (  \n    <div style={style}>\n      Powered By {' '}\n      <Link  external={true} href=\"https://opyn.co/#/\">Opyn</Link>{', '} \n      <Link  external={true} href=\"https://ui.aragon.org/\">Aragon UI</Link>{', '}  \n      <Link  external={true} href=\"https://www.blocknative.com/\">Blocknative</Link>{'. '}  \n      Hosted on <Link  external={true} href=\"https://github.com/antoncoding/opyn-liquidator\">GitHub</Link>.\n    </div>\n  )\n}\n\nexport default Footer","import React, { useState } from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { updateModalMode } from './utils/web3'\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage'\nimport AllOptoins from './components/AllContracts';\nimport Trade from './components/Trade'\nimport MyVaults from './components/MyVaults'\nimport OptionPage from './components/OptionPage';\nimport ManageVault from './components/ManageVault'\nimport ManagePool from './components/ManagePool'\nimport Footer from './components/Footer';\nimport { Main } from '@aragon/ui';\n\nfunction App() {\n  const storedTheme = window.localStorage.getItem('theme') || 'light';\n\n  const [user, setUser] = useState(''); // the current connected user\n  const [theme, setTheme] = useState(storedTheme);\n\n  const updateTheme = (theme) => {\n    setTheme(theme);\n    updateModalMode(theme)\n    window.localStorage.setItem('theme', theme);\n  };\n\n  return (\n    <Router>\n      <Main assetsUrl={`${process.env.PUBLIC_URL}/aragon-ui/`} theme={theme}>\n        <NavBar user={user} setUser={setUser} theme={theme} updateTheme={updateTheme} />\n\n        <Switch>\n          {/* All Options */}\n          <Route path='/option/:token' children={<OptionPage user={user} />} />\n          <Route path='/options/' children={<AllOptoins />} />\n          {/* My Vaults */}\n          <Route path='/myvaults' children={<MyVaults user={user} />} />\n          <Route path='/manage/:token/:owner' children={<ManageVault user={user}/>} />\n          {/* Trade */}\n          <Route path='/trade/:token/' children={<ManagePool user={user} />} />\n          <Route path='/trade/' children={<Trade/>} />\n          {/* HomePage */}\n          <Route path='/' children={<HomePage/>} />\n        </Switch>\n        <Footer theme={theme} />\n      </Main>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}